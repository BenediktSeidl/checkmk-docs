include::global_attr.adoc[]
= Notifications via Mattermost
:revdate: 2020-08-14
:title: Notifications via Mattermost
:description: Connect the self-hosted open source alternative to Slack with Checkmk and receive notifications via webhook.

{related-start}
link:notifications.html[Notifications]
{related-end}


== Function

link:https://mattermost.com[Mattermost] is the self-hosted open
source alternative to Slack, which can also be provided with notifications
via Webhook.

If you have just set up the Mattermost server, webhooks will already be active.
However you can also enable them later in the Mattermost [.guihint]#System Console# --
i.e. the server's administration interface --
under [.guihint]#Integrations => Integration Management#.

Another prerequisite is that you have at least one group -- otherwise you will
not be able to access the Web Client View at all. Proceed as follows:

. In the group view, open [.guihint]#Integrations# from the main menu.
. Create a new webhook via [.guihint]#Incoming Webhooks => Add Incoming Webhook.#
. Enter a name and description as required, and select the channel for the postings with the notifications.

With these actions the webhook URL will be generated -- copy this URL for use
in the next step.


== Configuration in {CMK}

As with Slack, an activation in {CMK} only requires the webhook URL:

. For the [.guihint]#Notification Method# select [.guihint]#Slack or Mattermost.#
. Enter (insert) the copied webhook URL.

image::notifications_mattermost.png[]

Optionally, you may specify URL prefixes to control links on your {CMK} GUI
within the notification. Instead of specifying the webhook URL directly here,
you can also use WATO's password store and read the URL from one of its entries.

For testing you can use the [.guihint]#Fake check results#
and [.guihint]#Custom notification# link:commands.html[commands].
