= Detailed Installation Instructions
:revdate: 2018-02-26
[.seealso][#introduction] [#check_mk_getting_started] [#introduction_virt1]MT:Details for an installation in Linux
MD:Each distribution has its own special features which need to be considered during a software installation. These requirements are described in detail here.


== The Basics

===  Why Linux?
(CMK) is a comprehensive software package, which basically requires _Linux_
as its operating system. Why? Linux is an excellent platform for the operation of
(CMK), because it is very performant and stable, and many important tools are
already integrated. Alongside this there is the pleasant side benefit of the availability
of completely-free distributions of Linux with Debian, Ubuntu and CentOS,
which are enterprise-capable and supported by (CMK). This article shows you how
to install and run (CMK) on an existing Linux system.

If you do not want to deal with Linux under any circumstances, it is also possible to
run (CMK) as [introduction_virt1|a virtual appliance],
<a href="appliance.php#physical_appliance">a physical appliance</a>, or as
[introduction_docker|a Docker-Container].


=== Supported Distributions

image::bilder/linux.png[align=left,width=150]

Linux is a free system and offered by many producers in their own variants (distributions).  This is of course very positive, because competition stimulates business, increases quality, and as a user you always have the possibility to switch to a Linux distribution that is better-suited to your needs.

However, this diversity also has a disadvantage: The available distributions differ in many details, among other things also in the versions of the provided software libraries, directory paths, pre-configuration, etc.

To make sure that everything runs smoothly with (CMK), we decided from the very beginning to develop a separate installation package of (CMK) for every important Linux distribution -- and even for every single version of these distributions, as long as it is still being maintained by the developer. More work for us -- less stress for you!

We currently support the following Linux distributions:

* SuSE LINUX Enterprise Server (SLES) from Version 11
* Red Hat Enterprise Linux (RHEL) from Version 6.0
* CentOS from Version 6.0
* Debian from Version 7.0
* Ubuntu from Version 14.04

For (CMK) the installation you need a physical or virtual server on which you have already installed Linux.
The installation is then achieved in four steps:

. Preparing the Linux-System
. Setting-up the package sources
. Downloading of the appropriate (CMK) package
. Installation of the (CMK) package


== Installation and preparation of the Linux system

Depending on which Distribution you are installing, different steps are necessary for the preparation.
For this reason we will assume that the Linux system on which the (CMK) is to be installed
has been installed with the developer’s default settings, and correctly-connected to the network,
so that it is accessible via HTTP and SSH from your workplace.

=== Partitioning hard drive space

(CMK) stores its data under the `/opt/omd` physical path.
If the system is to be used exclusively for (CMK), the major part of the hard drive’s free space
should be available. In this case it is not essential -- but very desirable -- that `/opt/omd`,
or `/opt` has its own partition.

[#smtpconfig]
=== SMTP for outgoing emails

If you wish to send Monitoring Notifications by email, then for outgoing emails a correct configuration of the SMTP service is required. This is set up with the distribution’s respective tool during the installation.
Usually you define a Smarthost to which all emails are to be redirected.

=== Settings for the system time

In order for the monitoring server to have a correct system time, we strongly recommend setting up NTP.
The hardware clock should be set to UTC. As soon as the server is taken into monitoring with (CMK),
NTP will ensure the correct time is used for all functions.

== Setting up the package sources

(CMK) requires a number of software packages from your Linux distribution. Third-party software is
not required. In order that all necessary packages can be subsequently installed, a correct configuration
of the software sources is necessary. The setup procedure varies depending on the Distribution being used.

=== Debian and Ubuntu

Here all package sources are already set up and no further steps are needed.

=== SLES 11

Unfortunately SUSE has some of its important packages on a separate DVD. This is labelled _SUSE Linux Enterprise SDK_.
Install this with YaST as a second package source. Please don’t confuse the SDK with DVD 2 of the normal installation DVD.
This last contains the sofware’s source codes and is not required.
If you have a valid SLES subscription you can download the ISO image of the SDK directly from the
<a href="https://download.suse.com/">SuSE</a> website.

[#sles12]
=== SLES 12

With SLES 12 some software components, eg. PHP, which is required by OMD, are stored in so-called Modules.
In order to be able to access SLES 12’s PHP packages, the following steps need to be taken:

* <a href="https://www.suse.com/documentation/sles-12/book_sle_deployment/data/sec_i_yast2_conf_manual_cc.html">Register the system</a>
* <a href="https://www.suse.com/documentation/sles-12/book_sle_deployment/data/sec_i_yast2_inst_mode_addon.html">Subscribe to the module ‘Web and Scripting’</a>

Unfortunately two further required packages that must be manually-installed were not included until (CMK) version VERSION[1.2.8].
At present these can only be obtained from the <a href="https://download.opensuse.org/repositories/Apache:/Modules/openSUSE_Tumbleweed/x86_64">OpenSUSE repositories</a>. Please keep in mind that the version number can differ:

*  `apache2-mod_fcgid-2.3.9-50.23.x86_64.rpm`
*  `python-reportlab-3.2.0-1.3.x86_64.rpm`

Here is an installation example:

[source,bash]
----
RP:wget https://download.opensuse.org/repositories/Apache:/Modules/openSUSE_Tumbleweed/x86_64/apache2-mod_fcgid-2.3.9-50.23.x86_64.rpm
RP:zypper install apache2-mod_fcgid-2.3.9-50.23.x86_64.rpm
----

=== SLES 15

With SLES 15, in addition to [install_packages#sles12|Web and Scripting], you need to subscribe to the _Development Tools_ and the _Package Hub_ module.

=== Red Hat and CentOS

With Red Hat and CENTOS the _EPEL (Extra Packages for Enterprise Linux)_
repository must be set up as a package source if you use Checkmk
version VERSION[1.5.0], or an older release. You can do this with the help of an RPM
package, which can be installed with the `yum` command:

[cols=10, options="header"]
|===

|Version
|Package link


|`5`
|`https://dl.fedoraproject.org/pub/archive/epel/epel-release-latest-5.noarch.rpm`


|`6`
|`https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm`


|`7`
|`https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm`

|===

Here is an example of an installation on CentOS 6:

[source,bash]
----
RP:yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
----

On CentOS 5 systems you additionally need the <a href="download/python-reportlab-2.3-3.noarch.rpm">python-reportlab</a> package,
which can be manually-installed as below:

[source,bash]
----
RP:yum install http://checkmk.com/download/python-reportlab-2.3-3.noarch.rpm
----

In order to be able to use EPEL on RedHat, the package sources for optional RPMs (at least for RedHat 6)
are required if these haven’t already been installed during the operating system installation.
Without these sources the `freeradius-utils`, `graphviz-gd`, and `php-mbstring`
package will be missing. This can be done, eg., with the following commands:

RedHat 6.X:

[source,bash]
----
RP:yum-config-manager --enable rhel-6-server-optional-rpms
RP:subscription-manager repos --enable rhel-6-server-optional-rpms
----

RedHat 7.X:

[source,bash]
----
RP:yum-config-manager --enable rhel-7-server-optional-rpms
RP:yum-config-manager --enable rhel-7-server-extras-rpms
RP:subscription-manager repos --enable rhel-7-server-optional-rpms
RP:subscription-manager repos --enable rhel-7-server-extras-rpms
----

You can get a list of all available package repositories with:

[source,bash]
----
RP:subscription-manager repos --list
----

*Note*: Since Red Hat and thus CentOS also deliver SELinux and a local firewall as standard,
adjustments may have to be made here.
As the first step you will need to allow your web server to access the network interfaces:

[source,bash]
----
RP:setsebool -P httpd_can_network_connect 1
----

Secondly, you release the web server and activate the change:

[source,bash]
----
RP:firewall-cmd --zone=public --add-service=http --permanent
success
RP:firewall-cmd --reload
success
----


== Download the appropriate packages

If you have a subscription, on your <a href="download/">subscription downloads page</a>
you will find a suitable RPM or DEB package for your distribution for every available [cmk_versionen|(CMK)-Version].
For a free test version of (CMK) you can access our <a
href="download.php">Demo-Versions</a>.
You can easily upgrade to the [update#updatedemo|Full Version] at a later date.

Please consider when selecting a package:

* Firstly, choose a version of (CMK). Unless otherwise indicated, we recommend the _latest stable Version_.
* The name and version of your distribution must be identical.
* The architecture (32 oder 64 Bit) must match.
* We always recommend the _Minimum_-Package. Packages from the _Full_ range include alternative software components, such as, eg. Icinga or Thruk, which we provide but do not support.

Load the package onto the Linux system where (CMK) is to be installed.


== Package installation

[#signed]
=== Signed-package installation

From Version VERSION[1.5.0i4] the packages for this version and for all
[cmk_versionen#daily|daily builds] are signed using <a href="https://gnupg.org">GnuPG</a>.
Through the use of this signature, on the one hand it can be verified whether the package
really is from (CMK), and on the other hand it can be verified that the package is complete.

So that these signed packages can be installed in the usual way, one time only you will
need to import our public key so that the signature will be trusted.
First, load the key directly from our website:

[source,bash]
----
RP:wget https://checkmk.com/support/Check_MK-pubkey.gpg
----

Alternatively, the key can also be obtained from
<a href="http://http-keys.gnupg.net">gnupg.net</a>:

[source,bash]
----
RP:gpg --keyserver keys.gnupg.net --recv-keys 434DAC48C4503261
RP:gpg --armor --export 434DAC48C4503261 > Check_MK-pubkey.gpg
----

Then import the key from the list of trusted signatures. Under Debian and Ubuntu the
following command is required:

[source,bash]
----
RP:apt-key add Check_MK-pubkey.gpg
----

For RPM-based systems (RHEL, CentOS, SLES) the `rpm` tool is required:

[source,bash]
----
RP:rpm --import Check_MK-pubkey.gpg
----

Once the key has been installed the package can also be installed in the usual way.


=== Debian and Ubuntu


Next install the `gdebi-core` package on Debian (this is pre-installed as standard in Ubuntu).
This tool ensures that not only the package with the (CMK) Monitoring System, but also
all of its dependencies will be correctly installed:

[source,bash]
----
RP:apt-get install gdebi-core
----

Afterwards install the (CMK)-package with `gdebi` (the downloaded package as well):

[source,bash]
----
RP:gdebi check-mk-enterprise-1.6.0p7_0.stretch_amd64.deb
----

*Important*: Under Debian/Ubuntu there is no automatic verification of a package’s
signature. If required, you’ll need to perform this yourself:

[source,bash]
----
RP:dpkg-sig --verify check-mk-enterprise-1.6.0p7_0.stretch_amd64.deb
----


=== SLES

In SLES use the `zypper` tool with the `install` command:

[source,bash]
----
RP:zypper install --no-gpg-checks check-mk-enterprise-1.6.0p7_0.stretch_amd64.rpm
----

*Important*: When using one of (CMK)’s signed packages,
the `--no-gpg-checks` option should of course be omitted.
Before an installation the signature can be verified as follows:

[source,bash]
----
RP:rpm --checksig check-mk-enterprise-1.6.0p7_0.stretch_amd64.rpm
----


=== Red Hat and CentOS

Here the installation is performed with `yum install`:

[source,bash]
----
RP:yum install check-mk-enterprise-1.6.0p7_0.stretch_amd64.rpm
----


== Final test

After the successful installation of (CMK), and all dependencies, you will
have access to the `omd` command. With this command you are able
to create and manage [omd_basics|monitoring sites]. You can request the
installed version to verify your installation:

[source,bash]
----
RP:omd version
OMD - Open Monitoring Distribution Version 1.6.0p7.cee
----
