include::global_attr.adoc[]
= Commands
:revdate: 2016-03-30
:title: Performing actions on hosts or services
:description: In an operating environment you need to continuously react to events. Learn here how to interact with a monitored object in checkmk.

{related-start}
link:basics_ackn.html[Acknowledging problems]
link:basics_downtimes.html[Scheduled downtimes]
link:notifications.html[Notifications]
{related-end}

include::inc_disclaimer_20gui.asciidoc[]

== Introduction

With commands influencing hosts, services and other objects,
you can intervene in the monitoring process.
The commands are most often used for link:basics_ackn.html[acknowledging problems], and for setting
link:basics_downtimes.html[scheduled downtime]. There are numerous further commands
however, some of which are reserved for the administrator. Which commands
are available in a view depends on your access rights (link:wato_user.html[Role]),
as well as on the type of object being displayed. Commands are accessed
via the small hammer icon icon:commands[] on a view’s title. This opens
several entry fields such as those for acknowledging problems, for example:

image::commandsackn.png[]

Each button shown represents a type of command. Some require further
information, such as e.g., a text for the acknowledgement. Please don’t forget
the online help icon:icon_help[] if you need information regarding a
command. Clicking the button opens the confirmation panel:

image::commands_confirm_acknowledgement.png[]

Important: if you confirm with [.guihint]#Yes# here, the chosen command will be
carried out on *all* objects shown in the current window! If you first
wish to make a selection there are three possibilities:

* Go into the host’s or service’s detail display so that the command only takes effect there.
* Set further filters by clicking on icon:filter[] in order to reduce the list of displayed objects.
* Activate the *checkboxes* icon:checkbox_checked[].

Activated checkboxes open an extra column on the view’s left side where objects
can be selected which the command will act on. A click on the small *x*
at the top of the column will switch all of a table’s checkboxes on or off.

[{image-border}]
image::commands_list_of_hosts.png[]


== Further commands

In the [.guihint]#Downtimes# panel you will find tools to manually enter maintenance times for
the desired hosts and services. For a detailed explanation see the article
link:basics_downtimes.html[Scheduled downtimes].

image::commands_downtimes.png[]

The next tool [.guihint]#Fake Check Results# allows you to manually-determine the results of
any check, i.e., the output of a plug in, performance data or simply the status of a
host or service. This is useful, for example, to test the effects of different outputs
and statuses on monitoring, views or link:notifications.html#notification_testing[Notifications].

image::commands_fake_check_results.png[]

Finally, the section [.guihint]#Various Commands# offers all kinds of different tools -- for
example, for activating/deactivating notifications and checks in order to temporarily
exclude certain areas of the infrastructure from monitoring. The options are essentially
self-explanatory, but the [.guihint]#Reschedule active checks# item deserves a special mention.
You can use this to manually trigger active checks, such as the
[.guihint]#Hardware/Software Inventory#, outside its usual cycle. However, for many hosts this
could cause short-term peaks in CPU usage. To counteract this the checks can be evenly
distributed over a period of minutes.

image::commands_various_commands.png[]

*Tip:* In the comments at [.guihint]#Acknowledge#, [.guihint]#Downtimes# and
[.guihint]#Various Commands > Add Comment# you can enter URLs in the form
_https://www.example.com_; these are then automatically converted to clickable
links.
