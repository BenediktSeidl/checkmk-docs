include::global_attr.adoc[]
= The user interface
:revdate: 2016-05-12
:title: The most important elements in the web interface
:description: After the first login to the web interface you land on a basic overview page. The most important elements are explained here.

[TIP]
.Related Articles:
====
link:views.html[]

link: dashboards.html[]

link:graphing.html[]

====


== Introduction

{CMK}’s web-based, graphic user interface (GUI) has two functions:

* It displays the current *status* of all hosts, services and events.
* It is used to *configure* {CMK}. The relevant module is known as link:wato.html[[.guihint]#WATO#].

A feature of {CMK}’s interface is that it can simultaneously display and
configure multiple monitoring instances, and then perform like a large system. The
following screenshot shows a {CMK} start screen directly after logging in:

image::user_interface.png[]

Here you can see the following elements:


|===












|===


The dashboard on the right side can be customized. You can find our more in
the link:dashboards.html[article on dashboards].

[#sidebar]
== The sidebar

The section on the left side -- the [.guihint]#sidebar# -- offers quick access to all
of the functions in {CMK}. Some elements -- e.g. the [.guihint]#Tactical Overview#
-- also show current status information so that you can continuously monitor
it. If the sidebar doesn’t fit completely in your screen’s area you can
scale it with the *mouse wheel* or by *clicking on and dragging the
dark area* of an element up or down.

In addition, as a user you can easily customize the sidebar's content.
Elements can be...

* ...opened and closed with a click on the title bar,
* ...repositioned by clicking and dragging on the title bar,
* ...removed by clicking on the corner cross.

With the ICON[button_sidebar_addsnapin_lo.png] button you can access a
selection of elements that are not currently in your sidebar, but which can
be added with a simple click:

[.border]
image::sidebar_add_snapin.png[]

[#bookmarks]
== Bookmarks

//BI:bookmarks1.png float left width:210
image::user_interface_bookmarks.png[left, width=50%]

Bookmarks are an easy option in {CMK} for faster access to regularly-used
pages.  In the sidebar element [.guihint]#Bookmarks#, every page you can see on the
right side can be saved as a bookmark. If you are on the desired paged or a
filtered view that you would like to save, then click on [.guihint]#Add Bookmark#. The
new bookmark will be stored in the [.guihint]#My Bookmarks# field. This field can
be opened by clicking on the small arrow symbol.

=== Editing bookmarks

{CMK} manages bookmarks in *lists*. In addition, every bookmark has
a [.guihint]#Topic#.  In the display all bookmarks with the same topic are under one
rubric where each can be expanded and collapsed. Why so complicated? So that
you can make a list of bookmarks visible to other users. In this way, for
your company you can build a navigation structure for specific views and even
to external pages. Every user can nonetheless still manage their own bookmarks.

The [.guihint]#EDIT# button accesses the bookmarks manager:

//BI:bookmarks_main.png border
[.border]
image::user_interface_bookmark_lists.png[]

You can either edit existing lists with ICON[icon_edit.png], or
create a completely new list with [.guihint]#New list#. The [.guihint]#Title# for a list
in the [.guihint]#General Properties# is not important --
it is only used for management.
Via [.guihint]#Make available for all users# you can make the bookmark visible to
all other users. This requires an link:wato_user.html[permission] however, which by default
is held only by the [.guihint]#Administrator# role. This principle of visibility is
used by {CMK} in many locations, and is explained in more detail in the
link:views.html[views] article.

//BI:bookmarks_edit1.png border
image::user_interface_edit_bookmark_list_1.png[]

Where the bookmarks are sorted is decided by
the [.guihint]#Default topic# in the list, or respectively by an individual bookmark’s
[.guihint]#Topic# -- if this has been set. By the way, you can also give bookmarks their
own icons.

//BI:bookmarks_edit2.png border
image::user_interface_edit_bookmark_list_2.png[]


[#quicksearch]
== Quicksearch

The Quicksearch snapin allows you to search for hosts and services using simple
keywords or link:regexes.html[regular expressions]. You will see the results live as you
type them in a drop-down list below the search field. You can then use this
list to call up the views of the elements found.

//BI:quicksearch3.png left width:280
image::user_interface_quicksearch.png[left, width=50%]

In addition to the free search, you can also set and combine filters
explicitly -- for example, to search for specific services on specific hosts. A search
coded with `h:^myhost s:myservice` will find all services that contain
`myservice` and which run on hosts starting with `myhost`.

You can also use the filters multiple times and in combination. Multiple
instances of a filter are linked with *OR*, different filters with
*AND*. Exception: Multiple host tag filters (tg:) are always linked with
*AND*. If you do not set any filters, the search automatically passes
through the filters for host name, host aliases, host address, and service
description -- in that order. You can adjust the default filters and their order
in [.guihint]#WATO|Global Settings|User Interface|Quicksearch search order#.

The following filters are available:

[cols=20,10,20,20,options="header"]
|===

|Filter
|Command
|Auto-Search
|Linkage
|Example

|Host-ID
|h:
|Yes
|OR
|h: oracle

|Service description
|s:
|Yes
|OR
|s: cpu h: myhost 

|Host group
|hg:
|No
|OR
|hg: server hg: database

|Service group
|sg:
|No
|OR
|sg: testing s: myservice

|Host address
|ad:
|Yes
|OR
|ad: 192.168.200. s: test

|Host alias
|al:
|Yes
|OR
|al: database al: _db

|Host tag
|tg:
|Yes
|AND
|tg: windows tg: testing

|===


In combination with regular expressions, this results in precise, complex
filter possibilities, such as `h: ^My.*Host$ s: ^my.*(\d|test)$ tg: mytag
tg: mytest`. This would find: Services that begin with `my` and end
with a _digit_ or `test`, run on hosts that begin with `my`
and end with `host`, and finally have the two host tags `mytag`
and `mytest`.

You can use regular expressions for any single filter -- but not for every
combination. As soon as you set group or host tag filters in addition to host
or service filters (name, address, alias), the former must be specified
explicitly, for example `hg: web server s: (apache|nginx)`. Accordingly,
`hg: Web.* s: (apache|nginx)` does *not* work. Background: The
different filters address different sources with different data structures and
functions. However, as mentioned above, you can also search for specific host
groups using patterns, `hg: .*server`, in order to use them in queries.

In the background, link:livestatus.html[livestatus queries] are created from these
searches. For example, `h: localhost s: mem s: cpu h:switch-intern`
would become:

{c-start}
OM(mysite):lq
GET services
Cache: reload
Columns: service_description host_name hostgroups servicegroups
Filter: host_name ~~ switch-intern
Filter: host_name ~~ localhost
Or: 2
Filter: service_description ~~ cpu
Filter: service_description ~~ mem
Or: 2
And: 2
Limit: 80

CPU utilization;localhost;;
Memory;localhost;;
CPU load;localhost;;
CPU utilization;myhost;;
Memory;myhost;;
CPU load;myhost;;

OM(mysite):
{c-end}

You also see the value `Limit: 80` in the live status query above. The
drop-down list of the Quicksearch snapin is limited to these 80 hits by default.
You can however adjust the value in
[.guihint]#WATO|Global Settings|User Interface|Number of elements to show in Quicksearch#.


== Themes
The GUI is available with three different themes: [.guihint]#Modern#, [.guihint]#Modern (Dark)#
and [.guihint]#Classic#. The theme [.guihint]#Modern# is activated by default, as seen here in
the screenshot.

image::user_interface_theme.png[]

However, you can alternatively switch to the old theme [.guihint]#Classic#, whose
screenshots you might encounter in older and external articles.

To change the theme globally, open [.guihint]#WATO|Global Settings#, scroll to the
[.guihint]#User Interface# area and click the [.guihint]#Modern# button next to the {{User
interface theme}} option. In the subsequent dialog you can then select the
desired theme.

image::user_interface_theme_classic.png[]

Of course, you can also
link:wato_user.html#user_config_personal[define themes individually] for each user via
[.guihint]#WATO|Users#. The option can be found respectively under
[.guihint]#Personal Settings|User Interface Theme#. Users can also change themes
themselves in their link:wato_user.html#personal_settings[[.guihint]#Personal Settings#].
