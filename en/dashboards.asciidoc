include::global_attr.adoc[]
= Dashboards
:revdate: 2016-05-23
:title: Combining content in overviews
:description: Dashboards combine different content in an overview, and automatically scale it in size. Use the special features effectively.

[TIP]
.Related Articles:
====
link:views.html[]

link:graphing.html[]

link:user_interface.html[]

====


[#edit]
== Customising dashboards

A dashboard combines various contents such as link:views.html[views],
link:graphing.html[history graphs] and other elements on a single page.
What makes {CMK}’s dashboards special is that with the aid of an intelligent
algorithm they can adapt themselves automatically to the user’s screen dimensions.
In this way a user with a large screen can make optimal use of the screen’s area,
but the dashboard can still function on a small screen. Here is an example of a
Start Dashboard:

[.border]
image::mainoverview.png[]

Besides this [.guihint]#Main Overview#-dashboard, {CMK} has the built-in variants
[.guihint]#Host & Services Problems# and [.guihint]#Network Topology#. You find them in
the sidebar under [.guihint]#Views|Overview#. By default, the built-in dashboards
are shared with all user roles. But you can also restrict them to certain roles
under [.guihint]#WATO|Roles & Permissions|Dashboards#.

{CMK} includes a dashboard editor. The editing mode is accessed by clicking
-- if you have the appriopiate link:wato_user.html#roles[access rights] -- on the
gearwheel symbol icon:alert_command[] (below right on the screen) and
choosing [.guihint]#Edit Dashboard# in the menu that opens.

[.border]
image::dashboardedit1.png[]

In the above image you can also see the layout mechanisms that exactly adjust the
sizes of the elements to fit the available screen space:

* The element below right is anchored there and extends in both directions (indicated by the yellow arrows). That means it attempts to fill the available space.
* The element above right is anchored there, and has a fixed-height so that it remains graphically-justified to both globe elements (these cannot be altered). This element extends to the left (yellow arrow) in order to fill the available space.
* The lower left element is anchored at its top left to the globe element. It extends to the right (yellow arrow) and down (red arrow) to fill the available space.

=== Adding an element

Click on the gearwheel symbol and then select [.guihint]#Add dashlet|Static text#:

image::dashboarddashlet.png[align=center, width=60%]

The configuration dialogue for the new element will open:

[.border]
image::dashboardstatictext.png[]

This dialogue contains three sections:
* [.guihint]#General Settings#: This field is the same for all element types.
* [.guihint]#Properties#: The chosen element’s specific characteristics.
* [.guihint]#Context/Search Filters#: Filter for all element types.

A static text displays a default text to the user. This text can be changed via the
text entry field in the element’s properties. Saving the element will take you to
the dashboard.

The following symbols are displayed in edit mode:
[cols=2]
|===

|icon:dashlet_del_lo[] |Delete this element.
|icon:dashlet_edit_lo[] |Open the editing dialogue for this element.
|icon:dashlet_anchor_lo[] |The element is currently anchored to this corner of the dashboard
|icon:dashlet_anchor_off[] |Click here to select this corner as the anchor point
|===


=== Adding elements via context menus

The reverse direction is also possible:
With every view and graph there is a context menu via which you can
add an element to the dashboard. Here is a history graph for example:

image::cmkgraph.png[]

Clicking on the highlighted button opens the following selection menu:

image::addtodashboard.png[align=center, width=60%]

When you have finished editing, click on the gearwheel symbol, and select
[.guihint]#Stop Editing# to save the dashboard.

=== How a dashboard adjusts itself to fit a screen

Dashboards have the unusual ability to dynamically-adjust themselves to diverse screen dimensions.
The basic idea is that alongside elements with fixed dimensions, (such as e.g.,
[.guihint]#Host Statistics# and [.guihint]#Service Statistics# in the [.guihint]#Main Overview# dashboard),
there are also those that can benefit from having more space. These dynamic elements
scale themselves to make optimum use of the available space.

In order to simplify operation, a dashboard is generated as a raster composed of
10 x 10 pixel units. These units determine the dimensions of all elements:

<ol>
<li>Pages with yellow arrows are initially created with size 1.</li>
<li>Pages with red arrows are created by default with the maximum size.</li>
<li>Pages with a fixed size (those with white bars) are positioned including the bars.</li>
<li>All elements with yellow arrows then scale iuniformly in sync until they meet each other.</li>
</ol>

This procedure occurs not only on starting, but also whenever the browser window
or its zoom setting is altered.

Use the mouse to interactively edit the elements’ sizes, positions and dimensions:

* Move the cursor on the element’s margin to alter its size.
* Press and hold the mouse button and drag the element to the desired position.
* In every corner there is an an anchor element icon:dashlet_anchor_off[]. Only one anchor can be active icon:dashlet_anchor_lo[]. In the standard installation the active anchor is at top left.
* Indicators show active icon:dashlet_anchor_lo[] and inactive icon:dashlet_anchor_off[] anchors. These indicators show the element’s size mode: grey (fixed size), yellow (element grows automatically), red (maximum size).

[#new]
== Creating a new Dashboard

To create a new dashboard, in the [.guihint]#Views# element click on [.guihint]#EDIT# in the sidebar.
This will open a list of views. Proceed from here with the [.guihint]#Dashboards# button.

[.border]
image::dashboardliste.png[]

There click on the [.guihint]#New# button ...

[.border]
image::dashboardedit2.png[]

... and you will be forwareded to ithe [.guihint]#Select specific object type# page:

[.border]
image::dashboardobjects.png[]

You will generally not make any selections here, but proceed by clicking on [.guihint]#Continue#.
You will thereby create a global dashboard without any specific context (e.g., a host).

[.border]
image::dashboardcreate.png[]

In the subsequent window you can specify the basic characteristics such as name, title, etc.
If this new dashboard is to be displayed with existing ones, then enter [.guihint]#Overview# in the
topic field. On saving you will be taken to the dashboard list.

Click on the new dashboard’s title to open it. This opens the edit mode as already
described above.

== Making dashboards available for other users

If you have the access rights for publishing dashboards then you can also determine
who else can access your dashboards. 

To enable this open the dashboard’s configuration dialogue and activate the
[.guihint]#Make this dashboard available for other users# option. Here you can either
share the dashboard with all users ([.guihint]#Publish to all users#), or only with members
of certain contact groups ([.guihint]#Publish to members of contact groups#).

== Specifying a Start Dashboard

image::dashboardstarturl.png[]

You can specify any existing dashboard as the Start URL when {CMK} opens. To do this,
open the dialogue via [.guihint]#WATO|Global settings|User interface#. Click on the
[.guihint]#Start-URL to display in mainframe# link. Substitute the existing content `dashboard.py` for
the desired dashboard name `prod` like this: `dashboard.py?name=prod`.
Complete this procedure by clicking on [.guihint]#Save#. The next time you start {CMK} this
specified dashboard will be displayed.

Via the [.guihint]#Personal settings# section in the user setup you can define an individual
start dashboard for every user.
