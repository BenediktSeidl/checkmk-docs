include::global_attr.adoc[]
= The {ME}
:revdate: 2018-08-24
:title: Offering (CMK) as a service
:description: The Managed Services Edition has a multi-client capability that allows multiple customers to be served in one central web interface.

[TIP]
.Related Articles:
====
link:distributed_monitoring.html[]

link:cmk_versionen.html[]

link:update.html[]

====


== Introduction


image::CEE.png[float=left,width=48]

In a regular distributed monitoring with a
link:distributed_monitoring.html#distr_wato[centralised WATO], as a rule a user will
log in to the central _Master Instance_ in order to work with configurations
or to access the monitoring data.
Users can additionally log in to the _Slave-Instances_ since only they are
responsible for the hosts and services monitored beyond that position.
The authorisation concept in {CMK} which uses link:wato_user.html#roles[Roles] and
link:wato_user.html#contact_groups[Contact groups] to control the visibility and
configurability of hosts and services is quite satisfactory for both of these scenarios.
As a general rule users with very restricted authority will receive no direct
access to the monitoring server's command line and thus will only see the data
for which they themselves are responsible. If in this process, the possibility that
they may become aware of the existence of other hosts and services is not a problem.

With a centralised WATO, in the {FE} and {SE} {CMK} will therefore distribute all configuration
files to all participating instances since in principle they could be located or
be required anywhere, as the case may be. Centrally-managed passwords must also
be made available for the _Slave-Instances_ as the hosts and services in
contact groups can be distributed over multiple instances.

When {CMK} is to be provided as a service to a third party however,
specific configuration files are only permitted to be distributed to
specified _Slave-Instances_. This means that sensitive customer data may
not be stored on another customers server – a simple restriction of its visibility
in the web interface is therefore insufficient. In any event it is possible that
the local monitoring server is run by the customer themselves,
or that the customer otherwise has a direct access to the server's command line.

In addition it is no longer required that a customer makes configuration changes
centrally – the point of providing such a service is to save the customer
from needing to perform such work. The customer also does not need a centralised
overview since they only need access to their own data.

With the {CME}, via the link:distributed_monitoring.html[distributed monitoring] in their
central instance, for each customer a provider links only the one or more local
instances which belong to that customer. Individual elements in [.guihint]#WATO# will then
be assigned to these instances. When distributing configuration data {CMK} will
now only send data of a general nature or data that has been approved for the instance
to a customer's instance. The service provider can still easily carry out a configuration
over the central WATO in their own instance.
Likewise a central web interface for all of the provider's customers is available
in which they can work with monitoring data. This works in exactly the same way
as in a normal distributed environment with the only difference, that you must use the {CME} on all involved instances:

image::managed_distributed_monitoring.png[align=center, width=470]


The following elements in {CMK} can be assigned to a customer:

* _Slave-instances_
* Users
* LDAP connections
* Rules and rule packets in the [.guihint]#Event Console#
* Centrally-managed passwords
* Contact groups
* Host and service groups
* Global settings for _slave-instances_

Thus only the customer's own configuration, host and service data is available
to the customer over the instance assigned to that customer.
They need only to log in to their own instance to receive their own data.
A log in to the service provider's central server is no longer required –
and also no longer possible!

*Important*: The [.guihint]#Managed Services# option in
link:checkmk_support_contract.php[Licensing] must be selected if the
{CMK} is not for your own use, but rather is intended for monitoring another
business's infrastructure.
This also applies even if the extended functionality of the {CME} is not being used.


== Configurations

=== Installing customers



Installing one of your customers is performed simply in only a single step:
in [.guihint]#WATO => Customers# select the [.guihint]#New Customer# button, and assign an
explicit ID, as well as the name to be used when displaying it in {CMK}.
Once saved your first customer has been installed in {CMK}.

image::managed_create.png[]



As can be seen the service provider will likewise be treated like a customer
and for this reason has already been defined as a [.guihint]#Provider#.
You may not delete this assignment.


=== Assigning instances



After a customer has been created, next link the appropriate {CMK} components
to this customer. The master instance to which all of the customer's other
instances send their data is also known as the [.guihint]#Provider-Instance#.
Currently separation of the data only functions if each customer has their own
instance assigned to them and this is in turn link:distributed_monitoring.html[connected]
to your Provider-Instance. The setup in this case differs at a single point:
in the [.guihint]#Basic settings#, in addition to the ID and the alias,
the previously-defined customer is entered.

image::managed_sites.png[]



Thereby, since the provider is also handled like a customer, via the assignments to
an instance {CMK} always knows which host belongs to which customer.

*Note*: The customer instance's [.guihint]#Global Settings# can as usual be configured
over the link:distributed_monitoring.html#sitespecific[site specific global settings].



=== Further assignments



Alongside the instance itself – as mentioned in the introduction – you can also
assign other elements from the [.guihint]#WATO# to a customer. In doing so an element
will be assigned directly to the customer. Alternatively, you can also make it
available to all customers globally.
Here is an example for a user:

image::managed_users.png[]



The assignment is always carried out via the properties of the respective
elements using the [.guihint]#Customer# option.
Exceptions to this are the instance-specific global settings.



==== Special features of the Event Console



In the Event Console you can assign individual rules as well as complete
rule packets to a customer.
In the process be aware that with rule packets the inheritance must always be performed.
They thus cannot be – in contrast to host directories – overwritten by the individual rules.
In this way you can always be confident that every rule will be reliably assigned.

If a rule packet has not been assigned to any customer,
the individual rules can be assigned to a customer as applicable.



=== Non-customisable components



All components that have not been discussed in the preceeding can not be assigned
to individual customers. Nevertheless, with a few words we will draw attention to
some special features of various components.


==== Business Intelligence



BI-Aggregations cannot be assigned to a specific cusomer. Therefore all aggregations
and their rules will be assigned to all instances. For this reason the naming of
rules, packets and aggregations should be as generalised as possible,
and accordingly should not contain customer-specific descriptions.



In a future version of {CMK} it may become possible to also assign BI-Aggregations
to an individual customer. Should this become the situation then the
documentation will be updated appropriately.


==== Host tags



Likewise [.guihint]#Host Tags# may not contain confidential
information since the tags are distributed to all instances.



==== Alarms



Rules for alarms often contain contact groups and very specific conditions under
which the alarms should be triggered and sent.
Since these rules are also distributed to all instances, you should especially
avoid using explicit host and service names, contact addresses and other sensitive data.




==== Customisation of global users




Note that all customisations of global users will be passed on to all of the
customer's instances. Global users are therefore unsuitable for specialised views,
custom graphs or bookmarks since these can contain sensitive, customer-specific data.
Utilise the global users for exceptional cases rather than for regular everyday tasks.




== Extended views

=== Dashboard



New on the Dashboard [.guihint]#Main Overview# is the [.guihint]#Customers# column in which links
to service problems are located:

image::managed_dashboard.png[align=center, width=350]



On selecting a customer a view listing all of the customer's hosts is opened.
This view functions like the [.guihint]#All hosts# view, with the difference here being
that only the specific customer's elements are shown.


=== Snapin



The new [.guihint]#Customers# Snapin functions in exactly the same way as the similar looking
[.guihint]#Site Status# Snapin. Here the status of an individual customer's instances can be
output, and with a click on a status particular customers can be hidden or shown in
the display.

image::managed_snapin.png[align=center, width=270]



In contrast to the [.guihint]#Site Status# Snapin, with this Snapin a single click hides
*all* of a customer's instances.



=== Constructing your own views



Of course you can also use the new filters and data sets for your own views
in the same way as they are used in the Snapin and the Dashboard.
 
On the one hand the [.guihint]#Site# filter has been extended to link:views.html#edit[edit a view]:

image::managed_filter.png[]


And on the other hand you can build completely link:views.html#new[new views] based on
one or all customers. For this purpose select [.guihint]#All customers# as the data source:

image::managed_customer_view.png[]



== Tips for upgrades



When upgrading an existing environment from the {FE} or {SE} to the {ME} there are a
number of particulars to be aware of. If you only want to switch a single instance
the transition is very easy: simply perform a link:update.html#detailed[update] of the
instance in the usual way, after which all of the important tasks will have been completed.
All hosts, users and other settings that have been performed previously will be
assigned to the [.guihint]#Provider# customer, so that your monitoring will for the time
being function as before. Then in your own good time you can construct a
Managed-Services-Environment.

If the upgrade is to an existing environment in which already deleted instances
have been defined for a customer, there are a couple of more details to consider:



==== Sequence for updates of individual instances



Following the update all of the functions are available for defining customers
and for assigning instances, users, etc. to them.
As already mentioned these will in fact be assigned to the [.guihint]#Provider#.
In an existing link:distributed_monitoring.html[distributed monitoring] this however also
means that all other instances with this data can not yet use it.
Therefore there is the following sequence for a safe update:

* *First* update all Slave-Instances.
* Update the Master-Instances *last*.
* To be safe make *no* changes while the update procedure is processing.

To securely prevent any changes from occurring, these can be disabled in WATO
for the duration of the update process. This lock is activated in the
[.guihint]#WATO => Global Settings# with the icon:button_read_only_mode[] button:

image::managed_read_only.png[]


By the way, with an update in a distributed monitoring all of the compatible
components in {CMK} will be assigned to the Provider.



==== Assignment of customers



Following the update the instances can be assigned to the customers.
Be aware of possible dependencies that could result from the existing
configuration, and assign the correct elements from {CMK}'s other
components to the customers as appropriate before activating the
assignments to an instance.

*Important*: At least one user must be transferred to a customer's instance.
It makes no difference whether it is a global user to be replicated on all
instances or if it is a customer-specific user.
