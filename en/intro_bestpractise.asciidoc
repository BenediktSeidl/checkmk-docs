include::global_attr.adoc[]
= Best practices, tips & tricks
:revdate: draft
:title: Best practices, tips & tricks
:description: 

//MD:Durch die Umsetzung bewährter Vorgehensweisen können Probleme in {CMK} vermieden werden, z.B. bei der Überwachung von Windows-Diensten, der Internetverbindung oder HTTP/HTTPS-Diensten. Um diese Themen geht es im aktuellen Kapitel des Leitfadens für {CMK} Einsteiger, der kompakt durch die ersten Schritte führt, um das IT-Monitoring mit {CMK} optimal einzurichten.


== Introduction
This article is currently being prepared for publication. Please be patient. Thank you!

//
// H1:CPU-Auslastung aller Kerne einzeln überwachen#cpu_single_core
//
// {CMK} richtet sowohl unter Linux als auch unter Windows automatisch einen Service ein, der die durchschnittliche Auslastung der CPU-Leistung über die
// letzte Minute überwacht. Dies ist einerseits sinnvoll, erkennt aber andererseits einige Fehler nicht, beispielsweise den, dass ein einzelner Prozess Amok läuft und permanent *eine* CPU mit 100{nbsp}% belastet. Bei einem System mit 16 CPUs trägt eine CPU aber nur mit 6.25{nbsp}% zur Gesamtleistung bei, und so wird selbst im geschilderten Extremfall nur eine Auslastung von 6.25{nbsp}% gemessen -- was dann nicht zu einer Alarmierung führt.
//
// Deswegen bietet {CMK} die Möglichkeit (für Linux und für Windows),
// alle vorhandenen CPUs einzeln zu überwachen und festzustellen, ob einer der
// Kerne über längere Zeit permanent ausgelastet ist. Diesen Check einzurichten,
// hat sich als gute Idee herausgestellt.
//
// Um diese Überprüfung für Ihre Windows-Server einzurichten, benötigen Sie für den Service [.guihint]#CPU utilization# den Regelsatz [.guihint]#CPU utilization for simple devices#, den Sie unter den [.guihint]#Service monitoring rules# finden. Dieser Regelsatz ist für die Überwachung *aller* CPUs zuständig -- hat aber auch diesen Parameter im Angebot hat: [.guihint]#Levels over an extended time period on a single core CPU utilization#.
//
// Erstellen Sie eine neue Regel und aktivieren Sie in dieser nur diesen Parameter:
//
// BI:cpu_single_core.png
//
// Definieren Sie die Bedingung so, dass sie nur für die Windows-Server greift,
// z.B. durch einen geeigneten Ordner oder ein Host-Merkmal. Diese Regel wird
// andere Regeln im gleichen Regelsatz nicht beeinflussen, wenn diese andere
// Parameter festlegen, z.B. die Schwellwerte für die Gesamtauslastung.
//
// Bei Linux-Servern ist dafür die Regelsatz [.guihint]#CPU utilization on Linux/UNIX#
// zuständig, in dem Sie den gleichen Parameter setzen können.
//
//
// H1:Windows-Dienste überwachen#windows_services
//
// In der Voreinstellung überwacht {CMK} auf Ihren Windows-Servern keine Dienste. Warum nicht? Nun, weil {CMK} nicht weiß, welche Dienste für Sie wichtig sind.
//
// Wenn Sie sich nicht die Mühe machen wollen, für jeden Server von Hand festzulegen, welche Dienste dort wichtig sind, können Sie auch einen Check einrichten, der einfach überprüft, ob alle Dienste mit der Startart „automatisch“ auch wirklich laufen. Zusätzlich können Sie sich informieren lassen, ob Dienste laufen, die manuell -- quasi außer der Reihe -- gestartet wurden. Diese werden nach einem Reboot nicht mehr laufen, was ein Problem sein kann.
//
// Um dies umzusetzen, benötigen Sie zunächst den Regelsatz [.guihint]#Windows Services# den Sie unter den [.guihint]#Service monitoring rules# finden, z.B. über die Suchfunktion [.guihint]#Setup > General > Rule search#. Der entscheidende Parameter in der neuen Regel lautet [.guihint]#Service states#. Aktivieren Sie diesen und fügen Sie drei neue Elemente für die Zustände der Dienste hinzu:
//
// BI:windows_services_rule.png
//
// Dadurch erreichen Sie folgende Überwachung:
//
// LI:Ein Dienst mit der Startart [.guihint]#auto#, der läuft, gilt als {OK}.
// LI:Ein Dienst mit der Startart [.guihint]#auto#, der nicht läuft, gilt als {CRIT}.
// LI:Ein Dienst mit der Startart [.guihint]#demand#, der läuft, gilt als {WARN}.
//
// Diese Regel gilt allerdings nur für Services, die auch wirklich überwacht
// werden. Daher benötigen wir noch einen zweiten Schritt und eine zweite Regel, diesmal aus dem Regelsatz [.guihint]#Windows service discovery#, mit der Sie festlegen, welche Windows-Dienste {CMK} als Services überwachen soll.
//
// Wenn Sie diese Regel anlegen, können Sie zunächst beim Parameter [.guihint]#Services (Regular Expressions)# den regulären Ausdruck `pass:[.*]` eingeben, der auf alle Services zutrifft.
//
// Nach dem Sichern der Regel wechseln Sie für einen passenden Host in die Service-Konfiguration. Dort werden Sie eine große Zahl von neuen Services finden -- für jeden Windows-Dienst einen.
//
// Um die Anzahl der überwachten Services auf die für Sie interessanten einzuschränken, kehren Sie zu der Regel zurück und verfeinern die Suchausdrücke nach Bedarf. Dabei wird Groß- und Kleinschreibung unterschieden. Hier ist ein Beispiel für eine angepasste Service-Auswahl:
//
// BI:windows_service_discovery.png
//
// Sollten Sie Services, die den neuen Suchausdrücken nicht entsprechen, zuvor schon in die Überwachung aufgenommen haben, erscheinen diese jetzt in der Service-Konfiguration als fehlend. Mit dem Knopf [.guihint]#Full service scan#
// können Sie reinen Tisch machen und die ganze Service-Liste neu erstellen lassen.
//
//
// H1:Internetverbindung überwachen#internet
//
// Der Zugang Ihrer Firma zum Internet ist sicherlich für alle sehr wichtig. Die Überwachung der Verbindung zu „dem Internet“ ist dabei etwas schwierig umzusetzen, da es um Milliarden von Rechnern geht, die (hoffentlich) erreichbar sind -- oder eben nicht. Sie können aber trotzdem effizient eine Überwachung einrichten, nach folgendem Bauplan:
//
// NL:Wählen Sie mehrere Rechner im Internet, die normalerweise per `ping`-Kommando erreichbar sein sollten, und notieren Sie deren IP-Adressen.
//
// NL:Legen Sie in {CMK} einen neuen Host an, etwa mit dem Namen `internet` und konfigurieren diesen wie folgt: Als [.guihint]#IPv4 Address# geben Sie eine der notierten IP-Adressen ein. Unter [.guihint]#Additional IPv4 addresses# tragen Sie die restlichen IP-Adressen ein. Aktivieren Sie die Datenquelle [.guihint]#{CMK} Agent# und setzen Sie sie auf [.guihint]#No agent#. Speichern Sie den Host ohne Serviceerkennung.
//
// NL:Erstellen Sie eine neue Regel aus dem Regelsatz [.guihint]#Check hosts with PING (ICMP Echo Request)#, die nur für den neuen Host `internet` greift (z.B. über die Bedingung mit [.guihint]#Explicit hosts# oder einem passenden Host-Merkmal). Konfigurieren die Regel wie folgt: Aktivieren Sie [.guihint]#Service description# und geben Sie `Internet connection` ein. Aktivieren Sie [.guihint]#Alternative address to ping# und wählen Sie dort [.guihint]#Ping all IPv4 addresses# aus. Aktivieren Sie [.guihint]#Number of positive responses required for OK state# und tragen Sie `1` ein.
//
// NL:Erstellen Sie eine weitere Regel, die ebenfalls nur für den Host `internet` gilt, diesmal aus dem Regelsatz [.guihint]#Host check command#. Wählen Sie dort als [.guihint]#Host check command# die Option [.guihint]#Use the status of the service...# und tragen Sie als Namen `Internet connection` ein, den Sie im vorherigen Schritt als Service-Namen gewählt haben.
//
// Wenn Sie jetzt die Änderungen aktivieren, erhalten Sie im Monitoring den neuen Host `internet` mit dem einzigen Service `Internet connection`.
//
// Wenn mindestens eines der Ping-Ziele erreichbar ist, hat der Host den Status {UP} und der Service den Status {OK}. Gleichzeitig erhalten Sie beim Service für jede der eingetragenen IP-Adressen Messdaten für die typische Paketumlaufzeit (_round trip time_) und den Paketverlust. Damit erhalten Sie einen Anhaltspunkt für die Qualität Ihrer Verbindung im Laufe der Zeit:
//
// BI:service_internet.png
//
// Der letzte Schritt 4 ist notwendig, damit der Host nicht den Zustand {DOWN} erhält, falls die erste IP-Adresse nicht per `ping` erreichbar ist. Stattdessen übernimmt der Host den Status seines einzigen Services.
//
// *Wichtig:* Da ein Service grundsätzlich nicht alarmiert wird, wenn dessen Host {DOWN} ist, ist es wichtig, dass Sie die Alarmierung über den Host steuern -- und nicht über den Service. Außerdem sollten Sie in diesem speziellen Fall einen Alarmierungsweg verwenden, der keine Internetverbindung voraussetzt.
//
//
// H1:HTTP/HTTPS-Dienste überwachen#http
//
// Nehmen wir an, Sie wollen die Erreichbarkeit einer Website oder eines Web-Dienstes prüfen. Der normale {CMK}-Agent bietet hier keine Lösung, da er diese Information nicht anzeigt -- und außerdem haben Sie vielleicht gar nicht die Möglichkeit, den Agenten auf dem Server zu installieren.
//
// Die Lösung ist ein sogenannter *aktiver Check*. Das ist einer, der nicht per Agent durchgeführt wird, sondern direkt durch das Kontaktieren eines Netzwerkprotokolls beim Ziel-Host -- in diesem Fall HTTP(S). Das Vorgehen ist wie folgt:
//
// Legen Sie zuerst in {CMK} einen neuen Host für den Webserver an, z.B. für `tribe29.com`. Aktivieren Sie die Datenquelle [.guihint]#{CMK} Agent# und setzen Sie sie auf [.guihint]#No agent#. Speichern Sie den Host ohne Serviceerkennung.
//
// Erstellen Sie anschließend eine neue Regel aus dem Regelsatz [.guihint]#Check HTTP service#, die nur für den neuen Host greift (z.B. über die [.guihint]#Explicit hosts# Bedingung).
//
// Im Kasten [.guihint]#Check HTTP service# finden Sie zahlreiche Parameter zur Durchführung des Checks. Beachten Sie dabei die folgenden Punkte:
//
// LI:Geben Sie bei [.guihint]#Service name# dem Service einen Namen, z.B. `Homepage`.
//
// LI:Bei [.guihint]#Host settings > Virtual host# müssen Sie eventuell die Domäne des Servers angeben, wenn dieser mehr als eine Domäne hostet.
//
// LI:[.guihint]#Mode of the Check > Use SSL/HTTPS for the connection# ermöglicht die Überwachung von HTTPS.
//
// LI:Mit [.guihint]#Mode of the Check > Expected response time# können Sie den Service auf {WARN} oder sogar {CRIT} setzen lassen, wenn die Antwortzeit zu langsam ist.
//
// LI:Mit [.guihint]#Fixed string to expect in the content# können Sie prüfen lassen, ob in der Antwort -- also in der gelieferten Seite -- ein bestimmter Text vorkommt. Damit können Sie einen relevanten Teil des Inhalts prüfen, damit nicht eine simple Fehlermeldung des Servers als positive Antwort gewertet wird.
//
// Speichern Sie die Regel und aktivieren Sie die Änderungen. Sie bekommen jetzt einen neuen Host mit einem Service, der einen Zugriff per HTTP(S) prüft.
//
// BI:http_service.png
//
// Sie können diesen Check natürlich auch auf einem Host durchführen, der bereits mit {CMK} per Agent überwacht wird. In diesem Fall entfällt das Anlegen des Hosts und Sie müssen nur die Regel für den Host erstellen.
//
//
// H1:Dateisystem-Schwellwerte magisch anpassen#magic_factor
//
// Gute Schwellwerte für die Überwachung von Dateisystemen zu finden, kann mühsam sein. Denn eine Schwelle von 90{nbsp}% ist bei einer sehr großen Festplatte viel zu niedrig und bei einer kleinen vielleicht schon zu knapp. Wir hatten bereits im link:intro_finetune.html#filesystems[Kapitel über die Feinjustierung des Monitoring] die Möglichkeit vorgestellt, Schwellwerte in Abhängigkeit von der  Dateisystemgröße festzulegen -- und angedeutet, dass {CMK} eine weitere, noch schlauere Option im Angebot hat: den *Magic Factor*.
//
// Den Magic Factor richten Sie so ein:
//
// NL:Im Regelsatz [.guihint]#Filesystems (used space and growth)# legen Sie nur eine einzige Regel an.
// NL:In dieser Regel aktivieren Sie [.guihint]#Levels for filesystem# und lassen den Standard der Schwellwerte 80.0{nbsp}% bzw. 90.0{nbsp}% unverändert.
// NL:Zusätzlich aktivieren Sie [.guihint]#Magic factor (automatic level adaptation for large filesystems)# und akzeptieren den Standardwert von 0.8.
// NL:Setzen Sie ferner [.guihint]#Reference size for magic factor# auf 20{nbsp}GByte. Da 20{nbsp}GByte der Standardwert ist, wird er wirksam, auch ohne dass Sie den Parameter explizit aktivieren.
//
// Das Ergebnis sieht dann so aus:
//
// BI:magic_factor.png
//
// Wenn Sie jetzt die Regel sichern und die Änderung aktivieren, erhalten Sie Schwellwerte, die automatisch von der Größe des Dateisystems abhängen:
//
// NL:Dateisysteme, die genau 20{nbsp}GByte groß sind, erhalten die Schwellwerte 80{nbsp}%/90{nbsp}%.
// NL:Dateisysteme, die kleiner als 20{nbsp}GByte sind, erhalten niedrigere Schwellwerte.
// NL:Dateisysteme, die größer als 20{nbsp}GByte sind, erhalten höhere Schwellwerte.
//
// Wie hoch die Schwellwerte genau sind ist -- nun ja -- magisch! Über den Faktor (hier 0.8) bestimmen Sie, wie stark die Werte verbogen werden. Ein Faktor von 1.0 ändert gar nichts, und alle Dateisysteme bekommen die gleichen Werte. Kleinere Werte verbiegen die Schwellwerte stärker. Die in diesem Kapitel angewendeten Standardwerte von {CMK} haben sich in der Praxis bei sehr vielen Installationen bewährt.
//
// Welche Schwellen genau gelten, können Sie bei jedem Service in seiner Zusammenfassung ([.guihint]#Summary#) sehen:
//
// BI:magic_factor_services.png
//
// Die folgende Tabelle zeigt einige Beispiele für die Auswirkung des Magic Factors (mf) bei einer Referenz von 20{nbsp}GByte / 80{nbsp}%:
//
// <table>
//
// <tr>
// <th class="right" style="width: 17%">Dateisystemgröße</th>
// <th class=right>mf = 1.0</th>
// <th class=right>mf = 0.9</th>
// <th class=right>mf = 0.8</th>
// <th class=right>mf = 0.7</th>
// <th class=right>mf = 0.6</th>
// <th class=right>mf = 0.5</th>
// </tr>
//
// <tr>
// <td class=right>5{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>77{nbsp}%</td>
// <td class=right>74{nbsp}%</td>
// <td class=right>70{nbsp}%</td>
// <td class=right>65{nbsp}%</td>
// <td class=right>60{nbsp}%</td>
// </tr>
//
// <tr>
// <td class=right>10{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>79{nbsp}%</td>
// <td class=right>77{nbsp}%</td>
// <td class=right>75{nbsp}%</td>
// <td class=right>74{nbsp}%</td>
// <td class=right>72{nbsp}%</td>
// </tr>
//
// <tr>
// <td class=right>20{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>*80{nbsp}%*</td>
// </tr>
//
// <tr>
// <td class=right>50{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>82{nbsp}%</td>
// <td class=right>83{nbsp}%</td>
// <td class=right>85{nbsp}%</td>
// <td class=right>86{nbsp}%</td>
// <td class=right>87{nbsp}%</td>
// </tr>
//
// <tr>
// <td class=right>100{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>83{nbsp}%</td>
// <td class=right>86{nbsp}%</td>
// <td class=right>88{nbsp}%</td>
// <td class=right>89{nbsp}%</td>
// <td class=right>91{nbsp}%</td>
// </tr>
//
// <tr>
// <td class=right>300{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>85{nbsp}%</td>
// <td class=right>88{nbsp}%</td>
// <td class=right>91{nbsp}%</td>
// <td class=right>93{nbsp}%</td>
// <td class=right>95{nbsp}%</td>
// </tr>
//
// <tr>
// <td class=right>800{nbsp}GByte</td>
// <td class=right>*80{nbsp}%*</td>
// <td class=right>86{nbsp}%</td>
// <td class=right>90{nbsp}%</td>
// <td class=right>93{nbsp}%</td>
// <td class=right>95{nbsp}%</td>
// <td class=right>97{nbsp}%</td>
// </tr>
//
//
// Mit dem Magic Factor schließen wir den Leitfaden für Einsteiger ab. Wir hoffen, dass Sie es geschafft haben, Ihr {CMK} grundlegend einzurichten -- mit oder ohne Magie. Für fast alle Themen, die wir in diesem Leitfaden behandelt haben, finden Sie vertiefende  Informationen im Referenzteil für Experten, der den Rest des Handbuchs umfasst. Wir wünschen viel Erfolg mit {CMK}!
//
