= Ausführliche Installationsanleitung
:revdate: 2017-03-31
[.seealso][#introduction] [#check_mk_getting_started] [#introduction_virt1]MT:Details zur Installation in Linux
MD:Jede Distribution hat ihre Besondernheiten, die bei einer Softwareinstallation zu beachten sind. Hier wird im Detail beschrieben, was dafür benötigt wird.

== Grundsätzliches

=== Warum Linux?

(CMK) ist ein umfangreiches Softwarepaket, welches grundsätzlich _Linux_
als Betriebssystem voraussetzt. Warum? Linux eignet sich hervorragend als
Plattform für den Betrieb von (CMK), weil es sehr performant und stabil
ist und viele wichtige Werkzeuge dort bereits integriert sind. Nebenbei
hat das noch die angenehme Begleiterscheinung, dass es von Linux mit Debian,
Ubuntu und CentOS völlig kostenlose Distributionen gibt, welcher durchaus
Enterprise-fähig sind und von (CMK) unterstückt werden. Dieser Artikel
zeigt Ihnen, wie Sie (CMK) auf einem bestehenden Linux-System installieren
und in Betrieb nehmen.

Falls Sie sich auf keinen Fall mit Linux befassen möchten, gibt es die
Möglichkeit, (CMK) auch als [introduction_virt1|virtuelle Appliance],
<a href="appliance.php#physical_appliance">physische Appliance</a>
oder als [introduction_docker|Docker-Container] zu betreiben.


=== Unterstütze Distributionen

image::bilder/linux.png[align=left,width=150]

Linux ist ein freies System und wird von vielen Herstellern in eigenen
Varianten (Distributionen) angeboten.  Das ist natürlich erst einmal sehr
positiv, denn Konkurrenz belebt das Geschäft, steigert die Qualität und
als Anwender haben Sie immer die Möglichkeit, zu einer für Sie besseren
Linux-Distribution zu wechseln.

Diese Vielfalt hat allerdings auch einen Nachteil: Die angebotenen
Distri&shy;butionen unterscheiden sich in vielen Details, unter anderem auch in
den Versionen von mitgelieferten Softwarebibliotheken, Verzeichnispfaden,
Vorkonfi&shy;guration usw.

Damit bei Ihnen mit (CMK) trotzdem alles reibungslos läuft, haben wir uns
schon von Anfang an entschlossen, für jede wichtige Linux-Distribution
ein eigenes Installationspaket von (CMK) zu entwickeln -- und das sogar
für jede einzelne Version dieser Distributionen, solange diese vom Hersteller
noch gepflegt wird. Mehr Arbeit für uns -- weniger Stress für Sie!

Aktuell unterstützen wir folgende Linux-Distributionen:

* SuSE LINUX Enterprise Server (SLES) ab Version 11
* Red Hat Enterprise Linux (RHEL) ab Version 6.0
* CentOS ab Version 6.0
* Debian ab Version 7.0
* Ubuntu ab Version 14.04

Zur Installation benötigen Sie einen physischen oder virtuellen Server,
auf dem Sie Linux bereits installiert haben.
Die Installation von (CMK) geschieht dann in vier Schritten:

. Vorbereiten des Linux-Systems.
. Einrichten der Paketquellen.
. Herunterladen des passenden (CMK)-Pakets.
. Installation des Pakets.

== Installation und Vorbereiten des Linux-Systems

Je nachdem, welche Distribution Sie einsetzen, sind unterschiedliche Schritte
für die Vorbereitung notwendig. Im Folgenden gehen wir davon aus, dass Sie
das Linux-System, auf dem (CMK) installiert werden soll, mit den Default-Vorgaben
des Herstellers installieren und korrekt in das Netzwerk einbinden, so dass es
von Ihrem Arbeitsplatz aus per HTTP und SSH erreichbar ist.

=== Aufteilung Festplattenplatz

(CMK) legt seine Daten unter dem physikalischen Pfad `/opt/omd` ab.
Wenn das System ausschließlich für (CMK) verwendet werden soll, sollte
hier der Hauptanteil des verfügbaren Plattenplatzes bereitstehen. Dabei ist
für `/opt/omd`, bzw. `/opt` zwar nicht unbedingt eine eigene
Partition notwendig, aber sehr sinnvoll.

[#smtpconfig]
=== SMTP für ausgehende Emails

Wenn Sie beim Monitoring Alarme per Email versenden möchten, dann benötigen
Sie eine korrekte Konfiguration des SMTP-Dienstes für ausgehende Emails.
Diese wird während der Installation mit dem jeweiligen Werkzeug der
Distribution eingerichtet. Üblicherweise geben Sie dabei einen Smarthost an,
an den alle Emails weitergeleitet werden.

=== Einstellungen für die Systemzeit

Damit der Monitoring-Server eine korrekte Systemzeit hat, empfehlen wir dringend,
NTP einzurichten. Die Hardwareuhr des Systems sollte auf UTC eingestellt sein.
Sobald Sie den Server selbst ins Monitoring mit (CMK) aufnehmen,
wird die korrekte Funktion von NTP automatisch überwacht.

== Einrichten der Paketquellen

(CMK) benötigt etliche Softwarepakete von Ihrer
Linux-Distribution. Software aus dritten Quellen wird nicht benötigt. Damit
alle benötigten Pakete korrekt nachinstalliert werden können, benötigen
Sie eine korrekte Konfiguration der Softwarequellen. Das Vorgehen zum
Einrichten unterscheidet sich je nach verwendeter Distribution:

=== Debian und Ubuntu

Hier sind alle Paketquellen bereits eingerichtet und keine weiteren Schritte
notwendig.

=== SLES 11

Leider hat SUSE einige wichtige Pakete auf eine separate DVD ausgelagert. Diese
trägt den Namen _SUSE Linux Enterprise SDK_. Richten Sie diese mit
YaST als zweite Paketquelle ein. Bitte verwechseln Sie das SDK nicht mit der
DVD 2 der normalen Installations-DVD. Letztere enthält die Quellcodes der
Software und wird nicht benötigt. Wenn Sie eine gültige Subskription für SLES
haben, dann können Sie das ISO-Image des SDK direkt auf der Webseite von
<a href="https://download.suse.com/">SuSE</a> herunterladen.

[#sles12]
=== SLES 12

Mit SLES 12 wurden einige Softwarekomponenten, wie z.B. PHP, das von OMD benötigt wird,
in sogenannte Module ausgelagert. Damit Sie Zugriff auf die PHP-Pakete von SLES 12 bekommen,
müssen Sie folgende Schritte ausführen:

* <a href="https://www.suse.com/documentation/sles-12/book_sle_deployment/data/sec_i_yast2_conf_manual_cc.html">Das System registrieren.</a>
* <a href="https://www.suse.com/documentation/sles-12/book_sle_deployment/data/sec_i_yast2_inst_mode_addon.html">Das Modul „Web and Scripting“ abonnieren.</a>

Leider fehlen Ihnen bis zur (CMK)-Version VERSION[1.2.8] außerdem noch
zwei benötigte Pakete, die Sie per Hand installieren müssen. Diese können
zur Zeit nur aus den <a href="https://download.opensuse.org/repositories/Apache:/Modules/openSUSE_Tumbleweed/x86_64/">OpenSUSE-Repositories</a> bezogen werden. Beachten Sie, dass die Versionsnummer abweichen kann:

*  `apache2-mod_fcgid-2.3.9-50.23.x86_64.rpm`
*  `python-reportlab-3.2.0-1.3.x86_64.rpm`

Hier ein Beispiel für die Installation:

[source,bash]
----
RP:wget https://download.opensuse.org/repositories/Apache:/Modules/openSUSE_Tumbleweed/x86_64/apache2-mod_fcgid-2.3.9-50.23.x86_64.rpm
RP:zypper install apache2-mod_fcgid-2.3.9-50.23.x86_64.rpm
----


=== SLES 15

Unter SLES 15 abonnieren Sie zusätzlich zu [install_packages#sles12|Web and Scripting] noch die Module _Development Tools_ und _Package Hub_.


=== Red Hat und CentOS

Bei Red Hat und CentOS muss das _EPEL (Extra Packages for Enterprise
Linux)_-Repository als Paketquelle eingerichtet werden, sofern Sie
die eingesetzte Version von checkmk VERSION[1.5.0] oder älter ist. Dies
geschieht mit Hilfe eines RPM-Pakets, welches mit dem Befehl `yum`
installiert wird:

[cols=10, options="header"]
|===

|Version
|Paketlink


|`5`
|`https://dl.fedoraproject.org/pub/archive/epel/epel-release-latest-5.noarch.rpm`


|`6`
|`https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm`


|`7`
|`https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm`

|===

Hier ein Beispiel für die Installation unter CentOS 6:

[source,bash]
----
RP:yum install https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
----

Auf CentOS-5-Systemen benötigen Sie außerdem das Paket
<a href="download/python-reportlab-2.3-3.noarch.rpm">python-reportlab</a>, welches Sie sich
manuell wie folgt installieren können:

[source,bash]
----
RP:yum install http://checkmk.com/download/python-reportlab-2.3-3.noarch.rpm
----

Damit Sie EPEL auf RedHat nutzen können, benötigen Sie noch die Paketquelle
für optionale RPMs (zumindest ab RedHat 6), sofern diese nicht bereits
bei der Installation des Betriebssystems eingerichtet worden ist. Ohne diese Quelle werden Ihnen die Pakete
`freeradius-utils`, `graphviz-gd`, and `php-mbstring` fehlen.
Dies geht z.B. mit folgenden Befehlen:

RedHat 6.X:

[source,bash]
----
RP:yum-config-manager --enable rhel-6-server-optional-rpms
RP:subscription-manager repos --enable rhel-6-server-optional-rpms
----

RedHat 7.X

[source,bash]
----
RP:yum-config-manager --enable rhel-7-server-optional-rpms
RP:yum-config-manager --enable rhel-7-server-extras-rpms
RP:subscription-manager repos --enable rhel-7-server-optional-rpms
RP:subscription-manager repos --enable rhel-7-server-extras-rpms
----

Eine Auflistung aller verfügbaren Paketquellen erhalten Sie mit:

[source,bash]
----
RP:subscription-manager repos --list
----

*Wichtig*: Da Red Hat und damit auch CentOS standardmäßig SELinux
und eine lokale Firewall mitliefert, müssen hier gegebenenfalls noch
Anpassungen vorgenommen werden. Erlauben Sie zunächst, dass der Webserver
auf die Netzwerkschnittstellen zugreifen darf:

[source,bash]
----
RP:setsebool -P httpd_can_network_connect 1
----

Als zweites geben sie den Webserver frei und aktivieren die Änderung:

[source,bash]
----
RP:firewall-cmd --zone=public --add-service=http --permanent
success
RP:firewall-cmd --reload
success
----


== Herunterladen des passenden Pakets

Wenn Sie eine Subskription besitzen, dann finden Sie in
Ihrem <a href="download.php">Subskriptionsbereich</a> zu
jeder verfügbaren [cmk_versionen|(CMK)-Version] ein passendes RPM- bzw. DEB-Paket für Ihre Distribution.
Zum kostenlosen Testen von (CMK) können Sie auf unsere <a
href="download.php">Demo-Versionen</a>
zurückgreifen. Diese können Sie später problemlos auf die Vollversion
[update#updatedemo|updaten].

Bitte beachten Sie bei der Auswahl des Pakets:

* Wählen Sie zunächst eine Version von (CMK). Wenn nicht andere Gründe dagegen sprechen, so empfehlen wir den Einsatz der _letzten stabilen Version_.
* Name und Version Ihrer Distribution müssen exakt übereinstimmen.
* Die Architektur (32 oder 64 Bit) muss übereinstimmen.
* Wir empfehlen stets die _Minimal_-Pakete. Pakete aus der Reihe _Full_ enthalten alternative Software-Komponenten wie z.B. Icinga oder Thruk, welche wir anbieten, aber nicht supporten.


Bringen Sie das Paket auf das Linux-System, auf dem (CMK) installiert
werden soll.


== Installation des Pakets

[#signed]
=== Signierte Pakete installieren

Ab Version VERSION[1.5.0i4] werden die Pakete für diese
Version und alle [cmk_versionen#daily|Tagesversionen] mittels <a
href="https://gnupg.org">GnuPG</a> signiert. Durch diese Signatur können
Sie zum einen prüfen, ob das Paket auch wirklich von uns stammt. Zum anderen
können Sie auch prüfen, ob das Paket insgesamt vollständig ist.

Damit diese signierten Pakete wie gewohnt installiert werden können,
müssen Sie einmalig unseren öffentlichen Schlüssel importieren, damit
der Signatur vertraut wird. Laden Sie dazu zuerst den Schlüssel entweder
direkt von unserer Internetseite:

[source,bash]
----
RP:wget https://checkmk.com/support/Check_MK-pubkey.gpg
----

Alternativ können Sie den Key aber auch über <a
href="http://http-keys.gnupg.net">gnupg.net</a> beziehen:

[source,bash]
----
RP:gpg --keyserver keys.gnupg.net --recv-keys 434DAC48C4503261
RP:gpg --armor --export 434DAC48C4503261 > Check_MK-pubkey.gpg
----

Danach importieren Sie den Schlüssel in die Liste der vertrauenswürdigen
Signaturen. Unter Debian und Ubuntu benötigen Sie dafür den folgenden Befehl:

[source,bash]
----
RP:apt-key add Check_MK-pubkey.gpg
----

Für RPM-basierte Systeme (RHEL, CentOS, SLES) benötigen Sie das Tool
`rpm`:

[source,bash]
----
RP:rpm --import Check_MK-pubkey.gpg
----

Sobald Sie den Schlüssel installiert haben, können Sie wie gewohnt die Pakete
installieren.


=== Debian und Ubuntu

Installieren Sie auf Debian zunächst das Paket `gdebi-core` (bei Ubuntu
ist dies im Standardumfang installiert). Dieses Tool stellt sicher, dass
nicht nur das Paket mit dem (CMK) Monitoring System, sondern auch alle
Abhängigkeiten korrekt installiert werden:

[source,bash]
----
RP:apt-get install gdebi-core
----

Installieren Sie anschließend das (CMK)-Paket mittels `gdebi` (auch
hier das heruntergeladene Paket):

[source,bash]
----
RP:gdebi check-mk-enterprise-1.6.0p7_0.stretch_amd64.deb
----

*Wichtig*: Unter Debian/Ubuntu findet keine automatische Prüfung der
Signatur eines Pakets statt. Sie müssen das im Bedarfsfall selbst anstoßen:

[source,bash]
----
RP:dpkg-sig --verify check-mk-enterprise-1.6.0p7_0.stretch_amd64.deb
----


=== SLES

Bei SLES verwenden Sie das Tool `zypper` mit dem Befehl
`install`:

[source,bash]
----
RP:zypper install --no-gpg-checks check-mk-enterprise-1.6.0p7_0.stretch_amd64.rpm
----

*Wichtig*: Wenn Sie ein signiertes Paket von uns benutzen, sollten
Sie die Option `--no-gpg-checks` natürlich weglassen. Vor einer
Installation können Sie die Signatur folgendermaßen prüfen:

[source,bash]
----
RP:rpm --checksig check-mk-enterprise-1.6.0p7_0.stretch_amd64.rpm
----


=== Red Hat und CentOS

Hier geschieht die Installation mit `yum install`:

[source,bash]
----
RP:yum install check-mk-enterprise-1.6.0p7_0.stretch_amd64.rpm
----


== Abschlusstest

Nach der erfolgreichen Installation von (CMK) und allen Abhängigkeiten
steht Ihnen der Befehl `omd` zur Verfügung, mit dem Sie
[omd_basics|Monitoring-Instanzen] anlegen und verwalten können. Zur Kontrolle
können Sie die installierte Version ausgeben lassen:

[source,bash]
----
RP:omd version
OMD - Open Monitoring Distribution Version 1.6.0p7.cee
----
