// -*- coding: utf-8 -*-
include::../global_attr.adoc[]


[#test]
== Test und Fehlerdiagnose

////
2.0 Text
=== Übersicht

Sobald Sie den Agent installiert und konfiguriert haben, stellen Sie sich sicher
die Frage, wie Sie ausprobieren können, ob Sie alles richtig gemacht haben. Alle
Möglichkeiten, die es vom {CMK}-Server aus gibt, sind im allgemeinen Kapitel
über die Agenten xref:wato_monitoringagents#diagnostics[beschrieben]. Aber
natürlich gibt es noch weitere Diagnosemöglichkeiten, wenn man direkt auf dem
Zielsystem selbst eingeloggt ist.

Da der „Agent“ im Grunde nichts als ein einfaches Programm ist,
das Daten über Ihr System beschafft und diese als lose formatierten
Text ausgibt, können Sie ihn auch als Programm aufrufen, und zwar
ganz einfach so:

[{shell-raw}]
----
{c-root} check_mk_agent
<<<check_mk>>>
Version: 2.0.0p42
AgentOS: linux
Hostname: myhost123
AgentDirectory: /etc/check_mk
DataDirectory: /var/lib/check_mk_agent
SpoolDirectory: /var/lib/check_mk_agent/spool
PluginsDirectory: /usr/lib/check_mk_agent/plugins
LocalDirectory: /usr/lib/check_mk_agent/local
<<<df>>>
udev              devtmpfs     8155492         4   8155488       1% /dev
tmpfs             tmpfs        1634036      1204   1632832       1% /run
/dev/sda5         ext4       226298268 176973752  37806104      83% /
none              tmpfs              4         0         4       0% /sys/fs/cgroup
----

Da die Ausgabe etwas
länger sein kann, ist `less` auch hier sehr praktisch (Sie können es
mit der Taste Q verlassen):

[{shell}]
----
{c-root} check_mk_agent | less
----

Diese Ausgabe beweist natürlich nicht, dass der Agent auch über das Netzwerk
erreichbar ist. Aber Sie können so testen, ob in der Ausgabe alle gewünschten
Daten enthalten sind.

Sie müssen übrigens nicht unbedingt `root` sein, um den Agenten
aufzurufen. Allerdings werden dann in der Ausgabe eventuell einige
Informationen fehlen, zu deren Beschaffung `root`-Rechte erforderlich
sind (z.B. Multipath-Informationen und die Ausgaben von `ethtool`).

=== Debugmodus

Damit eventuelle Fehlerausgaben von nicht funktionierenden Plugins oder
Befehlen nicht die eigentlichen Daten „verunreinigen“, unterdrückt der
Agent generell den Standardfehlerkanal. Sind Sie auf der Suche nach
einem bestimmten Problem, können Sie diesen wieder aktivieren, indem
Sie den Agenten in einem speziellen Debugmodus aufrufen. Das machen
Sie mit der Option `-d`. Dabei werden auch sämtliche Shellbefehle
ausgegeben, die der Agent ausführt.

Damit Sie hier mit `less` arbeiten können, müssen Sie Standardausgabe
und Fehlerkanal mit `2>&1` zusammenfassen:

[{shell}]
----
{c-root} check_mk_agent -d 2>&1 | less
----
////

////
Sollten wir noch weitere kurze Erklärungen zu 'Agent rules' einfügen, könnte man
die ggf. in einem Kapitel "Erweiterte Konfiguration" zusammenfassen. Solange
'Deaktivieren von Sektionen' hier alleine steht, ist es ein eigenes H2.
== Erweiterte Konfiguration

=== Deaktivieren von Sektionen
////
