// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#architecture]
== Architektur des Agenten

Mit dem neuen Agenten sind mehr Software-Komponenten als zuvor in die Kommunikation involviert.
Daher stellen wir die Komponenten und ihr Zusammenspiel kurz vor.
Die Architektur ist beim Linux- und beim Windows-Agenten identisch.
Nur die technische Realisierung ist spezifisch für die Betriebssysteme.

Das *Agentenskript* `check_mk_agent` ist und bleibt zuständig für die Sammlung der Monitoring-Daten.
Für die Datensammlung ruft es der Reihe nach vorhandene Systembefehle auf.
Um auch diejenigen Informationen zu erhalten, zu deren Beschaffung `root`-Rechte erforderlich sind, wird `check_mk_agent` unter `root` ausgeführt.

Das Agentenskript ist:

* minimalistisch, denn es benötigt nur wenig CPU, RAM und Plattenplatz,
* transparent, denn es ist ein Shellskript, in dem Sie sehen können, welche Befehle es aufruft,
* sicher, denn es erlaubt keinerlei Zugriffe aus dem Netzwerk.

Das Skript lauscht an einem Unix-Socket (einer `systemd` Einheit) auf eine eingehende Verbindung vom Agent Controller und schreibt seine Ausgabe in das Unix-Socket.

Der *Agent Controller* `cmk-agent-ctl` ist die neue Komponente des Agenten und zuständig für den Transport der vom Agentenskript gesammelten Daten.
Er wird unter dem Benutzer `cmk-agent` ausgeführt, der nur beschränkte Rechte besitzt, z.B. keine Login-Shell hat und nur zur Datenübertragung genutzt wird.
Der Benutzer `cmk-agent` wird während der Installation des Agentenpakets angelegt.
Der Agent Controller läuft als Daemon und ist als Service an `systemd` gekoppelt.
Er lauscht am TCP-Port 6556 und fragt das Agentenskript ab.

Wozu wird nun der Agent Controller gebraucht -- bisher funktionierte es doch auch sehr gut ohne ihn?
Nun, die neue Software-Architektur des Agenten ist die Voraussetzung dafür, neue Funktionen anzubieten, die mit dem minimalistischen Design des Agentenskripts nicht umsetzbar sind, wie beispielsweise die Verschlüsselung der Kommunikation per Transport Layer Security (TLS), Datenkomprimierung und die Umkehrung der Kommunikationsrichtung.
Bisher war es stets der {CMK} Server, der die Kommunikation initiierte und die Daten vom Agenten abfragte -- im sogenannten Pull-Modus.

Mit dem Agent Controller kann nunmehr zusätzlich der Push-Modus realisiert werden, in dem die Initiative vom Agenten ausgeht.
Der Push-Modus ist für eine Cloud-basierte Konfiguration und in einigen abgeschotteten Netzwerken erforderlich.
In beiden Fällen kann der {CMK} Server nicht auf das Netzwerk zugreifen, in dem sich die zu überwachenden Hosts befinden.
Daher sendet der Agent von sich aus regelmäßig die Daten an den {CMK} Server.
Agent Controller und Agent Receiver sind bereits für den Push-Modus vorbereitet, auch wenn dieser Modus erst mit der nächsten {CMK} Version für die neue {CMK} Plus Edition (CPE) verfügbar sein wird.

Der *Agent Receiver* `agent-receiver` ist eine neue Komponente des {CMK} Servers und der Endpunkt für die Kommunikation des Agent Controller, z.B. für die Registrierung der Verbindung.
Er empfängt die vom Agent Controller im Push-Modus gesendeten Daten.

Alle neuen Features werden über den Agent Controller und den Agent Receiver realisiert, d.h. {CMK} Server und Agent müssen Version {v21} haben.
Dabei ist der erste Schritt die Registrierung des Agent Controller beim Agent Receiver der {CMK} Instanz, mit der ein Vertrauensverhältnis hergestellt wird.
Bei der Registrierung wird bereits die TLS-Verschlüsselung der Kommunikation eingerichtet.
