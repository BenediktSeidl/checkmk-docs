// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#intro]
== Der neue Agent

[{image-left}]
image::linux.png[width=120]
In der {CMK}-Version {v21} gibt es einen neuen Linux-Agenten.
Präziser gesagt, wird dem bestehenden Agenten (`check_mk_agent`) mit dem Agent Controller (`cmk-agent-ctl`) eine neue Komponente zur Seite gestellt.
Der Agent Controller ist dem eigentlichen Agenten vorgeschaltet, fragt diesen ab und kommuniziert an dessen Stelle mit dem {CMK}-Server.
Dazu registriert er sich am Agent Receiver (`agent-receiver`), einem ebenfalls neuen Prozess, der auf dem {CMK}-Server läuft.

Wozu wird nun der Agent Controller gebraucht -- bisher funktionierte es doch auch sehr gut ohne ihn?
Nun, die neue Software-Architektur des Agenten ist die Voraussetzung dafür, neue Funktionen anzubieten, die mit dem minimalistischen Design des `check_mk_agent`-Shell-Skripts nicht umsetzbar sind, wie beispielsweise die Verschlüsselung der Kommunikation per Transport Layer Security (TLS), Datenkomprimierung -- und auch die Umkehrung der Kommunikationsrichtung.
Bisher war es stets der {CMK}-Server, der die Kommunikation initiierte und die Daten vom Agenten abfragte -- im sogenannte Pull-Modus.
Mit dem Agent Controller kann nunmehr zusätzlich der neue Push-Modus realisiert werden, in dem die Initiative vom Agenten ausgeht.
Der Push-Modus ist für eine Cloud-basierte Konfiguration und in einigen abgeschotteten Netzwerken erforderlich.
In beiden Fällen kann der {CMK}-Server nicht auf das Netzwerk zugreifen, in dem sich die zu überwachenden Hosts befinden.
Daher sendet der Agent von sich aus regelmäßig die Daten an den {CMK}-Server.

Während der Push-Modus ein Feature der nächsten {CMK}-Version für die neue {CMK} Plus Edition (CPE) sein wird, ist TLS-Verschlüsselung und Komprimierung ab Version {v21} für alle {CMK}-Editionen verfügbar.
Da die neuen Features über Agent Controller und Agent Receiver eingerichtet und realisiert werden, müssen, sofern man sie nutzen will, sowohl {CMK}-Server als auch Agent Version {v21} haben.
Der Agent Controller ist an den Superserver `systemd` gekoppelt, daher setzt er eine Linux-Distribution mit `systemd` voraus.
Wie Sie herausfinden, ob die Voraussetzung bei Ihrer Linux-Distribution erfüllt ist, erfahren sie im Kapitel xref:installation#[Installation.]

Allerdings unterstützt der neue Agent auch einen sogenannten „Legacy-Pull-Modus“, um sowohl das Update problemlos zu ermöglichen als auch unter Linux-Distributionen ohne `systemd` lauffähig zu sein.
In diesem Modus arbeitet der neue wie der alte Agent, d.h. ohne Registrierung des Agent Controllers am {CMK}-Server.
Für diesen Fall finden Sie im Artikel xref:agent_linux_legacy#[Linux überwachen mit dem alten Agenten] alle Informationen.
Der Artikel, den Sie gerade lesen, behandelt Installation, Konfiguration und Erweiterungen des neuen Linux-Agenten mit Agent Controller.


////
2.0 Text
== Einleitung

[{image-left}]
image::linux.png[width=120]

Linux-Systeme können Sie mit {CMK} besonders gut überwachen. Das liegt
weniger daran, dass sich das {CMK}-Entwicklerteam auf Linux „zuhause“
fühlt, sondern vielmehr daran, dass Linux ein sehr offenes System ist und
zahlreiche gut dokumentierte und einfach abzufragende Schnittstellen für
eine detaillierte Überwachung bereitstellt.

Natürlich ist die Installation eines Monitoring-Agenten unumgänglich,
denn die meisten der Schnittstellen sind per se nicht über das Netzwerk
erreichbar. Deswegen hat {CMK} einen eigenen Agenten für die
Überwachung von Linux. Dieser ist einfach zu installieren und
sparsam im Umgang mit Ressourcen.

Der {CMK}-Agent für Linux ist:

* *minimalistisch*, denn er benötigt nur wenig CPU, RAM und Plattenplatz,
* *transparent*, denn er ist ein Shellskript, in dem Sie sehen können, welche Befehle er aufruft, und
* *sicher*, denn er erlaubt keinerlei Zugriffe aus dem Netzwerk.

Der Agent besteht aus einem simplen Shellskript, das nach
`/usr/bin/check_mk_agent` installiert wird und der Reihe nach
*vorhandene Systembefehle* aufruft, um Daten für das Monitoring
zu ermitteln. Seine Ausgabe stellt er entweder per `xinetd` oder
`systemd` an TCP-Port 6556 bereit oder er wird alternativ per SSH
aufgerufen. Und wenn Ihnen beides nicht gefällt, können Sie
auch eigene Methoden implementieren, wie {CMK} die Daten vom Agenten
bekommen soll.

Monitoringinformationen, die der Agent nicht von Haus aus liefert,
können Sie in Form von Agentenplugins hinzufügen. In den {EE} können
Sie alle Einstellungen und Plugins zusammen mit dem Agenten in der
xref:wato_monitoringagents#bakery[Agentenbäckerei] zu einem RPM oder DEB-Paket
paketieren, das mit einem einzigen Befehl installiert und oder sogar
vollautomatisch xref:agent_deployment#[aktualisiert] werden kann.
////
