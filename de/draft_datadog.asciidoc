include::global_attr.adoc[]
= Datadog integrieren
:revdate: draft
:title: Datadog integrieren
:description: Monitore und Events aus Datadog können in {CMK} integriert werden

{related-start}
xref:check_plugins_catalog#[Katalog der Checkplugins]
#xref:monitoring_kubernetes#[Kubernetes überwachen]
xref:monitoring_aws#[Amazon Web Services (AWS) überwachen]
xref:monitoring_azure#[Microsoft Azure überwachen]
{related-end}

== Einleitung

=== Hintergrund und Motivation

Unsere Integration von Datadog richtet sich an alle unsere Nutzer, die Datadog in Ihren Unternehmen bereits im Einsatz haben. Durch unsere Integration verringern wir die Notwendigkeit dauerhaft zwei Monitoring-Systeme prüfen müssen und schließen damit die enstandene Lücke zwischen den zwei Systemen.

So ermöglichen wir eine Korrelation der Daten aus den beiden Systemen, beschleunigen eine etwaige Fehlerursachenanalyse und erleichtern gleichzeitig die Kommunikation zwischen {CMK}- und Datadog-Nutzern.

//SK: Da es keine deutschsprachige Dokumentation von Datadog gibt, bin ich mir nicht ganz sicher, ob meine Übersetzung von "Monitors" sinnvoll ist.

===  Monitore und Events

Konkret ermöglichen wir mit unserer Anbindung beliebige sogenannte Monitore (englisch: _Monitors_) und Events aus Datadog in {CMK} zu überwachen und anzuzeigen. Selbstverständlich können sich sich dann auch auf den gewohnten Wegen aus {CMK} heraus über Vorkommnise xref:notifications#[benachrichtigten] zu lassen.

Die Integration der beliebiger Monitore und Events aus Datadog wird über einen xref:datasource_programs#specialagents[Spezialagenten] zur Verfügung gestellt.

== Einrichten der Integration

=== Schlüssel erzeugen und kopieren

Für die Datengewinnung nutzt unser Spezialagent die API von Datadog. Um den Zugriff auf diese API abzusichern werden zwei Schlüssel benötigt - jeweils ein _API Key_ und ein _Application Key_. Wir empfehlen für die Verwendung durch {CMK} zwei neue Schlüssel zu erzeugen und diese ausschließlich für den Abruf durch {CMK} zu verwenden. Zum Zeitpunkt zu dem dieser Artikel entstanden ist, finden Sie die entsprechenden Schlüssel bzw. die Möglichkeit solche Schlüssel neu zu erzeugen, in Datadog über den Knopf unten links in der Ecke auf dem Ihr Nutzername steht. Klicken Sie dort auf [.guihint]#Organization Settings#. Unter der Überschrift [.guihint]#ACCESS# finden nun die beiden Einträge [.guihint]#API Keys# und [.guihint]#Application Keys#. Erzeugen Sie in diesen beiden Untermenüs über den Knopf [.guihint]#New Key# jeweils einen neuen Schlüssel.

//SK: M.E. reicht die Größe hier, weil das Bild nur eine grobe Übersicht geben soll.
[{image-border}]
image::integrating_datadog_application_key.png[]

Damit Sie die beiden Schlüssel im Anschluss in {CMK} einfügen können, empfiehlt es sich diese zu kopieren.
Klicken Sie dazu in die Zeile des jeweiligen Schlüssels und anschließend auf [.guihint]#Copy#.

////
War mal so. Hat sich wohl erledigt.
Im Falle des [.guihint]#API Keys# müssen Sie dazu auf die Zeile des Schlüssels und anschließend auf [.guihint]#Copy# klicken. Im Falle des [.guihint]#API Keys# hingegen, müssen Sie mit dem Cursor über den Schlüssel fahren und am rechten Bildrand auf die beiden Quadrate klicken.
////

//ML: Imho muss man hier auch gar nicht genau darauf eingehen, wo sich die Funktionen befinden - DASS man diese beiden Schlüssel benötigt und sie unter Organization-Settings setzen kann genügt. Zumal ich mal vermute, dass Menschen, die zwei Monitoring-Systeme koppeln keine absoluten Neulinge sind. Zudem: Es war hier wieder so wie im auskommentierten Absatz.

//SK: Absichtlich kein Link zu den Docs von Datadog.

Hinweis: Während der Entstehung dieses Artikels, hat sich der Ablageort der Schlüssel bereits einmal geändert. Sollten Sie die oben beschriebenen Menüpunkte so nicht vorfinden, konsultieren Sie bitte die Dokumentation von Datadog.

[create_host]
=== Host anlegen

Je nachdem, wie Sie Datadog in {CMK} integrieren möchten kann es unterschiedliche Wege geben, wie Sie die gewonnen Daten auf Hosts in {CMK} zuweisen. Dazu später mehr. Im Folgenden konzentrieren wir uns erstmal auf eine einfache Einrichtung und zeigen, wie Sie alle Daten einem Host zuweisen.
//ML: Letzten Halbsatz geändert, damit das Ärzte-Wir verschwindet.

Erzeugen Sie dazu in {CMK} auf gewohnte Weise einen neuen Host und nennen Sie diesen beispielsweise 'mydatadoghost'. Da dieser Host vorerst ausschließlich über den Spezialagenten Daten erhält, setzen sie die Option [.guihint]#IP address family# auf [.guihint]#No IP.#

image::integrating_datadog_add_host.png[]

Nehmen Sie alle weiteren Einstellungen Ihrer Umgebung entsprechend vor und bestätigen Sie Ihre Auswahl über [.guihint]#Save & go to folder.#


=== Regel für den Datadog-Agenten anlegen

Als nächstes müssen Sie den Spezialagenten über den Regelsatz [.guihint]#Setup > Agents > Other integrations > Applications > Datadog# einrichten. Kopieren Sie als Erstes die beiden zuvor erzeugten Schlüssel in die dafür vorgesehen Felder oder verwenden Sie alternativ den Passwortspeicher von {CMK}. Prüfen Sie danach, ob der voreingetragene [.guihint]#API host# dem Ihrer Datdog-Site entspricht. Vergleichen Sie dazu einfach die URL Ihrer Datadog-Site mit dem vorgegebenen Eintrag in der Regel und passen Sie diesen gegebenenfalls an.
//SK: Ich lasse gerade noch prüfen, ob das hier überhaupt notwendig ist, da ich auch eine EU-Site über api.datadoghq.com abfragen kann. Die API-Schlüssel geben hier wohl den Ausschlag.
//ML: Auch für manuelle DD-Events per curl muss es die eu-Domain sein - ist zwar ein DD-eigenes Thema, aber vermutlich wollen alle direkt mal testen.

Falls Sie die Kommunikation von {CMK} mit Datadog über einen [.guihint]#HTTP proxy# läuft, tragen Sie diesen in der folgenden Option ein.

Nun können Sie entscheiden, welche Daten Sie konkret aus Datadog nach {CMK} übertragen möchten. Hier stehen die sogenannten [.guihint]#Monitors# und [.guihint]#Events# zur Auswahl.

==== Fetch monitors

Wenn Sie die Überwachung der Monitore aktivieren, haben Sie die Möglichkeit, die zu übertragenden Daten, über Tags innerhalb von Datadog, zu filtern. Gerade in großen Umgebungen empfiehlt es sich, Monitore, die Sie in {CMK} sehen möchten, in Datadog mit einem entsprechenden Tag (bspw. `monitored_by_checmk:yes`) zu versehen. Tragen Sie diese Tags dann unter [.guihint]#Restrict by monitor tags# ein.

Des Weiteren ist es auch möglich andere Tags, die in der Konfiguration der Monitore in Datadog auftauchen, zum Filtern zu verwenden. Wenn Sie in Datadog beispielsweise einen Monitor vom Typ Host eingerichtet haben, welcher sich innerhalb von Datadog auf alle Hosts bezieht, welche das Host-Tag 'checkmk:yes' gesetzt haben, dann müssen Sie unter [.guihint]#Restrict by tags# eintragen.
//ML: ... dann müssen Sie WAS eintragen? Generell ist der Absatz extrem kompliziert formuliert, vielleicht in zwei, drei Sätze aufteilen.

image::integrating_datadog_fetch_monitors.png[width=41%]

Wenn Sie die beiden Optionen deaktiviert lassen, werden einfach alle Monitore aus Datadog nach {CMK} übertragen.

Für jeden Monitor, welchen Sie überwachen, wird in {CMK} ein Service angelegt.

==== Fetch events

Mit dem Spezialagenten für Datadog haben Sie auch die Möglichkeit Events aus Datadog direkt in die xref:ec[Event Console] von {CMK} zu übertragen. Zur Eingrenzung, welche Events übertragen werden sollen, können Sie erneut Tags aus Datadog verwenden. Des Weiteren kann ein Zeitrahmen festgelegt werden, aus welchem Events übertragen werden sollen. Dieses [.guihint]#Maximum age of fetched events# sollte nicht kürzer sein als das Check-Intervall, da sonst gegebenenfalls Events übersehen werden. Da es aber auch vorkommen kann, dass Datadog Events in der Vergangenheit anlegt, sollte der Zeitraum nicht zu knapp bemessen werden. Die voreingestellten 10 Minuten sind hier ein guter Anhaltspunkt.

image::integrating_datadog_fetch_events.png[width=50%]

Alle weiteren Felder in diesem Teil der Regel beziehen sich darauf, mit welchen Parametern die Events aus Datadog in der Event Console von {CMK} angelegt werden sollen. Eine detaillierte Beschreibung all dieser Felder finden Sie im Artikel zur Event Console in den Abschnitten xref:ec#syslogfacility[Syslog-Priorität und -Facility] und xref:ec#servicelevel[Service-Level.]

Für die Events wird auf dem Host in {CMK} nur ein einzelner Service angelegt, der Sie darüber in Kenntnis setzt, wieviele Events übertragen wurden.

==== Expliziten Host festlegen und Serviceerkennung

Nachdem Sie alle vorherigen Einstellungen abgeschlossen haben, sollten Sie unter [.guihint]#Explicit hosts# noch den xref:create_host[zurvor erzeugten Host] eintragen. Klicken Sie anschließend auf [.guihint]#Save.# Sobald Sie für diesen Host eine Serviceerkennung durchführen, sehen Sie Ihre ersten Monitore und Events aus Datadog in {CMK}.
//ML: Das "sollten" vielleicht etwas näher erklären? Man vertut sich da fix und dann taucht zum Beispiel bei Hosts ohne Agenten plötzlich bei den Verbindungstests ein OK beim Agentenkontakt auf. Aber klar, gilt natürlich immer ...

*Hinweis:* In der Praxis hat sich gezeigt, dass es günstig sein kann, Monitore und Events auf getrennte Hosts in {CMK} zu legen. Dieses Vorgehen erhöht im Allgemeinen die Übersicht und erlaubt eine einfachere Konfiguration weiterer Paramter für die einzelnen Hosts.


== Mapping der Zustände

Die Zustände, die mit den Monitoren aus Datadog übertragen werden, lassen sich nicht für jeden Anwendungsfall 1:1 auf die Zustände in {CMK} übertragen. Um Ihnen die Möglichkeit zu geben, diese Zustände nach Ihren Bedürfnissen einzustellen, gibt es die Regel [.guihint]#Checking of Datadog monitors.# Diese finden Sie über die Suche im [.guihint]#Setup# oder über [.guihint]#Setup > Services > Service monitoring rules > Applications, Processes & Services > Checking of Datadog monitors.#

image::integrating_datadog_parameters.png[]

Des Weiteren können Sie in dieser Regel auch festlegen, welche Tags aus Datadog im Service Output in {CMK} angezeigt werden sollen.