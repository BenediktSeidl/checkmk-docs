include::global_attr.adoc[]
= Die Monitoring-Werkzeuge
:revdate: 2021-03-08
:title: Die Monitoring-Werkzeuge
:description: Wichtige Werkzeuge für das Monitoring mit {CMK} sind die Snapins der Statusleiste, wie z.B. Overview und Master Control, und das Monitor-Menü. Um diese Themen geht es im aktuellen Kapitel des Leitfadens für {CMK} Einsteiger, der kompakt durch die ersten Schritte führt, um das IT-Monitoring mit {CMK} optimal einzurichten.

{related-start}
link:intro_monitor.html[{CMK} im Monitoring]
link:user_interface.html[Die Benutzeroberfläche]
link:views.html[Ansichten von Hosts und Services (Views)]
{related-end}

// TK: Der Inhalt (=die Unterkapitel) ist eine ziemlich willkürliche Auswahl: "Statusoberfläche" ist strange als Einstieg. "Overview" kommt nur deshalb direkt danach, weil es sehr didaktisch und ausführlich aufgebaut ist. Master Control + Bookmarks sind nur drin, weil sie per Default in der Seitenleiste sind (Master Control-Beschreibung ist zu dünn, Bookmarks wandert in der 2.1 wohl in die Navbar). Die "Messwerte (Metriken)" zum Schluss wirken wie angeklebt.
// TK: Den Begriff des Operating hab ich quasi elminiert und durch Monitoring ersetzt. "Operator" bleibt für denjenigen, der das Monitoring durchführt.


[#status_interface]
== Statusoberfläche

// TK: Wer braucht den Begriff der Statusoberfläche? Er ist nicht richtig definiert und wird nur in wenigen Artikeln überhaupt verwendet (bi, ec, distributed_monitoring, wato_rules, wato_user, intro_notifications, intro_tools). Wenn man denn einen Überbegriff braucht, würde ich ihn Monitoring-Oberfläche nennen.

Jetzt, da wir unserem Monitoring-System endlich etwas zu tun gegeben haben, ist
es an der Zeit, dass wir uns näher mit den Elementen der
{CMK}-Benutzeroberfläche befassen, die Ihnen im täglichen Leben beim Monitoring
(oder im Operating) helfen. In {CMK} wird dieser Teil auch manchmal als
*Statusoberfläche* bezeichnet, weil es meist darum geht, den aktuellen
Status von allen Hosts und Services zu sehen. Dazu gehören Dashboards und Views, die Sie über das [.guihint]#Monitor#-Menü aufrufen, die Snapins der
Statusleiste, aber auch die Darstellung und Aufbereitung von Messwerten.


[#overview]
== Overview

// Start inc_overview(snapin).asciidoc
Prominent oben in der Seitenleiste platziert finden Sie das Snapin [.guihint]#Overview#:

image::overview_less.png[width=50%]

In der linken Spalte dieser kleinen Tabelle sehen Sie zunächst die Anzahl Ihrer
überwachten Hosts und Services. Die dritte Zeile zeigt [.guihint]#Events#. Diese werden
für Sie erst dann relevant, wenn Sie eine Überwachung von Meldungen konfiguriert
haben. Damit sind z.B. Meldungen aus Syslog, SNMP-Traps und Logdateien gemeint.
Dafür hat {CMK} ein eigenes, sehr mächtiges Modul, das ausführlich besprochen wird im gleichnamigen Artikel zur link:ec.html[Event Console].

Die rechte Spalte zeigt die Zahl der Probleme, die noch nicht quittiert wurden. Probleme sind Objekte, die gerade im Status {WARN}/{CRIT}/{UNKNOWN} bzw. {DOWN}/{UNREACH} sind. Die Quittierung (_acknowledgment_) ist eine Art „zur Kenntnisnahme“ eines Problems. Übrigens werden Probleme von Services hier nicht mitgezählt, deren Host {DOWN} oder in einer Wartungszeit ist.

Sie können auf die Zahl in der Zelle klicken und kommen dann direkt zu einer Liste der Objekte, die hier gezählt wurden. Das funktioniert übrigens bei allen Zellen im [.guihint]#Overview#.

Auch im [.guihint]#Overview# können Sie entscheiden, ob sie weniger oder mehr Informationen sehen wollen. Mit dem Knopf icon:button_showmore[] schalten Sie in den Show more-Modus:

image::overview_more.png[width=50%]

Zwischen den beiden zuvor sichtbaren Spalten zeigt jetzt die neue zweite Spalte die Zahl *aller* Probleme, d.h. zusätzlich auch diejenigen, die bereits quittiert wurden. In unserem Beispiel sind die Zahlen in der zweiten und dritten Spalte identisch, da wir noch kein Problem quittiert haben.

Schließlich zeigt die letzte Spalte ganz rechts die Hosts oder Services, deren Information „veraltet“ (_stale_) ist, da über sie zurzeit keine aktuellen Monitoring-Daten vorliegen. Wenn z.B. ein Host aktuell gar nicht erreichbar ist, kann {CMK} auch keine Neuigkeiten über dessen Services ermitteln. Das bedeutet aber nicht automatisch, dass diese ein Problem haben. Deswegen nimmt {CMK} nicht einfach einen neuen Status für diese Services an, sondern setzt sie auf den Pseudostatus „Stale“. Die Spalte [.guihint]#Stale# wird von {CMK} weggelassen, wenn sie überall 0 zeigen würde.
// End inc_overview(snapin).asciidoc


[#monitor_menu]
== Monitor-Menü

// Start inc_monitor_menu.asciidoc
Ihr Werkzeugkasten zur Erledigung aller Aufgaben im Monitoring ist das [.guihint]#Monitor#-Menü, das Sie über die Navigationsleiste öffnen können:

image::monitor_menu_less.png[]

In diesem Menü finden Sie die Hilfsmittel, die Ihnen Antworten auf Ihre Fragen im Monitoring geben. Das Menü ist nach Themen (_topics_) untergliedert. Unterhalb jedes Themas finden Sie die Menüeinträge.

Nach Auswahl eines der Einträge im [.guihint]#Monitor#-Menü wird Ihnen auf der Hauptseite die angeforderte Information in der Regel entweder als Dashboard oder als View angezeigt, auf die wir in diesem Artikel noch näher eingehen werden.

*Hinweis:* Den Inhalt des [.guihint]#Monitor#-Menüs können Sie sich auch in die Seitenleiste laden: als Snapin mit dem Titel [.guihint]#Views#. Dieses Snapin ist standardmäßig nicht in der Seitenleiste enthalten. Sie können es aber einfach durch Anklicken von icon:button_sidebar_add_snapin[] aus der Liste der verfügbaren Snapins in die Seitenleiste aufnehmen.
// End inc_monitor_menu.asciidoc


[#dashboards]
== Dashboards

// Start inc_dashboards.asciidoc
Ein Dashboard bereitet auf einer Seite die wichtigsten Informationen zu einem Thema auf, etwa die Antwort auf die Frage "Wie ist der Zustand meiner {CMK}-Instanz?". Dabei werden in einem Dashboard verschiedene Visualisierungen von Daten genutzt und kombiniert, etwa Views, Verlaufsgraphen, Tabellen, Diagramme und viele andere Elemente. Ziel ist es, Ihnen die Informationen aus verschiedenen Perspektiven so zu präsentieren, dass Sie das Wesentliche schnell erfassen können und nicht von Details abgelenkt werden.

{CMK} stellt mehrere vorkonfigurierte Dashboards zur Verfügung, die Sie über das [.guihint]#Monitor#-Menü öffnen können: das [.guihint]#Main#, das [.guihint]#{CMK}# und das [.guihint]#Problem# dashboard:

image::dashboard_problem.png[]

Wird eines dieser Dashboards angezeigt, können Sie schnell zu den anderen umschalten: in der Menüleiste rechts neben dem [.guihint]#Help#-Menü finden Sie die Symbole für die verfügbaren Dashboards. Sie können auch das aktuell angezeigte zum [.guihint]#Main dashboard# befördern: im Menü [.guihint]#Dashboard > Set as start URL#.

{cre-only}
Das [.guihint]#Main# Dashboard der {EE}, das den Zustand der Instanz anzeigt, ist in der {RE} nicht enthalten. In der {RE} ist das [.guihint]#Main# Dashboard das [.guihint]#Problem# Dashboard der {EE}.

Das Besondere an den Dashboards in {CMK} ist, dass sie sich mit einem intelligenten Algorithmus automatisch an die Bildschirmdimensionen anpassen und die Bildschirmgröße optimal ausnutzen.

Außerdem können Sie die Einzelteile eines Dashboards, die sogenannten *Dashlets*, nutzen, um bestehende Dashboards anzupassen und neue zu erstellen. Im link:dashboards.html[Artikel zu den Dashboards] erfahren Sie dazu alle Details.
// End inc_dashboards.asciidoc


[#views]
== Views (Statusansichten)

// Start inc_views.asciidoc
Ein View ist eine vordefinierte Statusansicht, die die Ihnen im Monitoring den aktuellen Zustand von Hosts, Services oder auch anderen Objekten unter einer bestimmten Perspektive als Tabelle anzeigt.

So eine Statusansicht kann einen Kontext haben, z.B. wenn sie alle Services
des Hosts `mycmkserver` zeigt. Andere Ansichten funktionieren global, z.B. diejenige, die Ihnen alle Services anzeigt, die gerade ein Problem haben.

All die *globalen* Statusansichten können Sie aus dem [.guihint]#Monitor#-Menü öffnen, unterhalb des jeweiligen Themas, z.B. [.guihint]#All Hosts#, [.guihint]#Service problems# oder [.guihint]#{CMK} sites#. Nach Anklicken eines dieser Menüeinträge wird Ihnen die zugehörige Statusansicht in der Hauptseite angezeigt, im folgenden Beispiel [.guihint]#Service problems#:

image::view_service_problems.png[]

In einer Statusansicht haben Sie zahlreiche Bedienmöglichkeiten, unter anderem:

* Sie können zu anderen Ansichten navigieren, indem Sie bestimmte Zellen anklicken (im obigen Beispiel etwa den Host-Namen oder einen der Services).
* Durch einen Klick auf einen Spaltentitel können Sie nach dieser Spalte sortieren.
* Das Menü [.guihint]#Display > Modify display options# blendet einige Einstellungen ein zur Anpassung der Ansicht: In der Liste [.guihint]#Number of columns# können Sie die Anzahl der angezeigten Spalten ändern (z.B. um Ihren breiten Bildschirm voll auszunutzen) und in der Liste [.guihint]#Refresh interval# stellen Sie die Anzahl an Sekunden ein, nach denen die Ansicht automatisch neu geladen wird (schließlich können sich Statusdaten jederzeit ändern).
* Sie können die Tabelleneinträge nach Anklicken von [.guihint]#Filter# mit der *Filterleiste* reduzieren -- was im gezeigten Beispiel nicht wirklich notwendig, aber bei langen Tabellen sehr hilfreich ist.
// End inc_views.asciidoc

Wir werden die Filterleiste an einem sehr einfachen Beispiel vorstellen und aus der Gesamtheit aller Services die herausfiltern, in deren Name „cpu“ vorkommt: Klicken Sie im link:intro_tools.html#overview[Overview] auf die Gesamtzahl der Services. Auf der Hauptseite werden dann in der Statusansicht [.guihint]#All services# alle Services eingeblendet. Klicken Sie in in der Aktionsleiste auf [.guihint]#Filter#. Die Filterleiste wird am rechten Rand der Hauptseite eingeblendet. Im Eingabefeld [.guihint]#Service# geben Sie `cpu` ein und klicken Sie auf [.guihint]#Apply filters#:

image::view_service_filter.png[]

Mit angewendetem Filter haben wir die Services auf zwei reduziert.

Die Filterleiste ist eine sehr mächtige Möglichkeit, um Statusansichten an Ihre Interessen anzupassen. Die Filterkriterien sind stets kontext-spezifisch und passen daher zum Inhalt der aktuell angezeigten Statusansicht. Im obigen Beispiel sind nur einige der zum Filtern der Services verfügbaren Kriterien zu sehen. Wenn Ihnen die Standardauswahl nicht ausreicht, können Sie sich mit [.guihint]#Add filter# noch mehr Kriterien einblenden lassen und der Filterleiste hinzufügen.

Die Filterleiste wird auch genutzt für die Sucheinträge im [.guihint]#Monitor#-Menü, z.B. [.guihint]#Host search# oder [.guihint]#Service search#. Wenn Sie einen dieser Sucheinträge auswählen, wird eine leere Statusansicht mit geöffneter Filterleiste angezeigt, in der Sie mit den Filterkriterien suchen können.

Wenn Sie den Filter so zugeschnitten haben, dass er genau das anzeigt, was Sie interessiert, können Sie diese angepasste Statusansicht als Lesezeichen speichern -- womit wir beim nächsten Thema wären: den Bookmarks.

// TK2SK: In den Views gibt es neu(?) im Menü Commands > Favorites. Ich habs ausprobiert und Add to Favorites ausgewählt, aber keine Ahnung, wo diese "Favoriten" gespeichert werden - jedenfalls nicht als Lesezeichen.

*Hinweis:* Die Statusansichten haben noch viele weitere Möglichkeiten -- zur Anpassung und zur Erstellung eigener Ansichten. Wie das geht, erfahren Sie im link:views.html[Artikel über Views].


[#bookmarks]
== Bookmarks

// Start inc_bookmarks(snapin).asciidoc
Für Seiten, die Sie immer wieder aufsuchen, können Sie in der Seitenleiste mit dem Snapin [.guihint]#Bookmarks# Lesezeichen anlegen.

Braucht man die wirklich? Immerhin gibt es ja auch Lesezeichen im Web-Browser. Nun, die {CMK}-Lesezeichen haben ein paar Vorteile:

* Ein aufgerufenes Lesezeichen ändert nur den Inhalt auf der Hauptseite, ohne die Seitenleiste neu zu laden.
* Sie können Lesezeichen mit anderen Benutzern teilen.
* Beim Setzen von Lesezeichen wird automatisch das Wiederausführen von Aktionen verhindert.

// TK2SK: "Beim Setzen von Lesezeichen wird automatisch das Wiederausführen von Aktionen verhindert.": Diesen Satz versteh ich nicht.

Am Anfang ist das Bookmarks-Snapin noch leer:

image::empty_bookmarks.png[width=50%]

Wenn Sie nun auf [.guihint]#Add Bookmark# klicken, wird für den Inhalt, der gerade auf der Hauptseite angezeigt wird, ein neues Lesezeichen erzeugt:

image::bookmarks.png[width=50%]

Ihre persönlichen Lesezeichen werden unter [.guihint]#My Bookmarks# gespeichert. 
// End inc_bookmarks(snapin).asciidoc

Wenn Sie tiefer in das Thema einsteigen wollen, um z.B. eine Lesezeichenliste für andere Benutzern freizugeben, können Sie das im link:user_interface.html#bookmarks_edit[Artikel über die Benutzeroberfläche] tun.


[#master_control]
== Master control

// Start inc_master_control.asciidoc
// TK: Es sollten entweder alle Optionen (wenigstens kurz) beschrieben werden - oder auf den ausführlichen Artikel verwiesen werden. Diesen Artikel gibt es aber nicht. Am ehestens wäre user_interface der richtige Ort für die Master Control Opionen.

Im Snapin [.guihint]#Master Control# der Seitenleiste können Sie verschiedene Funktionen des Monitorings einzeln aus- und wieder einschalten, wie z.B. die Alarmierung ([.guihint]#Notifications#). Letzteres ist sehr nützlich, wenn Sie am System größere Umbauarbeiten vornehmen und Ihre Kolleginnen nicht mit sinnlosen Meldungen ärgern möchten.

image::master_control.png[width=50%]

*Wichtig:* Achten Sie darauf, dass im Normalbetrieb alle Schalter auf [.guihint]#on# stehen, da sonst wichtige Funktionen des Monitorings abgeschaltet sein können.
// End inc_master_control.asciidoc


[#metrics]
== Messwerte (Metriken)

Die große Mehrheit der Services liefert nicht nur einen Zustand, sondern
zusätzlich auch Messwerte. Nehmen wir als Beispiel den Service, der auf
einem Windows-Server das Dateisystem `C:` prüft:

image::filesystem_c.png[]

Neben dem Status {OK} sehen wir, dass ca. 38{nbsp}GByte von insgesamt
50{nbsp}GByte des Dateisystems belegt sind, was ca. 76{nbsp}% ausmacht. Die Angaben sehen Sie in der Spalte [.guihint]#Summary#. Der wichtigste Wert davon -- die Prozentangabe -- wird außerdem auf der rechte Seite in der Spalte [.guihint]#Perf-O-Meter# visualisiert.

Das ist aber nur eine grobe Übersicht. Eine detaillierte Tabelle aller Messwerte
eines Services finden Sie, nachdem Sie den Service angeklickt haben, in dessen Detailansicht in der Zeile [.guihint]#Service Metrics#:

image::service_metrics.png[]

Noch interessanter ist aber, dass {CMK} automatisch den Zeitverlauf aller solcher Messwerte standardmäßig für bis zu vier Jahren aufbewahrt (in den sogenannten link:graphing.html#rrds[RRD-Dateien]). Innerhalb der ersten 48 Stunden werden die Werte minutengenau gespeichert. Dargestellt werden die Zeitverläufe in Graphen wie diesem, wie er z.B. für den Service [.guihint]#Check_MK# in den {CEE} dargestellt wird:

image::example_graph.png[]

Hier ein paar Tipps, was Sie mit diesen Graphen anstellen können:

* Zeigen Sie mit der Maus in den Graphen und ein Tooltip zeigt die genauen Messwerte für den aktuellen Zeitpunkt.
* Mit dem Mausrad können Sie in die Zeitachse zoomen.
* Drücken Sie mit der linken Maustaste in eine beliebige Stelle des Graphen und ziehen Sie nach links oder rechts um das angezeigte Zeitintervall zu verändern.
* Ziehen Sie mit gedrückter linker Maustaste nach oben oder unten, um in die vertikale Achse zu zoomen.
* Mit dem Symbol icon:resize_graph[] in der Ecke rechts unten können Sie den Graphen in seiner Größe ändern.

Auch in der {CRE} gibt es ein System zum Anzeigen von Graphen. Es basiert
auf dem Nagios Add-on PNP4Nagios und ist nicht interaktiv.

Das System für die Aufzeichnung, Auswertung und Darstellung von Messdaten
in {CMK} kann noch viel mehr -- vor allem in den {CEE}. Details dazu
finden Sie im link:graphing.html[Artikel über Messwerte und Graphing].

link:intro_monitor.html[Weiter geht es mit {CMK} im Monitoring]

