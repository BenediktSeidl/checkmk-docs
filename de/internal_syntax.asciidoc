= Regeln für das Schreiben im Checkmk-Handbuch
:revdate: 2019-03-27

== Wer liest das Handbuch?

Welche Typen von Lesern haben wir? In welchen Situationen wird das Handbuch gelesen?

* Ich suche nach einem geeigneten Monitoringtool. Dabei ist mir wichtig, dass dieses gut ORACLE überwachen kann. Ist Checkmk geeignet?

* Ich soll in meiner Firma Checkmk übernehmen und will mich gründlich in das Thema einarbeiten und habe auch Zeit dafür (quasi Ersatz für Schulung bei uns).

* Ich verwende Checkmk und habe ein bestimmtes Problem, etwas funktioniert nicht, wie ich es haben will.

* Ich bin Anwender von Checkmk. Jetzt möchte ich in das Thema „Verarbeitung von Events" einsteigen und mich in Ruhe in das Thema einlesen.

* Jemand verwendet schon länger Checkmk und kommt dann auf eine konkrete Frage, z.B. "Wie kann/soll ich ESX überwachen?" oder "Ich habe Dateisysteme, die von einem Host auf einen anderen wandern können und dann (UNKNOWN) werden. Wie kann ich das lösen?"

* Ich kenne die verschiedenen Möglichkeiten, Checkmk zu verwenden. Welche davon ist denn die beste / üblichste? Wie soll man es aufziehen? (Best practise)

* Ich verwende seit längerem die (CRE). Jetzt überlege ich, ob die (SE) für mich interessant ist und gucke mir gezielt einige der Features, die diese mitbringt.

* Anwender der (RE) stolpern beim Lesen des Handbuchs immer wieder über Features der (EE) und werden neugierig.

* Ich bin Superexperte für Checkmk und möchte Erweiterungen dafür bauen, ich möchte bestimmte Dinge im Checkmk automatisieren, Skripten, etc. (Poweruser)

* Ich bin Mitarbeiter von MK (oder Partner) und möchte bestimmte Aspekte in Checkmk *genau* verstehen, um dann meinen Kunden helfen zu können.

Welche Erlebnisse/Gefühle soll der Leser mit dem Handbuch haben (wie wünschen wir uns das)?

* Ich finde, was ich suche (*vollständig*).
* Es ist *angenehm* zu lesen.
* Ich finde die Information *schnell* und kann sie schnell lesen.
* Es ist *hilfreich* (Ich hab's genau verstanden. Ich kann es anwenden und auf andere Situationen übertragen.)
* Die Antwort ist *korrekt* und *präzise*.
*  Ich habe (zufällig) etwas *Neues* und Tolles entdeckt

== Syntax des Textformates

Die Artikel des Checkmk-Handbuchs sind in einem eigenen Format
verfasst, das intern „Nowiki“ heißt, weil es eine ähnliche Syntax
hat, wie ein Wiki, aber keines ist. Dieses Format hat für uns den
Vorteil, dass wir es um Checkmk-spezifische Makros anreichern
können und die Darstellung wo immer nötig flexibel an unser
Webseitenlayout angleichen können.

Grundsätzlich ist es ein HTML-Code, in dem bestimmte Makros erlaubt
sind, die von der Webseite ersetzt werden. Die Menge an direkt
geschriebenem HTML-Code soll aber _auf das absolut notwendige
begrenzt werden_.

Absätze werden durch Leerzeilen voneinander getrennt. Bitte
*kein* `&lt;br&gt;` oder `&lt;p&gt;` verwenden.

Der Großteil der Nowiki-Makros wird durch zweibuchstabige Kürzel
am Zeilenanfang geschrieben, welche auf einen Doppelpunkt enden.

Die Implementierung der Makroersetzung ist in der Datei
`htdocs/nowiki_format.inc`. Dort kann man Details nachsehen,
Erweiterungen einbauen und Bugs beheben.

=== Beginn eines Dokumentes

In der ersten Zeile jedes Artikels steht der Titel mit einem `TI:`
und darunter nach `DT:` das Datum der letzten _inhaltlichen_
Änderung (also nicht nur Beheben von Tippfehlern):

.

----*TI:*Regeln für das Schreiben im Check_MK-Handbuchs
*DT:*2016-10-05
----

Der Titel wird nicht nur im Artikel selbst angezeigt, sondern auch
im Inhaltsverzeichnis `index`, bzw. an allen anderen Stellen,
an denen `IN:` verwendet wird.

Artikel, die noch im Enstehen sind, erhalten anstelle des Datums das
Wort `draft`:

.

----*TI:*Regeln für das Schreiben im Check_MK-Handbuchs
*DT:*draft
----

Daraufhin erscheint oben im Artikel ein entsprechender Hinweis für den Leser.

Wenn es weitere Artikel gibt, die mit diesem irgendwie verwandt oder
verschwägert sind, kann man ein `SA:` (see also) anhängen. Dabei
listet man dann die Artikelnamen mit Komma getrennt auf und sie erscheinen
in einem Extrakasten oben rechts beim Artikel.

.

----*SA:*cmc,cmc_migration,cmc_differences
----

*Hinweis:* `SA:` ist seit Ende März 2019 wieder funktionabel und
soll auch verwendet werden, wo es sinnvoll erscheint.

=== Der Index

Für den Hauptindex `index` gibt es ein spezielles Makro,
welches einen Indexeintrag auf einen Artikel erzeugt und diesen
automatisch weglässt, wenn es den entsprechenden Artikel noch
nicht gibt (In der Testversion wird der Eintrag noch gesetzt,
aber mit einem Icon ICON[brokenlink.png] als fehlend markiert).
Außerdem wird automatisch der Titel aus dem Artikel
geholt.
Übrigens: `IN:` kann auch in einem Mantelartikel verwendet werden, der nur die
Einleitung für eine ganze Sammlung von weiteren Artikel ist.

Beispiele:

.

----*IN:*intro
*IN:*introduction_packages
*IN:*graphing
----

Das wird dann zu:

IN:intro
IN:introduction_packages
IN:graphing

Beim Verweis auf die Seite kann man auch mit Ankern arbeiten. Beispiel:
*Achtung:* Hierbei wird immer noch der Titel der ganzen Seite verwendet,
nicht der von der Überschrift mit dem Anker.

.

----*IN:*intro#editions
----

... wird dann zu:

IN:intro#editions

==== Eigene Titel

Man kann den angezeigten Linktitel ganz einfach überschreiben, in dem man
ihn hinten anhängt. Beispiel:

.

----*IN:*intro#editions Die Editionen
----

Wird nun zu:

IN:introduction#editions Die Editionen

==== Interne Artikel

Man kann in den Index auch Artikel einhängen, welche nicht veröffentlicht
werden, sondern nur intern genutzt werden sollen. Dabei handelt es sich
zum Beispiel um diesen Artikel hier. Aber auch um Entwürfe, die es noch
nicht wert sind, online zu gehen. Dafür gibt es das Kürzel `DR:`,
welches für „Draft“ steht:

.

----*DR:*syntax
----

Wird im Testsystem zu:

DR:syntax


=== Überschriften

Überschriften werden mit `H1:`, `H2:` und `H3:`
gekennzeichnet:

.

----*H1:*Syntax des Textformates
*H2:*Kürzel am Zeilenanfang
*H3:*Überschriften
----

[cols=5,15, options="header"]
|===

|Kürzel
|Bedeutung
|Kommentar


|`H1:`
|Überschrift Ebene 1
|Diese Überschrift taucht im Inhaltsverzeichnis des Artikels auf und wird
automatisch durchnummeriert. Es definiert ein _Kapitel_. Ein Kapitel
braucht nicht unbedingt mit `H2:` weiter untergliedert zu sein.
Falls es das ist, darf zwischen `H1:` und `H2:` kein
Text stehen.

*Achtung:* Die Überschrift darf nicht so lang sein, dass es im
Inhaltsverzeichnis (Kasten rechts oben) einen Umbruch gibt!

*Achtung (2):* In Überschriften sind keine Textauszeichnungen wie
z.B. &lt;tt&gt; oder dergleichen erlaubt!


|`H2:`
|Überschrift Ebene 2
|Diese Überschrift wird mit zwei Ziffern nummeriert und taucht ebenfalls im
Inhaltsverzeichnis auf.


|`H3:`
|Zwischenüberschrift
|Keine Nummerierung. Dient nur der Gliederung. Zwischen einem `H2:`
und dem folgendem `H3:` darf ein Textkörper stehen. Ein `H3:`
ist aber _nur_ nach einem `H2` erlaubt.

|===

=== Verweise und Links

Links zu externen Webseiten werden einfach in HTML mit `&lt;a
href=...&gt;` erzeugt. Links zu Seiten im Checkmk-Handbuch schreibt man
in Wiki-Manier in eckigen Klammern: `&#91;name|Titel]`. `name`
ist dabei der Dateiname der Artikeldatei. Wichtig: zwischen `&#91;`
und `]` darf es keinen Zeilenumbruch geben. Der Parser von Nowiki
ist nicht so schlau, dass zu erkennen.

*Achtung*: Wir verwenden *kein* `target=_blank`!. Erstens
ist das ein Sicherheitsproblem. Zweitens ist das heute nicht mehr üblich.
Wenn der Leser eine neue Seite aufmachen will, kann er das selbst entscheiden.

==== Anker

Anker setzen einen Einsprungpunkt an eine bestimmte Stelle im Artikel, damit
man direkt auf diese Stelle verlinken kann. Anker sind normalerweise an
Überschriften der Ebene `H1:` und `H2:` gebunden, in dem
ein beliebiges _Tag_ mit einer Raute angehängt wird:

.

----**H1:Der Livestatusproxy*#liveproxy*
----

Einen Anker an einer beliebigen Stelle (z.B. auch vor einem `H3:`) setzt
man mit einem `AN:` am Anfang der Zeile:

.

----*AN:logging*
**H3:Logdateien
Hier kommt der Text zu den Logdateien
----

Der Verweis auf einen Anker wird einfach an den Namen des Artikel mithilfe
einer `#` Raute angehängt: `&#91;notifications#logging|Das Logging]`.
Bei Verweisen innerhalb eines Artikels nimmt man einfach den einen Namen. Dafür
gibt es keine spezielle Syntax.


=== Auszüge von Dateien

Dateiinhalte und Mitschnitte von Konsolensitzungen haben eine eigene Syntax
und werden strikt unterschieden! Dateiinhalte werden in einen Abschnitt
gepackt, der mit `F+:` beginnt und mit `F-:` endet. Dem
`F+:` kann optional ein Dateiname angeängt werden. Wichtig: Pfade
innerhalb einer OMD-Instanz werden immer als relative Pfade angegeben.
Beispiel: das hier...

.

----**F+:var/log/cmc.log
2016-10-03 22:54:33 [5] -----------------------------------------------------------------
2016-10-03 22:54:33 [5] Check_MK Micro Core started with PID 17481
2016-10-03 22:54:33 [5] Version 1.2.8-2016.10.03 compiled Mon, 03 Oct 2016 02:35:46 +0000 on trusty-64
2016-10-03 22:54:33 [5] Loaded 0 hosts and 0 services in 0.044 ms.
**F-:
----

... wird so dargestellt:

.var/log/cmc.log

----2016-10-03 22:54:33 [5] -----------------------------------------------------------------
2016-10-03 22:54:33 [5] Check_MK Micro Core started with PID 17481
2016-10-03 22:54:33 [5] Version 1.2.8-2016.10.03 compiled Mon, 03 Oct 2016 02:35:46 +0000 on trusty-64
2016-10-03 22:54:33 [5] Loaded 0 hosts and 0 services in 0.044 ms.
----

Innerhalb eines Dateiinhaltes sind erlaubt:

* Fettschrift mit `&ltb>...&lt;/b>`
* Die Hervorhebung einer Passage durch `&lt;b class=hilite>...&lt;/b>`

Das sieht dann z.B. so aus:

.var/log/cmc.log

----2016-10-03 *22:54:33* [5] Check_MK Micro Core started with <b class=hilite>PID 17481*
----


=== Konsolensitzungen

Konsolensitzungen - also Dialoge auf dem _Terminal_ und nur diese - werden
mit `C+:` und `C-:` eingeschlossen und anders dargestellt als
Dateiinhalte. Konsolensitzungen werden *NICHT* als Screenshots eingebunden!
Denn dann sind sie nicht gut änderbar und außerdem kann der Benutzer dann nichts
rauskopieren.

Die wichtigste Konvention bei den Konsolensitzungen ist: Zeichen, die
der Benutzer *eintippt* werden in Fettschrift dargestellt. Und zwar
_ausschließlich_ diese. Wenn du etwas hervorheben möchtest, dann
verwende `&lt;b class=hilite>...&lt;/b>`.

Speziell für Eingabeprompts auf der Shell gibt es dafür ein paar wichtige
Makros, die unbedingt verwendet werden sollen:

* Ein Prompt als `root`-Benutzer wird durch `RP:` geschrieben
* Ein Prompt als normaler Linuxbenutzer wird durch `UP:` geschrieben
* Ein Prompt als OMD-Benutzer wird durch `OM:` geschrieben
* Ein OMD-Prompt mit einer _ganz bestimmten_ Site-ID wird durch `OM(siteid):` geschrieben.

Für Dinge wie die Ausgabe von `omd status` gibt es die Möglichkeit, Buchstaben
farbig zu machen:

* Rote oder grüne Fettschrift mit `&lt;b class=red>...&lt;/b>` bzw. `&lt;b class=green>...&lt;/b>`

Hier Beispiel für die Syntax:

.

----**C+:
**UP:su -
**Password: 〈b〉********〈/b〉
**RP:rm -rf /
**RP:su - mysite
**OM:omd status
**omd status
mkeventd:       〈b class=green>running〈/b〉
liveproxyd:     〈b class=green>running〈/b〉
mknotifyd:      〈b class=green>running〈/b〉
rrdcached:      〈b class=green>running〈/b〉
cmc:            〈b class=red>stopped〈/b〉
**OM(slave):exit
**C-:
----

Und so wird es dann dargestellt:

[source,bash]
----
UP:su -
Password: **********
RP:rm -rf /
RP:su - mysite
OM:omd status
mkeventd:       <b class=green>running*
liveproxyd:     <b class=green>running*
mknotifyd:      <b class=green>running*
rrdcached:      <b class=green>running*
cmc:            <b class=red>stopped*
OM(slave):exit
----

=== Überlange Zeilen in C+: und F+:

In Konsolensitzung oder Dateiinhalten kann es Zeilen geben, die so lang sind, dass
sie nicht mehr in die vorgesehene Breite passen (welche aktuell bei 89 Zeichen liegt).
In der Onlineversion des Handbuchs erscheint dann einfach ein vertikaler Rollbalken,
so dass ein künstlicher Umbruch vermieden wird.

Im gedruckten Buch geht das natürlich nicht. Hier werden die Zeilen automatisch
umgebrochen und mit zwei blauen Pfeilen so markiert, dass der Leser Bescheid
weiß, dass es eigentlich nur eine Zeile sein soll.

Manchmal sind die Ausgaben in voller Länge aber nicht wichtig und sollen im Buch
einfach bei 89 Zeichen abgeschnitten werden - online jedoch komplett ausgegeben.
Dies kann mit dem Makro `TR:` am Anfang der Zeile machen. TR kommt von
„truncate“. Beispiel:

.

----**C+:
**UP:kubectl get secrets check-mk-token-z9hbp -n check-mk -o yaml | grep "token:" | cut -f4 -d' ' | base64 --decode
*TR:*eyJhbGciOiJSUzI1NiIsImtpZCI6IiJ9.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJjaGVjay1tayIsI^M
*TR:*mt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJjaGVjay1tay10b2tlbi16OWhicCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5^M
*TR:*hbWUiOiJjaGVjay1tayIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjIxODE3OWEzLTFlZTctMTFlOS1iZjQzLTA4MDAyN2E1ZjE0MSIsInN1YiI6I^M
*TR:*nN5c3RlbTpzZXJ2aWNlYWNjb3VudDpjaGVjay1tazpjaGVjay1tayJ9.gcLEH8jjUloTeaAj-U_kRAmRVIiETTk89ujViriGtllnv2iKF12p0L9ybT1fO-1Vx7XyU8jneQRO9lZw8JbhVmaPjrkEc8^M
*TR:*kAcUdpGERUHmVFG-yj3KhOwMMUSyfg6wAeBLvj-y1-_pMJEVkVbylYCP6xoLh_rpf75JkAicZTDmhkBNOtSf9ZMjxEmL6kzNYvPwz76szLJUg_ZC636OA2Z47qREUtdNVLyutls7ZVLzuluS2rnfoP^M
*TR:*JEVp_hN3PXTRei0F5rNeA01wmgWtDfo0xALZ-GfvEQ-O6GjNwHDlsqYmgtz5rC23cWLAf6MtETfyeEJjRqwituhqUJ9Jp7ZHgQ%^M
**C-:
----

Und so sieht das dann im Buch aus:

image::bilder/syntax_tr_makro.png[]


=== Aufzählungen

Für Aufzählungen mit Spiegelstrichen (Bullets) gibt es eine Variante ohne
Nummerierung mit `LI:` und eine mit mit `NL:`:

.

----Das hier sind die Vorteile:
**LI:Punkt eins
**LI:Punkt zwei

Und hier sind die Schritte zum Einrichten
**NL:Mach zuerst dies
**NL:und dann das
----

Das sieht dann so aus:

Das hier sind die Vorteile:
* Punkt eins
* Punkt zwei

Und hier sind die Schritte zum Einrichten
. Mach zuerst dies
. und dann das

*Wichtig:* Der komplette Text eines Items muss im Quellcode in einer Zeile stehen.
Ja - das kann zu langen Zeilen führen. Also fasse dich kurz! Wenn die Zeile
zu lang ist, ist das ein guter Hinweis dafür, dass Spiegelpunkte hier
gar nicht mehr angemessen sondern, sondern normale Absätze der richtige Weg.
Spiegelpunktlisten sollen nämlich einen schnellen Überblick geben.

=== Tabellen

Für Tabellen gibt es keine eigene Syntax. Es wird einfach HTML verwendet.
Mach *kein eigenes Styling*! Wenn dir die Darstellung von Nowiki nicht
gefällt, dann meckere gerne beim Chefdesigner rum, aber bastele trotzdem
nix eigenes mit HTML!

Folgende Regeln gelten:

* Tabellenüberschriften sind optional und werden in `&lt;th&gt...&lt;/th&gt;` gesetzt
* Die Elemente &lt;tr&gt;, &lt;th&gt; und &lt;td&gt; sollen jeweils in einer eigenen Zeilen stehen.

Für die `&lt;td&gt...&lt;/td&gt;`-Elemente gibt es folgende erlaubte
CSS-Klassen. Bei Verwendung von mehreren Klassen braucht man natürlich Quotes:

[cols=, options="header"]
|===


|`&lt;th&gt;`
|Die Überschrift der Spalten erfolgt ohne Trennlinie


|`&lt;td class=tt&gt;`
|IDs oder andere Texte, die 1:1 eingetippt, verglichen oder anderweitig stimmen
müssen


|`&lt;td class=right&gt;`
|Rechtsbündige Darstellung -- vor allem für Zahlen. dass `right`-Attribut darf auch in `&lt;th&gt;` verwendet werden.

|===

==== Breite der Spalten

Die Breite der Spalten wird so gut wie es geht von HTML bzw. `nwbook`
automatisch bestimmt. Meist klappt dies vor allem beim Buch nicht optimal.
Daher soll man die Breiten der Spalten auf der Papierversion ausprobieren
und dann explizit setzen wie folgt:

.

----<tr>
<th style="width:17%">open</th>
<td>Foo bar</td>
</tr>
----

Das ganze nur in der ersten Zeile der Tabelle, entweder bei `&lt;td&gt;`
oder bei `&lt;th&gt;`. Man darf die Breite nur bei n-1 Spalten angeben,
nicht für alle. Die letzte bekommt einfach denn Rest.

=== Textauszeichnung

Folgende Formatierungen sind im Fließtext erlaubt.

[cols=30, options="header"]
|===

|Format
|Erklärung


|`&lt;i&gt;text&lt;/i&gt;`
|_Kursivschrift_ im Fließtext. Dies wird verwendet bei der Einführung oder erstmaligen Verwendung von Begriffen und bei einer milden Hervorherbung.


|`&lt;b&gt;text&lt;/b&gt;`
|Fettschrift im Fließtext. Dient der *deutlichen* Hervorhebung. Bitte sehr
sparsam verwenden, sonst sieht aus aus wie in den Bilderwitzen von MAD.


|`&lt;tt&gt;omd config&lt;/tt&gt;``
|Zitate von der _Kommandozeile_, Eingaben, die der Benutzer 1:1 in der
GUI eingeben muss: Melden Sie sich als `omdadmin` mit dem Passwort
`omd` an. Dieser Zeichsatz symbolisiert, dass hier eine _exakte_
Übereinstimming wichtig ist. Der Zeichensatz ist daher auch optimiert für
die Erkennung von Unterschieden zwischen `O` und `0` und
dergleichen.

Achtung: &lt;tt&gt; in `H1:`, `H2:` und `H3` sind
nicht erlaubt!




|`&#123;{Service description}}`
|Zitat eines Textes aus der (CMK)-Benutzer&shy;oberfläche. Dies wird aktuell
{{kursiv}} dargestellt, aber das kann sich später eventuell ändern. Das ist
also *nicht* das gleiche wie &lt;i&gt;_Kursivschrift_&lt;/i&gt;, auch
wenn es erstnmal gleich aussieht.

Wenn etwas gleichzeitig ein Zitat *und* eine exakte Übereinstimmung bedeutet (z.B. das Zitieren einer ID), dann gewinnt `&lt;tt&gt;`


|`&#123;{Global settings|Foo|Bar}}`
|Navigationspfad in der (CMK)-Benutzer&shy;oberfläche. Darstellung ist
aktuell {{Global settings|Foo|Bar}}. Der Pfad beginnt meist mit
dem WATO-Modul. Wir verwenden auch im Deutschen Handbuch immer die Texte
der englischen GUI.


|===


[#special_characters]

==== Zusätzliche erlaubte Sonderzeichen:

[cols=, ]
|===


<td class=tt style="width:20%">&lt;br>`
|Zeilenumbruch: nur einsetzen bei ernsten Layoutproblemen!


|`&amp;shy;`
|Weiches Trennzeichen, Trennvorschlag


|`&amp;nbsp;`
|Geschütztes Leerzeichen


|`&amp;#8230;`
|Ellipse (drei Punkte)


|`&amp;amp;`
|&-Zeichen


|`&amp;copy;`
|Copyright-Zeichen


|`&amp;gt;`
|"Größer als"-Zeichen


|`&amp;lt;`
|"Kleiner als"-Zeichen


|`&nbsp;--&nbsp;`
|Echter Gedankenstrich. Achtung: es ist wichtig, dass vor und nach den Strichen ein Leerzeichen
kommt. Des nachfolgende Leerzeichen soll entfallen, falls dort die Zeile zuende ist.
|===

==== Typographie

Folgende Konstrukte werden automatisch erkannt und typografisch korrekt gesetzt - sowohl in HTML,
als auch in LaTeX (im Buch):

[cols=, ]
|===


<td class=tt style="width:20%">`z.``B.``
|Abkürzung für "zum Beispiel". Es muss im Quelltext genau so geschrieben werden (ohne Leerzeichen)

|===


=== (RE) versus (EE)

Manche Abschnitte im Handbuch betreffen nur die (CRE) oder nur
die (EE). Im Fließtext werden die Namen einfach durch `&#40;CEE)` oder `&#40;CRE)` eingefügt.

Bei ganzen Absätzen, die nur eine Edition betreffen, werden durch
ein `&#91;CEE]` bzw. `&#91;CRE]` bzw. `&#91;CME]`
_am Anfang_ des
Abschnittes markiert. Das Kürzel steht direkt am Anfang der ersten Zeile
des Abschnittes. Wichtig ist dabei, dass er Absatz _lang genug_
ist. Denn das Wiki baut zur Kennzeichnung der Distro links ein Bild ein,
dass vom Text umflossen wird. Ist der Absatz zu kurz, kann es zu komischen
optischen Auswirkungen kommen.

.

----[CEE] Dieses tolle Feature geht natürlich nur bei der (EE). Und wenn Sie die (EE)
nicht haben, dann schauen Sie ganz schön alt aus, Sie Geizhals, Sie sparsamer.
Hätten Sie lieber mal ein bisschen mehr Geld ausgegeben, dann würden Sie das
Feature auch bekommen.
----

[CEE] Dieses tolle Feature geht natürlich nur bei der (EE). Und wenn Sie die (EE)
nicht haben, dann schauen Sie ganz schön alt aus, Sie Geizhals, Sie sparsamer.
Hätten Sie lieber mal ein bisschen mehr Geld ausgegeben, dann würden Sie das
Feature auch bekommen.


=== Makros im Fließtext

[cols=30, options="header"]
|===

|Makro
|Erklärung


|`&#40;CMK)`
|Produktname (CMK). Bitte anstelle des ausgeschriebenen Check_MK immer dieses
Makro verwenden, damit wir später eine Schreibung anpassen können, wenn nötig.


|` &#40;OK) &#40;WARN) &#40;CRIT)<br>
&#40;PEND) &#40;UNKNOWN)<br> &#40;UP) &#40;DOWN) &#40;UNREACH)
|Bezeichnet Monitoringzustände. Die Darstellung ist:
(OK) (WARN) (CRIT) (PEND) (UNKNOWN) (UP) (DOWN) (UNREACH)


|`&#40;CRE)`
|Die CRE in Langform: (CRE)


|`&#40;CSE)`
|Die CEE in Langform: (CSE)


|`&#40;CFE)`
|Die CFE in Langform: (CFE)


|`&#40;CME)`
|Die CME in Langform: (CME)


|`&#40;CEE)`
|Alle (EE) in Langform: (CEE)


|`&#40;RE)`
|(RE) für häufige Nutzung im Textfluss


|`&#40;SE)`
|(SE) für häufige Nutzung im Textfluss


|`&#40;FE)`
|(FE) für häufige Nutzung im Textfluss


|`&#40;ME)`
|(ME) für häufige Nutzung im Textfluss


|`&#40;EE)`
|Die (EE) im Allgemeinen, also die (SE), (FE) oder (ME), im Textfluss für häufige
Nutzung.


|`ICON&#91;icon_help.png]`
|Dient dem Einbetten von kleinen Bildern aus der GUI, die so skaliert
und positioniert werden, dass sie in den normalen Textfluss passen.
Wenn die Icons zur Illustration eingesetzt werden, sollen sie immer
_vor_ dem Begriff stehen, z.B. wie bei der ICON[icon_help.png] Onlinehilfe.
Man kann damit auch Screenshots von Knöpfen wie ICON[button_activate_changes.png]
einbinden.



|`&#40;NEW)`
|(NEW) Ein Hinweis auf einen neuen Artikel. Dieser Hinweis ist für
das Inhaltsverzeichnis (`index`) vorgesehen.



|`VERSION&#91;1.4.8i2]``
|Hinweis auf eine bestimmte (CMK)-Version: Ab Version VERSION[1.4.8i2]*
beherrscht (CMK) dies und das... Das Wort „Version“ wird nicht automatisch
erzeugt. Früher was da mit `&lt;b class=new&gt;...&lt;b&gt;`.
Diese Syntax darf jetzt *nicht* mehr verwendet werden.



|`COMMENT&#91;Bla]`
|Eine so markierte Stelle taucht nur im Entwicklungssystem auf und dient
für unsere internen COMMENT[Kommentare].

|===

=== Anführungszeichen

Für Anführungszeichen, die ein Zitat im Text markieren (wo es also nicht um
das Ascii-Zeichen „Quote“ geht, verwenden wir _in der deutschen Fassung_
die Unicodezeichen *„* und
*“*. Damit man die besser eintippen kann, hilft ein VIM-Makro:

.~/.vimrc

----" Deutsche Anführungszeichen auf und zu
imap `` „
imap `' “
----

Jetzt kannst du mit Backtick-Backtick das Anführungszeichen unten mit mit
Backtick-Singlequote das Anführungszeichen oben tippen. In der englischen
Fassung kommen normale Quotes zum Ansatz.

=== Screenshots und Abbildungen

Das Einbinden von Bildschirmfotos und anderen Abbildungen geschieht mit dem
Makro `BI:`. Dies wird als eigener Absatz an den Zeilen anfang
gesetzt, gefolgt vom Dateinamen. Das Bild wird in `htdocs/bilder` erwartet.
Üblich sind PNG-Bilder. JPEG ist ebenfalls erlaubt, aber nur *bei hoher Qualität*,
also wenn mit dem Auge _keine Artefakte_ erkennbar sind. Gerade bei großen
Screenshots sind JPEGs deutlich kleiner und daher manchmal eine sehr gute
Alternative. Aber eben nur, wenn die Qualität passt.

Mehr zu Konventionen zu Screenshots weiter [internal_syntax#screenshots|unten].

Ein Bild wird automatisch auf die volle Breite des Artikels skaliert, wenn
das Makro ohne weitere Argumente verwendet wird:

.

----**BI:matrix_view_1.jpg
----

image::bilder/matrix_view_1.jpg[]

Eine Skalierung auf 60% der Textbreite lässt sich erreichen durch `center width:60%`.

.

----**BI:matrix_view_1.jpg center width:60%
----

image::bilder/matrix_view_1.jpg[align=center,width=60%]

Die Version mit Prozentangaben ist neu seit März 2019. Viele Artikel
verwenden noch absolute Angaben wie `width:200px` oder `width:200`.
Diese beziehen sich auf Pixel, wobei die Textbreite mit 610 angenommen wird.
Bitte verwende nur noch die neue Schreibweise mit Prozentangaben.

image::bilder/snapin_site_status.png[align=left,width=30%]

Manchmal sieht es besser aus, wenn ein Bild links steht und vom Text umflossen
wird. Das geht dann mit `left` - eventuell in Kombination mit einer
Größenangabe. Hier ist wichtig, dass der Text dann auch lang genug ist,
damit die folgenden Absätze nicht auch nach rechts verschoben werden. Außerdem
sieht es doof aus, wenn unter dem Bild genau noch eine Zeile Text Platz hat.

Im Notfall darf man _ausnahmsweise_ an den Absatz ein oder
zwei `&lt;br&gt;` anzuhängen. Probier das dann bitte auch auf
der Papierversion aus! Der Quellcode sieht etwa so aus:

.

----**BI:snapin_site_status.png left width:30%
Manchmal sieht es besser aus, wenn ein Bild links steht und vom Text umflossen
wird. Das geht dann mit `left` - eventuell in Kombination mit einer
...
----


==== Wichtige Regeln zur Skalierung von Bildern

* Bilder sollen immer so skaliert werden, dass Schriften im Bild möglichst die gleiche Größe haben, wie die im Fließtext.
* *Auf keinen Fall* darf die Schritt im Bild *größer* sein, als im Text! Denn das sieht so doof aus...

Hinweise zum Erstellen von Screenshots findest du [internal_syntax#screenshots|weiter unten].


==== Hervorhebungen

Wenn du im Screenshot eine Stelle hervorheben willst (gute Idee, wenn der
Text sich darauf bezieht), dann hat das `BI:` dafür das Schlüsselwort
`hilite:` mit vier Zahlen. Die Zahlen sind _Prozentwerte_ der
Breite bzw. Höhe und bedeuten der Reihe nach:

* X-Wert der Mitte der Hervorhebung
* Y-Wert der Mitte der Hervorhebung
* Breite der Hervorhebung
* Höhe der Hervorhebung

Beispiel:

.

----**BI:folder_monitored_on.png center width:90% *hilite:40,78,76,20*
----

Und die Darstellung:

image::bilder/folder_monitored_on.png[align=center,width=90%]

Die Mitte ist also bei 40%/78% der Bildgröße. Die Breite des Rahmens
ist 76% vom Bild, die Höhe ist 20%. Achte immer darauf, dass das umrahmte
schön in der Mitte vom Rahmen sitzt und ein hübscher Abstand da ist.
Ein bisschen Spielen mit den Zahlen ist sicher nötig. Probier dabei
mal bei Vim - während du auf einer Zahl stehst - die Tasten Ctrl-A und Ctrl-X.

*Achtung*: Wenn das Hilite in der Papierversion und in HTML nicht
100% exakt gleich sind, ist das immer ein Bug vom HTML. Das Buch ist
maßgeblich. Mach deinen Artikel so, dass es im Buch passt, sag Bescheid,
und wir fixen die HTML-Darstellung.

Es gibt eine kleine Hilfe, um die Koordinaten schneller herauszufinden. Ersetze
`BI:` durch `BD:`:

.

----**BD:folder_monitored_on.png *hilite:40,78,76,20*
----

Das sieht dann so aus:
BD:folder_monitored_on.png hilite:40,78,76,20

### --> Das klappt aktuell nur, wenn das Bild 100% Breite hat.


=== Kommentare


Inline-Kommentare wurden schon beschrieben und werden `COMMENT&#91;so]`
ausgezeichnet. Das erscheint dann COMMENT[so]. Ganze Zeilen auskommentieren
kann man durch drei Rauten am Zeilenanfang:

.

----**### Das hier ist alles noch nicht wirlich fertig.
**### Wir sollten nach das hier beschreiben...
----

Während die Inlinekommentare im Entwicklungssystem noch im HTML-Code zu sehen sind,
verschwinden die Zeilenkommentare komplett.


[#screenshots]
== Erstellen von Screenshots

Beim Erstellen von Screenshots ist für ein gutes Gesamtbild des Handbuches
sehr wichtig, dass diese alle auf die gleiche Art erstellt werden. Folgende
Grundregeln gelten:

* Screenshots werden grundsätzlich mit einem Browser erstellt, wo Checkboxen und Ähnliches ordentlich dargestellt und skaliert werden.
* Auf Screenshots sind niemals Elemente vom Browser sichtbar (Locationzeile, Rollbalken und so weiter)
* Screenshots sind für das deutsche und englische Handbuch gleich.
* Daher werden Screenshots immer mit der englischen Spracheinstellung gemacht. Achte darauf, Chrome mit `LANG=` zu starten, so dass dieser mit englischen Systemtexten läuft. Das wird z.B. bei Dateiauswahldialogen relevant.
* Screenshots werden nur auf Bildschirmen mit einer hohen Auflösung gemacht (>= 2560 Pixel)
* Der Browserinhalt wird bis auf das maximal mögliche hochskaliert, _ohne dass dabei bereits hässliche Umbrüche entstehen_
* Die Benennung der Dateien ist klein und mit _Unterstrichen_ (keine Bindestriche)

Das Hochskalieren ist wichtig, auch wenn das Bild in der Doku dann auf
„650 Pixel“ runterskaliert wird.  Denn auf einem aktuellen Bildschirm
wird das ja dann normal wieder hochskaliert. Ziel ist, dass selbst bei
einem hochauflösenden Bildschirm der Benutzer niemals ein Bild sieht,
dass schlechter als seine Bildschirmauflösung ist (also ein Pixel größer
als ein Pixel dargestellt wird). Daher brauchen wir in der Auflösung eine
gewisse „Reserve“.

Achte beim Einbinden der Screenshots allerdings dann darauf, dass
die normale Schrift im Screenshot _nie größer ist als im Fließtext
der Doku_.


=== Namenskonventionen bei Screenshots

* Sites heißen immer *mysite*, Slaves heißen immer *myslave*.
* Der Benutzer heißt immer *cmkadmin*. Alte Screenshots mit *omdadmin* oder anderen Namen sollen langfristig aus dem Handbuch verschwinden.
* Hosts in Checkmk heißen immer *myserver* mit einer beliebigen Zahlenfolge, wenn eine Konsolensitzung betrieben wird. In Screenshots sollte der Name das Verständnis der Thematik unterstützen.
* Generell werden Benutzer, Passwörter, etc. als *myuser*, *mypassword*, etc. dargestellt. Sinn dahinter ist, dass immer klar ist, dass es sich hier nur um Platzhalter handelt, die vom Benutzer selbstständig durch etwas sinnvolles ersetzt werden müssen.


=== Screenshots von einzelnen Elementen

Dialoge, die in der GUI in Boxen daherkommen sollen wenn möglich als Einzelteile
dargestellt werden. Beispiel:

image::bilder/new_host_3.png[align=center,width=500]

Damit man das sauber einfangen kann, kann man in Checkmk alle Hintergründe auf
weiß setzen mit einer nicht dokumentierten Option in `multisite.mk`:

.etc/check_mk/multisite.mk

----screenshotmode = 1
----

In Gimp kannst du das gewünschte Element dann zuerst _grob_ ausschneiden
und dann mit Shift-Z (Zealous Autocrop) alles Weiße außenrum automatisch
wegschneiden lassen. Klappt gut, einfach ausprobieren!

Screenshots von mehreren solcher Boxen sind verboten.

Bei Screenshots von *Teilen solcher Boxen,* etwa großen Config-Dialogen,
wird das border-Attribut gesetzt, da [internal_syntax#whiteborder|weiße Randbereiche]
entstehen.

image::bilder/border_example_dialog.png[align=border]

=== Screenshots von ganzen Seiten

Möchtest du im Handbuch wirklich eine ganze Seite zeigen, weil sich das
nicht gut in Einzelteile zerlegen lässt, dann mach einen Screenshot _ohne Seitenleiste_.
Schneide dabei aus der eigentlichen Seite den Teil bis knapp über die Icons
ICON[button_frameurl.png] ICON[button_pageurl.png] aus. Diese sollen _nicht_
in den Screenshot.

* Pass auf, dass die _Ränder_ auf allen Seiten gleich groß sind - also die Breite vom blauen Hintergrund vom Rand bis zum eigentlichen Inhalt.
* Mach es so, dass kein Browserrollbalken zu sehen ist.
* Mach es so, dass nichts rechts abgeschnitten ist.
* Vorher wieder `screenshotmode = 0` setzen!

Hier ist ein guter Screenshot:

image::bilder/dm_pending_changes.jpg[]

* Die Ränder links, rechts und unten sind gleich groß. Der Rand oben ist - gemessen vom Checkmk-Logo aus - ebenfalls gleich groß.
* Die Schrift ist so groß wie möglich. Der Umbruch bei _Version_ und _Core_ wird in Kauf genommen und stört das Layout nicht allzusehr, weil die Knöpfe bei _Activate_ eh recht hoch sind.

Hier ein paar Beispiele von *schlechten* Screenshots:

image::bilder/bi_new_bi_rule_ws30.png[]

* Im Browser zu klein skaliert. Dadurch ist die Schrift sehr klein, obwohl rechts in den
Boxen noch genug Platz wäre für 1-2 Stufen größer.
* Es wäre besser, jede der Boxen einzeln zu zeigen und zu besprechen. Eventuell diente der Screenshot nur dafür, die Childnode Generation zu zeigen. Der Rest ist Ballast.

image::bilder/bi_all_aggr_ex5.png[]

* Schrift viel zu klein - kaum leserlich bei der Standardbreite im Handbuch
* Auch hier hätte wohl der Inhalt in [.guihints]#Tree# vollkommen gereicht
* Der untere Rand ist breiter als der linke.

=== Richtige Schriftgröße in Screenshots

Damit Screenshots später in der Doku eine möglichst einheitlich Schriftgröße aufweisen, ist
es nützlich das Verhältnis von Bildbreite zu Schriftgröße im Screenshot
im Auge zu behalten. Maßstab ist dabei die Schriftgröße des Textes,
welcher im Mittelpunkt stehen soll. In der Regel stehen Überschriften z.B. nicht
im Mittelpunkt.

Gemessen wird die Höhe eines Großbuchstabens. Ideal ist z.B. E, T, F, L usw.

Leider skaliert die Schriftgröße im Bild nicht parallel mit der
Schriftgröße im Text, will man die Seite im Browser vergrößern. Die
folgende Tabelle stellt daher das Verhältnis bei einer Skalierung von 100%
dar. Es gibt zu jeder Schriftgröße im Screenshot sowohl eine optimale
Bildbreite als auch einen Bereich, der noch tolerabel ist. Alle Werte in px:

[cols=30,20,20, options="header"]
|===


|Schriftgröße im Bild
|Bildbreite
|Bereich
|Rand bei border-Attribut


|16 px
|1200
|1180 - 1220
|32 px


|17 px
|1275
|1250 - 1300
|34 px


|18 px
|1350
|1330 - 1370
|36 px


|19 px
|1425
|1400 - 1450
|38 px


|20 px
|1500
|1480 - 1520
|40 px


|21 px
|1575
|1550 - 1600
|42 px


|22 px
|1650
|1630 - 1670
|44 px


|23 px
|1725
|1700 - 1750
|46 px


|24 px
|1800
|1780 - 1820
|48 px


|25 px
|1875
|1850 - 1900
|50 px


|26 px
|1950
|1930 - 1970
|52 px


|27 px
|2025
|2000 - 2050
|54 px


|28 px
|2100
|2080 - 2120
|56 px


|29 px
|2175
|2150 - 2200
|58 px


|30 px
|2250
|2230 - 2270
|60 px


|31 px
|2325
|2300 - 2350
|62 px


|32 px
|2400
|2380 - 2420
|64 px


|33 px
|2475
|2450 - 2500
|66 px

|===

Im Idealfall stimmt das Verhältnis schon direkt beim Erstellen des
Screenshots. Da die Schriftgröße bei der Bildbearbeitung nicht mehr
verändert werden kann, kann man nur bei der Bildbreite nacharbeiten,
z.B. in dem der Rahmen und/oder die Tabellen künstlich versetzt werden. Im
schlimmsten Fall muss der Screenshot neu erstellt werden.

=== Screenshots von Sidebarsnapins

Da die Snapins eine feste Breite haben, können diese immer einfach gleich
skaliert werden mit einer Breite von 42%:

.

----**BI:ec_performance.png center width:42%
----

Die Schriftgröße im Screenshot ist dann ca 10% kleiner als die Schrift im Text,
was optisch meiner Ansicht hier aber besser aussieht, also eine 1:1 Skalierung:

image::bilder/ec_performance.png[align=center,width=42%]

[#whiteborder]
=== Weiße Randbereiche

Wenn ein Screenshot einen weißen Bereich hat, der an den Rand reicht, sieht
das ziemlich doof aus:

image::bilder/cma_de_backup_job_log_2.png[]

In solchen Fällen fügt man einfach das Attribut `border` hinzu. Das
fügt einen feinen Rand außenrum ein:

.

----**BI:cma_de_backup_job_log_2.png border
----

image::bilder/cma_de_backup_job_log_2.png[align=border]

Auch bei Views-Tabellen (Screenshot-Modus aktivieren) und Ausschnitten von Config-Boxen wird das border-Attribut
gesetzt, um zu vermeiden, dass Text im Screenshot aussieht wie Seitentext. Achte
darauf, dass der Rand oben, unten, links und je nach Bedarf auch rechts
denselben Abstand hat -- und zwar
in der doppelten Größe *der Höhe eines Großbuchstabens.* 

Das folgende Bild hat eine gemessene *Schriftgröße von 21 px,*
gemäß Tabelle ein *Breite von
1575 px* und folglich an allen Seiten *42 px weißen Rand:*

image::bilder/border_example_list.png[align=border]

*Nicht vergessen: *Anschließend den Screenshot-Modus wieder deaktivieren.


=== Inhalte der Screenshots

Für die Inhalte der Screenshots gelten die [internal_syntax#beispiele|Konventionen für Beispiele].


=== Erzeugen von Screenshots

In `git/zeug_cmk/bin` gibt es das Skript `bildschirmfoto`,
dass sich hervorragend für Screenshots eignet. Am besten, du legst das mithilfe
deines Windowmanagers auf eine Tastenkombination. Das Skript:

. Wechselt in das Verzeichnis `git/mkde/htdocs/bilder`
. Erstellt ein Bildschirmfoto vom ganzen Monitor mit einem zufälligen Dateinamen
. Öffnet das Bild in Gimp
. Löscht die Datei nach 10 Sekunden wieder

Du kannst das jetzt in Gimp bearbeiten und - wenn es was geworden ist -
speichern. Das Nette: Solange du mit Gimp nichts speicherst, bleibt auch
nix zurück.

COMMENT[ML: Vorschlag für neues Kapitel]
=== Tipps für Gimp
Insbesondere Screenshots, die nur Ausschnitte zeigen, sind relativ aufwändig
zu bearbeiten. Hier ein beispielhafter Workflow für Gimp (*KÜRZEL* für
deutsche Sprachversion:

. Beschneiden: Komplett randlos *STRG+C*
. Schriftgröße mit Auswahl-Tool messen (Großbuchstabe des relevanten Texts) *R*
. Bild/Leinwandgröße *ALT+B L*
. ____Breite und Höhe um 4 x Schrifthöhe erweitern
. ____Bild zentrieren
. ____Füllung: Weiß
. ____Ebenengröße ändern: Alle Ebenen
. Bild/Bild zusammenfügen *ALT+B U*
. Bild/Hilfslinie: Vertikal gemäß Tabelle setzen *ALT+B H H*
. Breite gemäß Tabelle herstellen

Später im Text das *border-Attribut* nicht vergessen.

== Erstellen von Abbildungen und Diagrammen

Alle Diagramme für das Handbuch werden unter Mac OS mit dem Programm
„Graffle“ erstellt. Dazu hat Mathias eine Formatvorlage für Kästen etc.
erstellt. Wer ein Diagramm braucht: bitte erstmal an Mathias wenden.
Das ist hier noch nicht dokumentiert.


[#beispiele]
== Konventionen für Beispiele

=== Benennungen

Bei IDs, die der Benutzer frei wählen kann, ist es am besten, die
Beispiel-IDs mit `my` beginnen zu lassen, z.B. `mysite`,
`myserver123`. Durch das konsequente Durchziehen dieser Konvention
ist dem Benutzer (irgendwann) klar, dass er das _nicht_ wörtlich
abtippen soll. Denn genau das ist oft das Problem: Schreibst du z.B.
`cmk -v HOSTNAME`, werden sicher 30% der Leser das wörtlich so
abtippen und nicht den eigenen Hostnamen einsetzen. Ein `cmk -v myserver123`
ist da viel eindeutiger!

Festlegungen für bestimmte Situationen:

* Einzelstehene OMD-Sites heißen immer `mysite`. Bei Artikeln zu verteiltem Monitoring sind `mymaster` und `myslave` bzw. `myslave1`, `myslave2` vorgesehen.
* Beispielserver in der Überwachung beginnen mit `myserver...`.
* Beispielnamen, die als ID fungieren (Hostname, Contactgroup-ID), usw. sind grundsätzlich in Kleinbuchstaben.
* Beispielnamen, die als Anzeigename fungieren, sollten Groß-/Kleinschrift verwenden und am besten Leerzeichen enthalten (z.B. `My Host Group 1`). So wird unterstrichen, dass dieses keine Schlüsselfunktion haben.

Bei anderen frei gewählten Namen nimm englische Ausdrücke. Das irritiert die
deutschen Leser nicht. Umgekehrt wohl eher schon.


=== IP-Adressen

Bei deinen Tests wirst du wahrscheinlich sehr oft, die Adresse `127.0.0.1`
verwenden. Nimm diese auf keinen Fall für Beispiele im Handbuch - weder in Screenshots
noch woanders, es sein denn, dass dies im besprochenen Falls ausdrücklich notwendig
ist. Der Benutzer wird verwirrt sein und nicht wissen, dass er die Adresse von
seinem _echten_ Slave, Host oder was auch immer angeben muss.

Um `127.0.0.1` zu vermeiden, kannst du:

* Die externe IP-Adresse deines Testrechners nehmen (also von `wlan0` bzw `eth0`).
* In den Beispieldaten vor dem Screenshot oder im Text die Adresse nur für das Handbuch von Hand ändern


== Begriffe und Sprache

=== Grundlegendes

Hier soll mit der Zeit etwas genauer beschrieben werden, welche Begrifflichkeit und Sprache
im Handbuch verwendet werden sollen. Zwei Sachen sind schonmal klar:

* Der Leser wird direkt und freundlich angesprochen und im Deutschen gesiezt.
* Das Wort *Schaltfläche* ist strikt verboten.

Ferner gibt es im `check_mk`-Git unter `locale` die Datei `LIESMICH-BEGRIFFE`. Diese ist ebenfalls maßgebend!

[#editionen]
=== Die Editionen

(CMK) gibt es in verschiedenen *Editionen*. Wir wollen im Handbuch, aber auch auf der
Webseite, in Flyern, Folien, am Telefon und überhaupt überall eine einheitliche konsistente
Schreib- und Sprechweise für die Editionen verwenden. Es gibt für jeder der vier Checkmk-Editionen
eine kurze und eine lange Schreibweise. Die lange Version soll pro Artikel oder zumindest pro
Absatz nur einmal verwendet werden. Bei Wiederholungen soll man immer die kurze Schreibweise
verwenden. Für beide gibt es für das Handbuch jeweils ein Makro. Bitte beachte, dass das
für die Kunden sichtbare Kürzel der (CSE) CEE ist und nicht CSE. Das ist aus historischen
Gründen so und soll beibehalten werden.

[cols=8,8,84, ]
|===


|Kürzel
|Makros
|Schreibung lang / kurz


|CRE
|`&#40;CRE)<br>&#40;RE)`
|(CRE)<br>(RE)


|CEE
|`&#40;CSE)<br>&#40;SE)`
|(CSE)<br>(SE)


|CFE
|`&#40;CFE)<br>&#40;FE)`
|(CFE)<br>(FE)


|CME
|`&#40;CME)<br>&#40;ME)`
|(CME)<br>(ME)

|===

*Achtung*: Bitte verwechselt Editionen nicht mit *Versionen*! Eine Version ist z.B. 1.6.0p3.

Wenn man im Handbuch oder in anderen Texten einen Sachverhalt beschreibt, der für CFE, CEE und CME
gleichermaßen gilt, so spricht immer im Plural:

* Die (CEE)

oder in der Kurzform:

* Die (EE)

Für beides gibt es Makros, nämlich `&#40;CEE)` bzw. `&#40;EE)`.

Hier sind einige Beispiele für die Verwendung.

„_In der (RE) ist der Monitoringkern Nagios. Die (EE) verwenden hingegen
einen von uns selbst entwickelten Kern._“

„_Wenn Sie eine der (EE) verwenden, können Sie auch sich automatisch wiederholende Wartungszeiten setzen._“.

„_Die (EE) verfügen über eine Integration in Grafana._“

„_Wenn Sie die (RE) einsetzen, finden Sie den Download hier. Bei den (EE) ist er aber dort._".



== Das Handbuch in gedruckter Form

Das neue Programm `nwbook` erzeugt ein PDF des Handbuchs, mit dem
ein gedrucktes Exemplar des Handbuchs erzeugt werden kann. Dieses PDF darf
*auf keinen Fall* weitergegeben werden.

Um das Handbuch zu erzeugen, ruft man im Verzeichnis `git/mkde/books`
den Befehl `./nwbook manual.nwbook` auf. Bitte verwende `--help`
um die Optionen zu erfahren. Wichtig: du brauchst auf deinem Rechner eine
vollständige Installation von LaTex. Folgende Pakete sollten genügen. Wenn
nicht, ergänze bitte die Liste:

[source,bash]
----
RP:aptitude install texlive-latex-recommended texlive-math-extra texlive-lang-german texlive-latex-extra gv texlive-pstricks texlive-generic-recommended
----

=== Bestehende Artikel für das PDF präprieren

Damit die Artikel mit `nwbook` sauber funktionieren, dürfen diese
nicht einfach beliebiges HTML enthalten, sondern nur die oben beschriebenen
Konstrukte. Bei den bestehenden Artikeln muss insbesondere Folgendes umgestellt
bzw. kontrolliert werden.

==== &lt;ul&gt;,  &lt;ol&gt; und &lt;li&gt;

Diese sind nicht mehr erlaubt. Es muss jetzt zwingend `LI:` und `NL:`
verwendet werden.

==== Kaputte HTML-Tabellen

Es ist aufgefallen, dass bei vielen Tabellen im Handbuch das Tags nicht sauber balanciert sind.
Es fehlen z.B. schließende `&lt;tr&gt;`. Der Parser von `nwbook` kann damit nicht
umgehen und meldet einen Fehler. Diese Tabellen müssen repariert werden.

==== Spaltenbreiten in Tabellen

`nwbook` hat einen sehr einfachen heuristischen Ansatz, um gute Breiten
von Spalten in Tabellen zu raten. Falls dies optisch nicht gut aussieht, muss
man die Breite von Hand angeben. Dazu setzt man *nur in der ersten Zeile*
in das `&lt;td&gt;` bzw. `&lt;th&gt;` Element der betroffenen
Spalten das CSS-Attribut `width:___%` wobei man einen Prozentwert der
Gesamtbreite angibt. Eine der Spalten soll man dabei ohne Angabe lassen, die
100% werden dann automatisch ausgerechnet. Beispiel:

.

----