include::global_attr.adoc[]
= Die HW/SW-Inventur
:revdate: 2021-12-02
:title: Die HW/SW-Inventur
:description: Mit der HW/SW-Inventur ermitteln Sie auf den von {CMK} überwachten Hosts die Hardwareausstattung, die installlierte Software und mehr.

{related-start}
link:agent_linux.html[Linux überwachen]
link:agent_windows.html[Windows überwachen]
{related-end}


[#intro]
== Einleitung

Neben dem klassischen Monitoring -- also dem Überwachen von Status-, Log- und
Messdaten -- bringt {CMK} noch eine ganz andere Funktion quasi kostenlos
mit: die _Hardware-/Software-Inventur_ (oder kurz _HW/SW-Inventur_).
Diese kann auf Ihren Hosts z.B. folgende Informationen automatisch ermitteln:

* Welche Softwarepakete sind in welchen Versionen auf einem Server installiert?
* Welchen Ausbau an RAM-Bausteinen hat ein Server?
* Welche BIOS-Version ist auf dem Mainboard installiert?
* Welche Seriennummern haben die verbauten Festplatten?
* Welche Ports auf einem Switch sind länger nicht genutzt worden (also wahrscheinlich frei)?
* ... und vieles mehr

Die so ermittelten Daten werden pro Host in einem strukturierten Baum
und in verschiedenen anderen link:views.html[Ansichten] dargestellt und sind auch über eine API verfügbar. 
Hier ein Beispiel mit Daten zum Prozessor:

.CPU-Daten im Inventur-Pfad [.guihint]#hardware.cpu#
image::inventory_example_main.png[alt="Aufgeklapptes Inventar mit CPU-Daten."]

Mit der _HW/SW-Inventur_ können Sie zum Beispiel:

* Daten über installierte Software für ein Lizenz-Management-System bereitstellen,
* Typbezeichnungen für Ersatzteilbestellungen (RAM, Festplatten, Lüfter) ermitteln,
* generelle Daten über Hardware- und Softwareaustattung für den regelmäßigen Import in CMDBs liefern,
* Änderungen an Hardware- oder Software zurückverfolgen, z.B. um festzustellen, wann ein bestimmtes BIOS-Update durchgeführt wurde,
* alarmiert werden, wenn sich etwas an der Hardware oder Software geändert hat,
* gezielt Server finden, die ein bestimmtes Servicepack noch nicht installiert haben.

Der wichtigste Vorteil gegenüber vergleichbaren anderen Systemen liegt
auf der Hand: Sie können dafür einfach die vorhandene Infrastruktur von
{CMK} verwenden und sparen sich das Einrichten und Administrieren einer
weiteren Softwareumgebung. Sie rollen lediglich ein einziges zusätzliches
Agenten-Plugin aus.  Bei SNMP-Geräten ist nicht mal das notwendig, da der
Inventurscanner auch SNMP unterstützt und sich die Daten einfach auf diesem
Weg holt.

Außerdem braucht sich {CMK} hinter anderen Inventurscannern nicht zu
verstecken. Wie auch bei unseren Check-Plugins arbeiten wir ständig an
einer Erweiterung der gescannten Daten. Jede {CMK}-Version bringt neue
Plugins für den Inventurscanner mit, und die eingesammelten Informationen werden
immer detaillierter und umfangreicher.

[#config]
== Einrichtung

Das Einrichten der HW/SW-Inventur geht in zwei Schritten. Voraussetzung
ist, dass auf den Hosts bereits der {CMK}-Agent installiert ist (falls diese
nicht per SNMP überwacht werden):

. Die Inventur für die gewünschten Hosts einschalten
. Das Inventory-Plugin auf diesen Hosts ausrollen

[#activate]
=== Die Inventur für die gewünschten Hosts einschalten

==== Anlegen der Regel

Wie immer, wenn Sie etwas für bestimmte Hosts konfigurieren wollen,
geht das auch hier mithilfe einer link:wato_rules.html[Regel.] Diese finden
Sie unter [.guihint]#Setup > HW/SW inventory rules > Do hardware/software inventory#
oder natürlich noch einfacher mit der Suche nach
`inventory`. Verwechseln Sie das nicht mit dem Regelsatz
[.guihint]#Hardware/Software-Inventory (Linux, Windows, Solaris, AIX).# Dieser ist für
das Agenten-Plugin, wie Sie später sehen werden. Legen Sie also hier eine neue
Regel für die Hosts an, für die Sie die Inventur aktivieren möchten. Dort finden
Sie etliche Einstellungen:

.Standardmäßig sind alle Optionen deaktiviert und werden auch nicht benötigt
image::inventory_do_inventory_default.png[alt="Eingabemaske für Inventuroptionen."]

Fürs Erste übernehmen Sie die Voreinstellungen. Die anderen Möglichkeiten
erklären wir im Verlauf dieses Artikels.

Die Regel, die Sie gerade angelegt haben, erzeugt beim nächsten
[.guihint]#Activate Changes# einen link:wato_services.html#active_checks[aktiven Check] pro Host,
der alle Inventurdaten zu diesem einsammelt, darunter Daten von einem normalen
{CMK}-Agenten, aber auch solche, die über SNMP-Abfragen hereinkommen. Den neuen
Service finden Sie in der Serviceliste bei den Hosts, und er sieht etwa so aus:

.Ohne Agenten-Plugin werden nur einige Standardeinträge gemeldet
image::inventory_list_first_item.png[alt="Statusanzeige eines frischen Inventur-Services."]

Lassen Sie sich nicht verunsichern, dass der Check nur ein wenige
Einträge gefunden hat. Das liegt daran, dass Sie das Plugin noch nicht ausgerollt haben.


==== Intervall festlegen

Inventurdaten sind Dinge, die sich nur selten ändern. Und das Erkennen
einer Änderung ist in der Regel auch nicht zeitkritisch. Deswegen ist es
sehr sinnvoll, dass Sie das Intervall, in dem der Inventur-Check ausgeführt
wird, anpassen und nicht einfach den Standard (1 Minute) verwenden -- vor
allem, weil das Verarbeiten der Inventurdaten in
dem aktiven Check deutlich mehr Rechenzeit benötigt als für einen normalen
Service.

{CMK}-Instanzen
haben dazu _automatisch_ eine Regel im Regelsatz
[.guihint]#Setup > Service monitoring rules > Service Checks > Normal check interval for service checks#, die
für alle Services mit dem Namen [.guihint]#Check_MK HW/SW Inventory# das Intervall
auf einen Tag festlegt:

.Eine tägliche Inventur genügt in der Praxis, für Testzwecke bieten sich kürzere Zeiträume an
image::inventory_interval.png[alt="Ansicht der Option zum Festlegen des Intervalls."]

Falls Ihnen einmal am Tag zu selten ist, können Sie diese
Regel natürlich auch anpassen -- z.B. auf vier oder acht Stunden. Und
natürlich besteht immer die Möglichkeit, dass Sie das mithilfe mehrerer
Regeln für unterschiedliche Hosts anders einstellen.


=== Das Inventory-Plugin auf diesen Hosts ausrollen

Der wichtigste Schritt ist das Installieren des Agenten-Plugins für die
Inventur auf den entsprechenden Hosts. Das können Sie entweder manuell
oder mit der link:wato_monitoringagents.html#bakery[Agent Bakery] (nur {EE}) machen.

==== Installation von Hand

Für eine manuelle Installation benötigen Sie zunächst das Plugin.
Das finden Sie in den {EE} über [.guihint]#Setup > Agents > Windows, Linux, Solaris, AIX > Related# für die unterschiedlichen Betriebssysteme.
In der {RE} finden Sie die Dateien direkt unter [.guihint]#Setup > Agents# für Windows, Linux und andere Systeme.
Verwenden Sie je nach Betriebssystem folgendes Plugin:

[cols="30,45,~"]
|===
|Betriebssystem |Kasten |Plugin 

|Windows |[.guihint]#Windows Agent - Plugins# |mk_inventory.vbs
|Linux |[.guihint]#Linux/Unix Agents - Plugins# |mk_inventory.linux
|AIX |[.guihint]#Linux/Unix Agents - Plugins# |mk_inventory.aix
|Solaris |[.guihint]#Linux/Unix Agents - Plugins# |mk_inventory.solaris
|===


Sie finden diese Dateien auch auf der Kommandozeile in der {CMK}-Instanz im Unterverzeichnis
`share/check_mk/agents/plugins` (Linux/Unix) bzw. `share/check_mk/agents/windows/plugins` (Windows).

Kopieren Sie das Plugin auf die Zielhosts in das korrekte Verzeichnis für Plugins.
Beim Windows-Agenten ab Version {v16} ist das `C:\ProgramData\checkmk\agent\plugins`.
Einzelheiten finden Sie im link:agent_windows.html#plugins[Artikel zum Windows-Agenten.]

Bei Linux und Unix lautet das Verzeichnis `/usr/lib/check_mk_agent/plugins`. Achten
Sie darauf, dass die Datei ausführbar ist (`chmod +x ...`). Einzelheiten
erfahren Sie im link:agent_linux.html#plugins[Artikel zum Linux-Agenten.]

Wichtig ist nun Folgendes: Der Agent wird ja von {CMK} in der Regel
einmal pro Minute abgerufen. Das Inventur-Plugin benötigt aber mehr
Rechenzeit als normale Plugins, weil es z.B. in vielen Verzeichnissen
nach installierter Software suchen muss. Es erzeugt darüber hinaus
deutlich größere Datenmengen. Deswegen ist es so entwickelt, dass
es nur alle vier Stunden (14400 Sekunden) neue Daten erzeugt und
ausliefert.

Falls Sie also für Ihren Inventurcheck aus irgendeinem Grund ein
_kürzeres_ Intervall als vier Stunden eingestellt haben, werden Sie
trotzdem nur alle vier Stunden wirklich neue Daten bekommen. Falls Sie wirklich
häufiger Daten ermitteln möchten, müssen Sie das voreingestellte
Berechnungsintervall anpassen.

Bei Windows ersetzen Sie die Zahl direkt im Plugin. Suchen Sie nach
`14400` und ersetzen Sie diese durch eine andere Anzahl von
Sekunden. Die Stelle in der Datei sieht so aus (Ausschnitt):

.mk_inventory.vbs
[{file}]
----
Dim delay
Dim exePaths
Dim regPaths

' These three lines are set in the agent bakery
delay = 14400
exePaths = Array("")
regPaths = Array("Software\Microsoft\Windows\CurrentVersion\Uninstall","Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall")
----

Bei Linux und Unix geht das etwas anders. Dort legen Sie zu diesem Zweck eine
Konfigurationsdatei `/etc/check_mk/mk_inventory.cfg` an mit folgender Zeile
(hier im Beispiel mit 7200 Sekunden):

./etc/check_mk/mk_inventory.cfg
[{file}]
----
INVENTORY_INTERVAL=7200
----

Noch ein Hinweis: Das Inventur-Plugin kümmert sich _selbst_ darum, dass es nur alle vier Stunden
ausgeführt wird. Verwenden Sie daher *nicht* den Mechanismus vom Agenten für eine asynchrone
Ausführung von Plugins mit größeren Intervallen. Installieren Sie das Plugin auf die normale
Art zur direkten Ausführung.

==== Konfiguration über die Agent Bakery

{cee-only}
Nur in den {EE}: Falls Sie für die Konfiguration Ihrer Agenten die link:wato_monitoringagents.html#bakery[Agent Bakery]
verwenden, ist die Sache natürlich viel komfortabler. Hier gibt es unabhängig
vom Betriebssystem nur einen einzigen Regelsatz. Dieser steuert das Ausrollen
des nötigen Plugins sowie dessen Konfiguration. Sie finden ihn unter
[.guihint]#Setup > Agents > Windows, Linux, Solaris, AIX > Agents > Agent rules#:

.Portable Programme können Sie direkt über Verzeichnisse mit einbeziehen
image::inventory_agent_rule.png[alt="Eingabemaske für Optionen für das Inventur-Plugin."]

Hier können Sie neben dem Intervall auch noch für Windows Pfade angeben,
in denen nach ausführbaren `.EXE`-Dateien gesucht werden soll, wenn
es darum geht, die auf dem System installierte Software zu finden. Auch die
Pfade in der Windows-Registry, die als Indikator für installierte Software
berücksichtigt werden sollen, können Sie hier konfigurieren.

=== Test

Wenn Sie das Plugin korrekt ausgerollt haben, dann finden Sie bei der nächsten
Ausführung des Inventurchecks eines Hosts deutlich mehr Datensätze.
Das sieht dann z.B. so aus:

.So wenige Einträge werden Sie nur auf frisch aufgesetzten Systemen vorfinden
image::inventory_list_entries.png[alt="Inventur-Service-Status mit Daten des Agenten-Plugins."]


[#operating]
== Mit den Inventurdaten arbeiten

=== Baumartige Darstellung

Die Inventurdaten der Hosts werden einmal in einem Baum pro Host
und noch einmal in Tabellen dargestellt. Den Baum erreichen Sie
beispielsweise in einer Hostansicht über den Menüpunkt [.guihint]#Host > Inventory > Inventory of host.#
Alternativ können Sie in Ansichten, die Hosts auflisten, das icon:icon_menu[] Menü eines Hosts aufrufen und darüber wiederum das icon:icon_software[] Inventar:

.Inventarzugriff aus einer Liste mit Hosts
image::inventory_host_contextmenu.png[alt="Kontextmenü zum Anzeigen des Inventars eines Hosts."]

In allen drei Fällen landen Sie bei der Baumdarstellung der Inventurdaten des Hosts.
Ausgehend von den drei Basiskategorien icon:icon_hardware[]
[.guihint]#Hardware#, icon:icon_networking[] [.guihint]#Networking# und icon:icon_software[] [.guihint]#Software#
können Sie Unteräste auf- und zuklappen:

.Ein sehr kleiner Teil des Inventarbaums 
image::inventory_example_main.png[alt="Aufgeklapptes Inventar mit CPU-Informationen."]

Hinter den einzelnen Einträgen sehen Sie oben im Bild in Klammern und Dunkelgrau die internen Pfade, die Sie über [.guihint]#Display > Modify display options# aktivieren können. Einzelne Pfade können Sie für xref:wato_user#contact_groups[Kontaktgruppen freischalten.]

=== Tabellarische Darstellungen

Viele der Inventurdaten sind Einzelwerte unter ganz konkreten Pfaden im Baum, z.B.
der Eintrag [.guihint]#Hardware > System > Manufacturer > Apple Inc.#; es gibt aber
auch Stellen im Baum mit Tabellen gleichartiger Objekte. Eine sehr wichtige
ist z.B. die Tabelle [.guihint]#icon:icon_software[] Software > icon:icon_packages[] Packages#:

.Die Paketliste ist sehr ausführlich und hier im Bild stark beschnitten
image::inventory_packages.png[alt="Softwarepakete im Inventarbaum."]

Das Besondere an diesem Teil der Inventurdaten: Sie können die Pakete über [.guihint]#Host > Inventory > Software packages# in einer separaten Ansicht aufrufen. Dort finden Sie dann icon:icon_filter[] Filter speziell für die Suche in Paketen (im Bild starkt gekürzt):

////
Hier finden Sie die Tabelle aller auf dem Host installierten Softwarepakete.
Achten Sie auf den Link [.guihint]#Open this table for filtering / sorting# rechts oben.
Dieser zeigt Ihnen, dass es diese Tabelle auch als link:views.html[Ansicht] gibt -- mit
den üblichen Möglichkeiten zum Filtern und Sortieren. Das Wichtige hier ist:
Diese Ansicht gibt Ihnen die Möglichkeit, in den Daten (z.B. Softwarepaketen)
_aller_ Hosts zu suchen, nicht nur in den Daten von einem einzigen.
Zu den Filtern gelangen Sie wie gewohnt mit dem Symbol icon:icon_filter[]:
////

.Der Filter für den Hostnamen ist bereits vorausgefüllt
image::inventory_packages_search.png[alt="Filterliste für Softwarepakete."]

////
Wenn Sie über den oben genannten Link hierhergekommen sind, dann ist im Filter
[.guihint]#Hostname (exact match)# bereits der entsprechende Hostnamen eingetragen. Wenn
Sie diesen entfernen, können Sie über alle Hosts in Ihrer Monitoring-Umgebung
suchen.
////

Sie können auch in Softwarepaketen auf mehreren Hosts suchen.
Die entsprechende Ansicht [.guihint]#Search software packages# finden Sie über die Suche im Monitor-Menü oder im Seitenleistenelement [.guihint]#Views# im Bereich [.guihint]#Inventory.# Dort sind auch alle weiteren tabellenartigen Inventuransichten aufgeführt, darunter weitere Suchen, etwa für bestimmte Oracle-Daten.

////
Alle tabellenartigen Inventuransichten finden Sie auch über das
[.guihint]#Views#-Element in der Seitenleiste unter dem Eintrag [.guihint]#Inventory.#
Diejenigen, die mit dem Wort [.guihint]#Search# beginnen, geben erst dann Daten aus,
wenn Sie den Knopf [.guihint]#Search# drücken (nachdem Sie eventuell einige der Filter
ausgefüllt haben).
////

Beachten Sie, dass in der Voreinstellung viele allgemeine Filter zu den Hosts
nicht in diesen Ansichten verfügbar sind. Sie können sie aber bearbeiten und weitere Filter hinzufügen.

Weitere Dinge, die Sie mit diesen Ansichten machen können:

* Einbinden in link:reporting.html[Berichte]
* Exportieren als PDF oder als CSV
* In link:dashboards.html[Dashboards] integrieren

Übrigens können Sie auch solche Inventurdaten in Ansichten aufnehmen, die
_nicht_ tabellenartig sind. Dazu gibt es für jeden bekannten Pfad
im Inventurbaum einen Spaltentyp, den Sie in Ansichten von Hosts hinzufügen
können. Ein Beispiel dafür ist die vordefinierte Beispielansicht
[.guihint]#CPU Related Inventory of all Hosts.# Das ist eine Tabelle der Hosts, die
jeweils zusätzliche Daten aus der Inventur anzeigt. Hier ist beispielhaft eine
der Spaltendefinitionen, die eine Spalte mit der Anzahl der physikalischen
CPUs des Hosts hinzufügt:

.Inventurdaten stehen allen Ansichten zur Verfügung
image::inventory_cpus.png[alt="Eingabemaske für die Aufnahme von Spalten mit Inventurdaten in Ansichten."]

[#history]
== Historischer Verlauf der Inventurdaten

Sobald Sie die HW/SW-Inventur für einen Host eingerichtet haben, wird {CMK} jede
Änderung in den Inventurdaten erfassen und die Historie aufzeichnen. Sie finden
diese in Hostansichten über [.guihint]#Host > Inventory > Inventory history of host.#

Hier ist ein Ausschnitt aus der Historie mit einer Reihe von IP-Daten, die sich seit dem letzten Durchlauf geändert haben:

.Änderungen im Inventar werden in der Historie sofort sichtbar
image::inventory_history.png[alt="Historie von Einträgen im Inventar."]

Wenn Sie möchten, können Sie sich alarmieren lassen, wann immer
eine Änderung in der Software oder Hardware auftritt. Das geschieht
über den Status des Services [.guihint]#Check_MK HW/SW Inventory.# Dazu
bearbeiten Sie die Regel, die Sie ganz am Anfang dieses Artikels
angelegt haben (im Regelsatz [.guihint]#Do hardware/software inventory).#
Dort finden Sie im Wert der Regel etliche Einstellungen, welche
die Historie betreffen. Folgendes Beispiel setzt den Service auf
{WARN}, wenn sich Änderungen in Software oder Hardware ergeben:

.Ein gutes Mittel, um auf Schatten-IT auf Arbeitsplatzrechnern aufmerksam zu werden
image::inventory_do_inventory_warn.png[alt="Eingabemaske zum Aktivieren des Invtentur-Checks."]

Sobald der Inventurcheck das nächste Mal Änderungen feststellt, wird
er auf {WARN} gehen. Das sieht dann z.B. so aus:

.Warnungen in der Serviceliste eines einzelnen Hosts
image::inventory_list_warn.png[alt="Inventur-Check mit Warnung wegen erkannter Änderungen."]

Bei der nächsten Ausführung des Checks geht dieser wieder automatisch auf {OK},
wenn sich nichts geändert hat. Das heißt, dass Sie den Check von Hand ausführen
können, um den Service wieder auf {OK} zu setzen, wenn Sie nicht bis zum
nächsten regelmäßigen Lauf warten möchten.


[#statusdata]
== Statusdaten

Der Baum der Inventurdaten kann automatisch um aktuelle passende
Statusdaten ergänzt werden. Das ist in einigen Fällen sehr nützlich.
Ein Beispiel dafür sind _Oracle Tablespaces._ In den eigentlichen
Inventurdaten sind lediglich relativ statische Dinge wie die SID,
der Name und der Typ enthalten. Aktuelle Statusdaten können dies
um Angaben zur aktuellen Größe, zu freiem Platz usw. ergänzen.

Wenn Sie Statusdaten in Ihrem Baum sehen möchten (und da spricht eigentlich
nichts dagegen), müssen Sie lediglich in der Regel,
die Sie am Anfang unter [.guihint]#Do hardware/software inventory# angelegt
haben, die entsprechende Option aktivieren:

.Statusdaten erweitern das Monitoring teils erheblich
image::inventory_do_inventory_status.png[alt="Eingabemaske zum Aktivieren der Statusdaten."]

Änderung in Statusdaten finden übrigens _keinen_ Niederschlag
in der link:inventory.html#history[Historie!] Dies würde quasi zu ständigen
Änderungen führen und die Funktion nutzlos machen.


[#external]
== Externer Zugriff auf die Daten

=== Zugriff via Web-API

Sie können die HW/SW-Inventurdaten eines Hosts über eine Web-API
exportieren. Die URL dazu lautet `host_inv_api.py?host=`,
gefolgt vom Hostnamen, z.B.:

`http://mycmkserver01/mysite/check_mk/host_inv_api.py?host=myhost123`

Das Ausgabeformat in diesem Fall ist Python-Quellcode. Wenn Sie JSON bevorzugen,
dann hängen Sie einfach ein `&output_format=json` an die URL an:

`http://mycmkserver01/mysite/check_mk/host_inv_api.py?host=myhost123&output_format=json`

Das Ergebnis sieht dann etwas so aus:

.myhost123.json
[{file}]
----
{
    "result": {
        "hardware": {
            "chassis": {
                "manufacturer": "Apple Inc.",
                "type": "Notebook"
            },
            "cpu": {
                "arch": "x86_64",
                "cache_size": 6291456,
                "cores": 4,
                "cores_per_cpu": 4,
                "cpus": 1,
                "max_speed": 2500000000.0,
                "model": "Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz",
                "threads": 8,
                "threads_per_cpu": 8,
                "vendor": "intel",
                "voltage": 1.1
            },
... usw. ...

    },
    "result_code": 0
}
----

Geben Sie die URL in die Adressleiste Ihres Browsers ein. Sie sehen dann sofort
ein Ergebnis, weil Sie bereits bei {CMK} angemeldet sind. Von einem Skript aus
authentifizieren Sie sich am besten mit einem link:wato_user.html#automation[Automation-User.]

=== Zugriff via Datei

Alternativ können Sie auch einfach die Dateien auslesen, die {CMK} selbst erzeugt.
Diese sind im Python-Format und liegen im Verzeichnis `var/check_mk/inventory`.
Für jeden Host gibt es dort eine Datei in unkomprimierter (z.B. `myhost123`)
und eine in komprimierter Variante (z.B. `myhost123.gz`).


[#distributed]
== Inventur in verteilten Umgebungen

{cee-only}
Auf den {EE} funktioniert die HW/SW-Inventur auch
in link:distributed_monitoring.html[verteilten Umgebungen.] Hier werden die
Inventurdaten zunächst durch die lokalen Instanzen ermittelt und dort unterhalb
von `var/check_mk/inventory` abgelegt. link:inventory.html#statusdata[Statusdaten]
werden nicht in Dateien abgelegt, sondern wie die Resultate von Checks direkt
im Hauptspeicher vom Monitoringkern gehalten.

Der link:distributed_monitoring.html#livestatusproxy[Livestatus-Proxy-Daemon] überträgt
turnusmäßig alle aktualisierten Inventurdaten von der Remotesite in die Zentrale
und legt sie dort ebenfalls unter `var/check_mk/inventory` ab. Das
ist wichtig, da diese Daten zu umfangreich sind, um sie bei einer Abfrage
in diesem Augenblick live abzuholen.

Sobald über die Zentralinstanz Abfragen zu Inventurdaten kommen, werden diese
Dateien gelesen und dann noch mit aktuellen Statusdaten zusammengeführt, welche
per link:livestatus.html[Livestatus] von den Remoteinstanzen geholt werden.

Kurz zusammengefasst: Sie müssen sich um nichts kümmern.

{cre-only}
In der {RE} gibt es keinen Livestatus-Proxy. Daher ist auch die
HW/SW-Inventur in der zentralen GUI unvollständig und zeigt nur die Statusdaten.
Sie können sich behelfen und die Dateien im Verzeichnis
`var/check_mk/inventory` regelmäßig mit einem Skript o.Ä. an die zentrale
Site übertragen. Dabei genügt es, die Dateien _ohne_ die Endung
`.gz` zu kopieren. Für eine effiziente Übertragung eignet sich z.B.
`rsync`.


== Dateien und Verzeichnisse

=== Verzeichnisse auf dem {CMK}-Server

[cols="43,~"]
|===
|Pfad |Bedeutung 

|share/check_mk/agents/plugins/ |Hier liegen Agenten-Plugins für Linux und Unix.
|share/check_mk/agents/windows/plugins/ |Agenten-Plugins für Windows
|var/check_mk/inventory/ |Inventurdaten der einzelnen Hosts als Python-Dateien (komprimiert und unkomprimiert)
|===


=== Verzeichnisse auf den überwachten Hosts

[cols="43,~"]
|===
|Pfad |Bedeutung 

|C:\ProgramData\checkmk\agent\plugins\ |Ablageort für das Inventur-Plugin beim Windows-Agenten
|/usr/lib/check_mk_agent/plugins/ |Ablageort für das Inventur-Plugin beim Linux-/Unix-Agenten
|/etc/check_mk/mk_inventory.cfg |Konfiguration für das Inventur-Plugin beim Linux-/Unix-Agenten
|===


