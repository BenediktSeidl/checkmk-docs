include::global_attr.adoc[]
= Systemmonitoring mit Checkmk - Teil 2: Fortgeschrittene Themen
:revdate: 
:title: 
:description: 

[.relateddoc]

<br>
<br>
// Zeilenumbruch fuer den Druck leider noetig
Hier finden Sie die Schulungsinhalte und den Ablauf der
Schulung „_Systemmonitoring mit {CMK} - Teil 2: Fortgeschrittene Themen_“.
Dies entspricht den Inhalten der während der Schulung gezeigten
Folien. Überall wo es schon passende Artikel in diesem Handbuch
gibt, finden Sie hier die Seitenzahlen, so dass Sie diese während
der Schulung schnell finden können.

== Tag 1

=== Vorstellung

DO:Die Teilnehmer und der Dozent stellen sich vor.
DO:Alle tragen sich in die Teilnehmerliste ein bzw. unterschreiben
DO:den Eintrag, der schon für sie vorbereitet ist.

DO:Der Dozent macht sich Notizen zu fehlenden Artikeln oder unzureichenden
DO:Beschreibungen im Handbuch und leitet diese an das Handbuchteam weiter.

SB:tribe29_logo.png

=== Der omd-Befehl

- link:omd_basics.htmlcpmv[                     Instanzen kopieren und umbenennen]
- link:omd_basics.htmldiff[                     Geänderte Dateien erkennen]
- link:omd_basics.htmlbackup[                   Backup und Restore von Instanzen]
- link:omd_basics.htmlsshmigration[             Livemigration von Sites per `ssh`]
- link:omd_basics.htmlscripts[                  Instanzen skriptgesteuert verwalten]

DO:Instanzen kopieren und umbennen - Folie 1:
DO:omd cp mit zuästzlichen Optionen aufrufen. RRDs und Logs können
DO:ausgelassen werden. Der Prozess kann auch mit --conflict
DO:automatisiert werden.
DO:
SI:Instanzen kopieren
SI:Kopieren mit  `omd cp CURRENTNAME NEWNAME`
SI:Weitere Optionen: `omd cp --help`
SI:z.B. ohne RRDs, ohne Logs, tmpfs definieren, etc.

DO:Instanzen kopieren und umbennen - Folie 2:
DO:"omd mv" funktioniert ähnlich zu "omd cp". Hier lohnt es sich
DO:vielleicht zu erwähnen, dass RRD-und Log-Daten nicht ausgeschlossen
DO:werden können.
DO:
SI:Instanzen kopieren und umbennen
SI:Gleiche Syntax: `omd mv CURRENTNAME NEWNAME`
SI:Auch hier weitere Optionen mit `omd mv --help`
SI:Optionen ähnlich zu `omd cp`

DO:Geänderte Dateien erkennen:
DO:Hier kann man schön ein paar Beispiele zeigen, wie eine Ausgabe aussieht,
DO:wenn sie ohne weitere Optionen aufgerufen wird und ein zweites für den diff
DO:auf eine einzelne Datei. Die htpasswd ist hier nur ein Beispiel
DO:
SI:Geänderte Dateien erkennen
SI:`omd diff` für alle Änderungen
SI:`omd diff etc/htpasswd` für einzelne Dateien

DO:Backup und Restore von Instanzen - Folie 1:
DO:Vielleicht noch ein bisschen was zu den Vorteilen/Anwendungsfällen
DO:erzählen, warum es sinnvoll sein kann, RRD-/Log-Dateien auszuschließen
DO:
SI:Backup und Restore von Instanzen
SI:`omd backup SITENAME ARCHIVE_PATH`
SI:`omd backup --help`
SI:RRD- und Log-Daten ausgeschlossen werden
SI:Kompression kann abgeschaltet werden

DO:Backup und Restore von Instanzen - Folie 2:
DO:Auf den dritten Punkt sollte man eingehen, da es kontraintuitiv
DO:ist, bzw. sein kann.
DO:
SI:Backup und Restore von Instanzen
SI:`omd restore SITENAME ARCHIVE_PATH`
SI:`omd restore --help`
SI:Wichtig: Erst der Instanzname und dann der Pfad zum Backup

DO:Livemigration von Sites per `ssh`
DO:Hier nur der Stream eines Backups von einer zur anderen Maschine gezeigt.
DO:Aber auch ein "normales" Backup ohne direkte Wiederherstellung kann mal
DO:angesprochen werden.
DO:Wichtig: Der Befehl läuft auf der Folie über zwei Zeilen. Bitte darauf
DO:hinweisen, dass das ein zusammenhängendes Kommando ist.
DO:
SI:Livemigration von Sites per `ssh`
SI:Backup über ssh an einen anderen Server streamen
SI:Backup wird nach stdout geleitet und über eine Pipe an eine SSH-Verbindung geleitet:
SI:`omd backup mysite - | ssh root@server "omd restore -"`

DO:Instanzen skriptgesteuert verwalten:
DO:Die Konfiguration lässt sich skripten und muss nicht interaktiv angepasst werden.
DO:Hier kann man einiges dazu erzählen, wie man sich nur die beiden Befehle merken
DO:muss und den Rest durch diese herausbekommt.
DO:
SI:Instanzen skriptgesteuert verwalten:
SI:`omd config show`
SI:`omd config show VAR`
SI:`omd config set VAR VALUE`

DO:Grundsätzliches:
DO:Hier fehlt noch ein Artikel im Buch zu der skriptgesteuerten Verwaltung.
DO:Die Idee ist, dass man einfach die Optionen zeigt, mit denen "omd create"
DO:und "omd update" skriptbasiert aufgerufen werden kann (--conflict=...),
DO:so dass man automatisiert eine Reihe von Slaves aktuell halten kann.


=== Kommandozeile

- link:cmk_commandline                      Arbeit mit dem Befehl `cmk` auf der Kommandozeile.html[                     Arbeit mit dem Befehl `cmk` auf der Kommandozeile]
- link:cmk_commandline.htmldata[                Überblick über das Dateisystem - was liegt wo?]
//IN:cmk_commandline#logs                 Die Logdateien von Checkmk
- link:cmk_commandline.htmlconfig[              Konfigurationsdateien von Hand editieren]
- link:livestatus                           Livestatusabfragen manuell ausführen und skripten.html[                          Livestatusabfragen manuell ausführen und skripten]

DO:Arbeit mit dem Befehl cmk auf der Kommandozeile - Folie 1:
DO:Unterschiede zwischen Inventory und Discovery aufzeigen und
DO:die Konfiguration eines Hosts anzeigen lassen. Der erste Punkt
DO:ist eher dazu da, um die Teilnehmer auf die help-Funktion zu
DO:triggern, so dass es fest in ihren Köpfen verankert ist.
DO:
SI:Der `cmk`-Befehl
SI:Generell: `cmk --help`
SI:Services vs. HW/SW-Inventur: `cmk -I` vs. `cmk -i`
SI:Hosts: `cmk -D` und `cmk -N`

DO:Arbeit mit dem Befehl cmk auf der Kommandozeile - Folie 2:
DO:Hier kann man sich lange aufhalten, da jeder Punkt umfangreich
DO:erklärt werden kann. Wichtig ist vor allem der erste und dritte
DO:Punkt. Der erste, weil es den Core betrifft und häufig gebraucht
DO:wird. Der dritte, weil der Output beim Support häufig benötigt wird.
DO:
SI:Der `cmk`-Befehl
SI:Core: `cmk -B` / `cmk -U` / `cmk -O` / `cmk -R`
SI:Checkplugins: `cmk -L` und `cmk -M`
SI:SNMP: `cmk -v --snmpwalk`

DO:Überblick über das Dateisystem - was liegt wo: - Folie 1
DO:Erwähnt werden sollte noch, dass Verzeichnisse der Version als Symlink
DO:in der Instanz zur Verfügung steht. Das geht aus dem Bild nicht hervor.
DO:
DO:Ansonsten gibt es vielen Artikel am Ende eine Auflistung der wichtigen
DO:Dateien und Verzeichnisse. Auf diese sollte man die Teilnehmer hinweisen.
DO:
SB:filesystem.png

DO:Die Logdateien von {CMK}:
DO:Der Screenshot zeigt die Lage der Logdateien innerhalb der Instanz.
DO:
SB:training_cmk2_logfiles.png


=== WATO Web-API

- link:web_api.htmlautomation[                 Der Automationsbenutzer]
- link:web_api.htmlurl[                        Der Aufbau der URL]
- link:web_api.htmlformat[                     Format der Ein- und Ausgabe]
- link:web_api.htmltest[                       Die API lokal testen]
- link:web_api.htmlrequests[                   Request-Befehle erstellen und verwenden]


DO:Der Automationsbenutzer - Folie 1
DO:Der Benutzer wird normalerweise automatisch bei der Erstellung der Site
DO:angelegt. Man sollte hier dennoch darauf hinweisen, dass das in älteren
DO:Versionen nicht der Fall sein muss. Außerdem kann man noch was zu dem
DO:Berechtigungskonzept erzählen, um mit mehreren Automationsbenutzern zu
DO:arbeiten, welche nur bestimmte Dinge dürfen.
DO:
SI:Der Automationsbenutzer
SI:Unterscheidet sich von einem normalen Benutzer
SI:Beliebg viele Benutzer können angelegt werden
SI:Auf Berechtigungen achten

DO:Der Aufbau der URL - Folie 1
DO:Es ist nützlich, wenn die Teilnehmer erst einmal verstehen, wie die URL
DO:aufgebaut ist, weil alles andere darauf aufbaut. Hier kann man mit curl
DO:arbeiten, da die Grundmechaniken damit gut deutlich werden. Zudem sollte
DO:auf die Antwort, speziell auf den result_code, eingegangen werden.
DO:
SI:Der Aufbau der URL
SI:Benutzer, Passwort und die gewünschte Aktion werden an die URL angehängt.
SI:Beliebige Reihenfolge der Parameterübergabe
SI:Bsp.: http://myserver/mysite/webapi.py&#8230;
SI:[&#8230;]?action=get_all_hosts&_username=myuser&_secret=mysecret

DO:Format der Ein- und Ausgabe - Folie 1
DO:Hier noch einmal genauer auf die beiden Optionen request_format und
DO:output_format eingehen. Diese können immer gesetzt werden, machen aber nicht
DO:immer Sinn. Zudem verlangen einige der zukünftigen Befehle das Format in
DO:Python, andere brauchen Python, werfen aber keinen Fehler, wenn es nicht
DO:als Aus- oder Eingabeformat benutzt wird. Diese Stolperfallen sollten auf
DO:jedenfall erwähnt werden!
DO:
SI:Format der Ein- und Ausgabe
SI:request_format und output_format
SI:Verfügbar: json, python
SI:Unterschiede z.B. bei Hosts mit SNMPv3 Credentials

DO:Die API lokal testen - Folie 1
DO:Zum Testen und gerade für die Schulung ist es ein nettes Feature, wenn
DO:man für die Instanz und das Passwort des Automationsbenutzers Variablen
DO:nutzt, bzw. die Daten direkt ausliest. Dafür muss man selbstverständlich
DO:als Instanzbenutzer angemeldet sein.
DO:
SI:Die API lokal testen
SI:Tests als Instanzbenutzer ohne Eingabe von konkreten Logindaten
SI:Ersetzen des Instanznamens durch die Variable $OMD_SITE
SI:Auslesen des Passworts mit cat und $OMD_ROOT

DO:Request-Befehle erstellen und verwenden - Folie 1
DO:Zu diesen Bereichen stehen Befehle zur Verfügung. Hier kann die
DO:verschiedenen Möglichkeiten bereits nennen. Wenn nach der folgenden Folie
DO:noch Zeit ist, kann man auch noch weitere Befehle durchspielen.
DO:
SI:Request-Befehle erstellen und verwenden
SI:Verwaltung von Hosts, Gruppen, Benutzern
SI:Erkennen von Services und Änderungen aktivieren
SI:Nur CEE: Agenten backen, Graphen abrufen

DO:Request-Befehle erstellen und verwenden - Folie 2
DO:Einfach mal Kapitel 3 aus dem Buch durcharbeiten. Wenn es passt, auch noch
DO:mehr Befehle aus der 1.4.0 zeigen. Dazu der Hinweis auf den Referenzartikel,
DO:den es nur online gibt. Dort sind auch schon kommende Befehle für die
DO:1.5.0 gelistet.
DO:
SI:Request-Befehle erstellen und verwenden
SI:Host erstellen
SI:Serviceerkennung durchführen
SI:Änderungen aktivieren

DO:Generelles zu der WebAPI:
DO:Als Schulungsinhalt wird erst einmal nur die in der 1.4.0 bereitgestellten
DO:Befehle aufgeführt. Eventuell später hier anpassen und die Einzelbefehle zu
DO:einem "Verwalten von {CMK} mit der API" zusammenfassen und bei Hosts beginnen?

=== Fortgeschrittene Funktionen

- link:simulation_mode                      Checkmk im Simulationsmodus betreiben.html[                     Checkmk im Simulationsmodus betreiben]
- link:fehlt                                Monitoring von Clustern.html[                               Monitoring von Clustern]
// Monitoring von Clustern kommt mit KNW-225 (also wenn es hier um Clustered
// Services gehen soll wovon ich mal ausgehe)
- link:agent_linux.htmlssh[                     Monitoring über SSH]
- link:datasource_programs                  Datasourceprograms.html[                 Datasourceprograms]

DO:{CMK} im Simulationsmodus betreiben - Folie 1
DO:Ein paar Szenarien nennen, weshalb das nützlich sein könnte. Dazu dann
DO:noch auf die Stolperfallen hinweisen. Auch zeigen, wie man den Modus auf
DO:der CLI aktivieren kann. Dann muss die Instanz nicht kurzfristig laufen und
DO:echte Daten holen.
DO:
SI:{CMK} im Simulationsmodus betreiben
SI:Nur Daten aus dem Cache
SI:Dienste, wie z.B. Alarmierungen laufen weiter.
SI:Aktivierung über Weboberfläche oder Kommandozeile

DO:Monitoring von Clustern - Folie 1
DO:Dazu gibt es leider noch keinen Artikel, oder Abschnitt, der sich damit
DO:explizit beschäftigt.  es ist also sinnvoll, diese Thema vorerst am Livesystem
DO:zu demonstrieren und zu besprechen.
DO:

DO:Datasourceprograms - Folie 1
DO:Bei den Datasourceprograms kann man als Beispiel zeigen, wie man {CMK}
DO:über SSH aufruft. Ansonsten auf das Prinzip des "Individual program call
DO:instead of agent access" eingehen. Hier eher ein anderes Beispiel als aus
DO:dem Buch verwenden, damit die Teilnehmer ein Gefühl für die Möglichkeiten
DO:bekommen. Auch auf die möglichen Platzhalter eingehen, die man verwenden kann
DO:(z.B. IP und HOSTNAME).
DO:
SI:Datasourceprograms
SI:Individual program call instead of agent access
SI:Hostdaten z.B. über ssh
SI:Aber auch viele viele andere Möglichkeiten

DO:Datasourceprograms - Folie 2
DO:Ein paar Beispiele aus den restlichen Special Agents zeigen. Schön
DO:und oft genutzt ist hier die Regel zu den ESXi-Hosts. Hier lohnt es sich
DO:die Problematik mit den selbstsignierten Zertifikaten zu erwähnen. Auch
DO:der einfach zu konfigurierende Special Agent zur 3PAR von HP ist ein gutes
DO:Beispiel, weil der Code sehr einfach aufgebaut ist und die heute häufig
DO:vorkommende REST-API von HP nutzt.
DO:
SI:Datasourceprograms
SI:Viele bereits mitgelieferte Datenquellenprogramme
SI:Hostzuordnung oft über die Conditions
SI:Achtung bei selbstsignierten Zertifikaten


== Tag 2

=== Business Intelligence

- link:bi                 Einführung in das BI-Modul.html[                Einführung in das BI-Modul]
- link:bi.htmlfirst[          Das erste Aggregat]
- link:bi.htmlstatusgui[      BI in der Status-GUI]
- link:bi.htmlmultilevel[     Mehrstufige Bäume]
- link:bi.htmldisplayoptions[ Alternative Darstellungen]
- link:bi.htmlconfig3[        Variablen, Schablonen, Suche]
- link:bi.htmlhostaggr[       Die vordefinierte Hostaggregation]
- link:bi.htmlpermissions[    Berechtigungen und Sichtbarkeit]
- link:bi.htmloperating[      Wartungszeiten, Acknowledgement]
- link:bi.htmlbiasservice[    BI als aktiver Service]


=== Alarmierung

- link:notifications.htmlbulk[                      Sammelalarmierung]
- link:notifications.htmlsyncsmtp[                  Nachvollziehbare Zustellung per SMTP]
- link:fehlt                                    Alarmierung per SMS.html[                                   Alarmierung per SMS]
- link:distributed_monitoring.htmlnotifications[    Alarmierung in verteilten Umgebungen]
- link:notifications.htmlscripts[                   Alarmierungsskripten]

DO:Sammelalarmierung - Folie 1
DO:Auf den Sinn bei Sammelalarmierungen hinweisen und die Problematik von zu
DO:vielen Benachrichtigungen erläutern. Wer zuviele Emails bekommt,
DO:liest sie sehr schnell nicht mehr richtig und übersieht dann ggf. eine
DO:wichtige. Die Entscheidung, ob eine Benachrichtigung rausgeschickt werden
DO:soll, sollte daher das folgende Prinzip verfolgen: So wenig wie möglich,
DO:so viele wie nötig. Entscheidend scheint mir, dass die Teilnehmer dafür
DO:sensibilisiert werden. Ein Mittel, um die Emailflut einzudämmen ist
DO:die Sammelalarmierung. Durch sie wird die Menge an nötigen Emails
DO:eingeschränkt. Das erhöht nebenbei auch die Akzeptanz der Software bei
DO:den Empfängern.
DO:
SI:Sammelalarmierung
SI:Zu viele Benachrichtigungen machen unaufmerksam
SI:Die Anzahl der Mails sollte so gering wie möglich halten
SI:Nachrichten können zusammengefasst werden

DO:Sammelalarmierung - Folie 2
DO:Nachfolgend noch der Screenshot aus dem Artikel. Daran kann man die
DO:Mechanismen und die Einrichtung ganz gut erklären. Das soll ein Praxis-
DO:beispiel allerdings nicht ersetzen.
DO:
SB:bulk_notifications.png

DO:Nachvollziehbare Zustellung per SMTP - Folie 1
DO:Bei der üblichen Zustellung von Emails findet keine Validierung statt, ob
DO:die Mail auch wirklich rausgeschickt wurde. Das kann dann zu einem Problem
DO:werden, wenn Emails nicht ankommen und eine Ursache bei {CMK} ausgeschlossen
DO:werden soll. Die Teilnehmer sollte auf dieses Problem hingewiesen werden. Die
DO:Lösung steckt dann in dem erwähnten Kapitel. Auch auf die Tactical Overview
DO:und die asynchrone Zustellung eingehen.
DO:



//DO:Zu SMS gibt es noch keinen Abschnitt im Handbuch. Gezeigt werden soll
//DO:zum einen die Verwendung der smstools (bei Anschluss eines GSM-Modems).
//DO:Zum anderen (eventuell) anhand eines Scripts wie z.B. mobilant wie man SMS über
//DO:das Internet verwenden kann.


=== Alerthandler

- link:alert_handlers                       Einführung in die Checkmk-Alerthandler.html[                      Einführung in die Checkmk-Alerthandler]
- link:alert_handlers.htmlsetup[                Alerthandler einrichten]
- link:alert_handlers.htmlexecution[            Wie Alerthandler ausgeführt werden]
- link:alert_handlers.htmllinux_remote[         Remoteausführung unter Linux]
- link:alert_handlers.htmlfiles[                Relevante Dateien und Verzeichnisse]

SI:Unterschiede zu Alarmen
SI:Unabhängig von Downtimes, Alarmierungsperioden u.Ä.
SI:Triggern schon bei Softstates
SI:Unabhängig von Kontakten
SI:Nur in der CEE enthalten
SI:Alerthandler sind „Low level“

DO:Linux

SI:Alerthandler auf Linux
SI:Aufruf per SSH mit Command-Restriction
SI:Nur vordefinierte Skripten sind erlaubt
SI:Aufsetzen komplett via Agentenbäckerei


=== {CMK} erweitern

- link:mkps                                 Checkmk-Pakete (MKPs) einsetzen.html[                                Checkmk-Pakete (MKPs) einsetzen]
- link:mkps.htmlexchange[                       MKPs von der Checkmk-Exchange verwenden]
- link:mkps.htmlwato[                           Eigene MKPs erstellen]
- link:mkps.htmlcommandline[                    MKP auf der Kommandozeile]
- link:mkps.htmldistr_wato[                     MKPs in einer verteilten Umgebung einsetzen]


== Tag 3

=== Event Console

- link:ec                                   Einführung in die Event Console.html[                                  Einführung in die Event Console]
- link:ec.htmlsetup[                            Die Event Console Aufsetzen]
- link:ec.htmloperating[                        Die Event Console im Operating]
- link:ec.htmlrules[                            Die ganze Mächtigkeit der Regeln]
- link:ec.htmlactions[                          Ausführen von Aktionen]
- link:ec.htmlsnmp[                             Empfang von SNMP-Traps]
- link:ec.htmllogwatch[                         Überwachung von Logdateien]
- link:distributed_monitoring.htmlec[           Die Event Console im verteilten Monitoring]

=== Automatische Agent-Updates

=== Reporting

- link:reporting                             Einführung in das Checkmk Reporting-Modul.html[                            Einführung in das Checkmk Reporting-Modul]
- link:fehlt                                 Verwenden der Instant-Reports.html[                                Verwenden der Instant-Reports]
- link:reporting.htmlcreate_reports[             Eigene Berichte erstellen]
- link:fehlt                                 Das Prinzip der Kontexte.html[                                Das Prinzip der Kontexte]
- link:reporting.htmlscheduler[                  Bericht regelmäßig automatisch erzeugen]

DO:Beim Erstellen von eigenen Berichten ist wichtig, dass die Teilnehmer
DO:das Prinzip der Kontexte verstehen. Man kann das gut anhand des Kontextes
DO:"Single Host" zeigen: Wie der Knopf zum Bericht dadurch bei den Hostviews
DO:erscheint, welche Fehler auftreten können, usw.
DO:
DO:Interessant auch: einbinden von Graphen, Optionen für die Aufnahme von
DO:Host/Service in die Überschrift. Zeigen, wie man eine Availability-Tabelle
DO:aufnehmen kann.


//ab sofort in CMK1
//H2:Hardware-/Softwareinventur
//
//IN:inventory#intro                      Was kann Checkmk's Hardware-/Softwareinventur
//IN:inventory#config                     Einrichten der Inventur
//IN:inventory#operating                  Auswertung der Inventurdaten über die GUI
//IN:fehlt                                technische Hintergründe, was liegt wo?
//IN:inventory#external                   Export der Daten in andere Systeme
//IN:inventory#distributed                Inventur im verteilten Monitoring


//ab sofort in CMK1
//H2:Verteiltes Monitoring
//
//IN:distributed_monitoring#distr_wato_config Die Zentrale Konfiguration mit WATO
//IN:distributed_monitoring#livestatusproxy   Der Livestatus Proxy-Daemon
//
//SB:distributed_monitoring.png
//
//DO:Hier einfach mit
//DO:den TN Schritt für Schritt eine kleine Umgebung aufbauen. Das
//DO:verteilte Monitoring selbst wurde schon im Grundkurs besprochen und
//DO:ist nicht Teil dieses Kurses.


== Tag 4

=== Verfügbarkeit

- link:availability                         Wie Checkmk Verfügbarkeiten berechnet.html[                        Wie Checkmk Verfügbarkeiten berechnet]
- link:availability.htmloptions[                Die verschiedenen Optionen]
- link:availability.htmlbi[                     Verfügbarkeit von BI-Aggregaten]

SB: avail_states.png

DO:Wichtig ist, dass die TN das Grundprinzip der Aggregation der
DO:Zustände verstehen. Dass. z.B. "in Downtime" ein Zustand ist,
DO:welcher Vorrang vor OK/WARN/CRIT usw. hat.

=== SLA

=== Der Micro Core

- link:cmc                                  Aufgabe des Monitoringkerns.html[                                 Aufgabe des Monitoringkerns]
- link:cmc_migration                        Migration von Nagios auf den CMC.html[                       Migration von Nagios auf den CMC]
- link:cmc_differences                      Besonderheiten des CMC.html[                     Besonderheiten des CMC]
- link:cmc_differences.htmlcheckhelper[         Aufgabe und Tuning der Checkhelper]
- link:cmc_differences.htmlmetrics[             Wie der CMC Messdaten aufzeichnet]
- link:cmc_files                            Dateien und Verzeichnisse - wo liegt was?.html[                           Dateien und Verzeichnisse - wo liegt was?]

SB:cee_architecture.png

=== Messdaten

- link:graphing.htmlcustom_graphs[              Erstellen von Customgraphen]
- link:fehlt                                Combined Graphs.html[                               Combined Graphs]
- link:graphing.htmlrrds[                       Tuning und Konvertierung der RRDs]
- link:graphing.htmlrrdcached[                  Der RRD-Cache]


== Tag 5

=== Benutzerverwaltung über LDAP

- link:ldap.htmlconnect[                        Anbindung von Active Directory und OpenLDAP]
- link:ldap.htmlcontact_groups[                 Kontaktgruppen und Rollen per LDAP setzen]
- link:ldap.htmlother_attr[                     Abbildung weiterer Attribute]
- link:ldap.htmldistr_wato[                     LDAP in einer verteilten Umgebung]

DO:Mit dem Test-AD-Server kann man das an einem praktischen Beispiel
DO:durchspielen. Die Anbindung mehrerer LDAP-Quellen ist so simpel, dass man
DO:hier nichts extra zu schreiben muss. Eventuell kommt hier später noch ein
DO:Best-Practice-Beispiel hinzu, wo mit mehreren Anbindungsregeln gearbeitet
DO:wird? Falls es in der Schulung schon ein Beispiel gibt, dann gerne an mich
DO:weitergeben.

=== Plugins & Agenten

- link:monitoring_oracle                    Überwachung von ORACLE.html[                   Überwachung von ORACLE]
- link:piggyback                            Daten, welche von einem Host für einen anderen bereitgestellt werden.html[                           Daten, welche von einem Host für einen anderen bereitgestellt werden]
- link:monitoring_vmware                    Überwachung von VMWare ESX.html[                   Überwachung von VMWare ESX]
- link:fehlt                                Cloud-Dienste: AWS, Azure, Kubernetes, Docker.html[                               Cloud-Dienste: AWS, Azure, Kubernetes, Docker]
- link:dcd                                  Automatische Konfiguration mit DCD.html[                                 Automatische Konfiguration mit DCD]
- link:fehlt                                Überwachung von Solaris, HP-UX und AIX.html[                               Überwachung von Solaris, HP-UX und AIX]

=== NagVis

- link:nagvis                                Einführung in NagVis.html[                               Einführung in NagVis]
- link:nagvis.htmlmaps[                          Erstellen von Karten und Platzieren von Objekten]
