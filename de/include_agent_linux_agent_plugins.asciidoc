// -*- coding: utf-8 -*-
include::global_attr.adoc[]


[#plugins]
== Agent um Plugins erweitern

=== Was sind Agentenplugins?

Das Agentenskript `/usr/bin/check_mk_agent` enthält eine ganze Reihe von Sektionen, welche Überwachungsdaten für diverse Check-Plugins liefern, die dann von der Service-Erkennung automatisch gefunden werden.
Dazu gehören alle wichtigen Überwachungen des Betriebssystems.

Darüber hinaus gibt es die Möglichkeit, den Agenten um _Agentenplugins_ zu erweitern.
Das sind kleine Skripte oder Programme, die vom Agenten aufgerufen werden und diesen um weitere Sektionen mit zusätzlichen Monitoring-Daten erweitern.
Das {CMK} Projekt liefert eine ganze Reihe solcher Plugins mit aus, welche -- wenn sie korrekt installiert und konfiguriert sind -- in der Service-Erkennung automatisch neue Services liefern.

Warum sind diese Plugins nicht einfach in den Agenten fest integriert?
Für jedes der Plugins gibt es einen der folgenden Gründe:

* Das Plugin ist in einer anderen Programmiersprache als Shell geschrieben und kann daher nicht inline realisiert werden (Beispiel: `mk_logwatch`).
* Das Plugin benötigt sowieso eine Konfiguration, ohne die es nicht funktionieren würde (Beispiel: `mk_oracle`).
* Das Plugin ist so speziell, dass es von den meisten Anwendern nicht benötigt wird (Beispiel: `plesk_domains`).


[#manualplugins]
=== Manuelle Installation

Die mitgelieferten Plugins für Linux und Unix finden Sie alle auf dem {CMK} Server unter `share/check_mk/agents/plugins`.
Auch über die Download-Seite der Agenten im Setup-Menü (wie im Kapitel xref:download_gui[Installation] beschrieben) sind diese im Kasten [.guihint]#Plugins# verfügbar:

.Der Anfang der langen Liste verfügbarer Agentenplugins
image::agent_linux_files_agent_plugins.png[alt="Download-Seite mit den Agentenplugins."]

Zu allen von uns mitgelieferten Agentenplugins existieren die passenden Check-Plugins, welche deren Daten auswerten und Services erzeugen können.
Diese sind bereits mitinstalliert, so dass neu gefundene Services sofort erkannt werden und konfiguriert werden können.

*Hinweis:* Bevor Sie ein Plugin auf dem Host installieren, werfen Sie einen Blick in die entsprechende Datei.
Oft finden Sie dort wichtige Hinweise zur korrekten Verwendung des Plugins.

Die eigentliche Installation ist dann einfach:
Kopieren Sie die Datei nach `/usr/lib/check_mk_agent/plugins`.
Achten Sie dabei darauf, dass diese ausführbar ist.
Falls nicht, verwenden Sie ein `chmod 755`.
Der Agent wird das Plugin sonst nicht ausführen.
Insbesondere, wenn Sie die Dateien nicht per `scp` übertragen sondern per HTTP von der Download-Seite holen, geht die Ausführungsberechtigung verloren.

Sobald das Plugin ausführbar und im richtigen Verzeichnis liegt, wird es vom Agenten automatisch aufgerufen und es entsteht eine neue Sektion in der Agentenausgabe.
Diese trägt üblicherweise den gleichen Namen wie das Plugin.
Komplexe Plugins (z.B. `mk_oracle`) erzeugen sogar eine ganze Reihe an neuen Sektionen.


[#pluginconfig]
=== Konfiguration

Manche Plugins brauchen eine Konfigurationsdatei in `/etc/check_mk/`, damit sie funktionieren können.
Bei anderen ist eine Konfiguration optional und ermöglicht besondere Features oder Anpassungen.
Wieder andere funktionieren einfach so.
Sie haben verschiedene Quellen, um an Informationen zu kommen:

* Die Dokumentation der zugehörigen Check-Plugins in Ihrer {CMK} Instanz, welche Sie über [.guihint]#Setup > Services > Catalog of check plugins# erreichen.
* Kommentare im Plugin selbst (oft sehr hilfreich!).
* Einen passenden Artikel in diesem Handbuch (z.B. über das Überwachen von xref:monitoring_oracle#[Oracle])


[#async_plugins]
=== Asynchrone Ausführung

Ebenso wie bei xref:mrpe[MRPE] können Sie auch Plugins asynchron ausführen lassen.
Das ist sehr nützlich, wenn die Plugins eine lange Laufzeit haben und die gewonnenen Statusdaten ohnehin nicht jede Minute neu erzeugt werden brauchen.

Die asynchrone Ausführung wird nicht über eine Datei konfiguriert.
Stattdessen erzeugen Sie unter `/usr/lib/check_mk_agent/plugins` ein Unterverzeichnis, dessen Name eine Zahl ist: eine Anzahl von Sekunden.
Plugins in diesem Verzeichnis werden nicht nur asynchron ausgeführt, sondern gleichzeitig geben Sie mit der Sekundenzahl eine Mindestwartezeit vor, bevor das Plugin erneut ausgeführt werden soll.
Wird der Agent vor Ablauf der Zeit erneut abgefragt, verwendet er zwischengespeicherte Daten von der letzten Ausführung des Plugins.
Damit können Sie ein größeres Intervall für das Plugin konfigurieren, als die typische eine Minute.

Folgendes Beispiel zeigt, wie das Plugin `my_foo_plugin` von synchroner Ausführung auf eine asynchrone Ausführung mit einem Intervall von 5 Minuten (oder 300 Sekunden) umgestellt wird:

[{shell}]
----
{c-root} cd /usr/lib/check_mk_agent/plugins
{c-root} mkdir 300
{c-root} mv my_foo_plugin 300
----

*Hinweis:* Beachten Sie, dass einige Plugins bereits von sich aus eine asynchrone Ausführung umsetzen.
Dazu gehört `mk_oracle`.
Installieren Sie solche Plugins direkt nach `/usr/lib/check_mk_agent/plugins`.


[#install_plugins_using_bakery]
=== Installation über die Agentenbäckerei

{cee-only}
In den {CEE} können die mitgelieferten Plugins über die xref:glossar#agent_bakery[Agentenbäckerei] konfiguriert werden.
Diese sorgt sowohl für die Installation des Plugins selbst als auch für die korrekte Erstellung der Konfigurationsdatei, falls eine notwendig sein sollte.

Jedes Plugin wird über eine Agentenregel konfiguriert.
Sie finden die passenden Regelsätze in [.guihint]#Setup > Agents > Windows, Linux, Solaris, AIX > Agent rules > Agent Plugins#:

.Liste mit Regeln für die Agentenplugins in den {EE}
image::agent_linux_rules_agent_plugins.png[alt="Seite mit den Regeln zur Konfiguration der Agentenplugins in den {EE}."]


=== Manuelle Ausführung

Da Agentenplugins ausführbare Programme sind, können Sie diese zu Test-und Diagnosezwecken auch von Hand ausführen.
Es gibt allerdings Plugins, welche bestimmte vom Agenten gesetzten Umgebungsvariablen brauchen, um z.B. ihre Konfigurationsdatei zu finden.
Setzen Sie diese vor der Ausführung von Hand:

[{shell-raw}]
----
{c-root} export MK_LIBDIR=/usr/lib/check_mk_agent
{c-root} export MK_CONFDIR=/etc/check_mk
{c-root} export MK_VARDIR=/var/lib/check_mk_agent
{c-root} /usr/lib/check_mk_agent/plugins/mk_foobar
<<<foobar>>>
FOO BAR BLA BLUBB 17 47 11
----

Einige Plugins kennen auch spezielle Aufrufoptionen zum Debuggen.
Werfen Sie einfach einen Blick in die Plugin-Datei.
